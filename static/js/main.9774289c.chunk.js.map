{"version":3,"sources":["actions/actionTypes.js","actions/rootActions.js","actions/authActions.js","actions/registrationActions.js","components/FeatureViews/Dashboard/Dashboard.js","components/FeatureViews/Registration/RegistrationActions.js","components/FeatureViews/Registration/MobileRegistration.js","components/BackButton.js","components/FeatureViews/Registration/RegistrationLanding.js","components/FeatureViews/Registration/Registration.js","components/FeatureViews/Registration/Validations.js","components/Form/Form.js","actions/calenderActions.js","components/FeatureViews/Scheduler/Scheduler.js","components/identifier.svg","components/FeatureViews/Accounts/ProfileCard.js","components/FeatureViews/Accounts/Accounts.js","components/FeatureViews/Registration/RegistrationCourse.js","components/FeatureViews/Registration/CourseCategory.js","components/Authentication/LoginPage.js","components/Routes/ProtectedRoute.js","components/FeatureViews/Scheduler/SessionActions.js","components/FeatureViews/Scheduler/SessionView.js","components/ErrorNotFoundPage/ErrorNotFoundPage.js","components/FeatureViews/Accounts/TabComponents/Schedule.js","components/FeatureViews/Accounts/TabComponents/InstructorCourses.js","components/FeatureViews/Accounts/TabComponents/Bio.js","components/FeatureViews/Accounts/TabComponents/CourseViewer.js","components/FeatureViews/Accounts/TabComponents/PaymentHistory.js","components/FeatureViews/Accounts/TabComponents/ParentContact.js","components/FeatureViews/Accounts/TabComponents/StudentInfo.js","components/FeatureViews/Accounts/TabComponents/PayCourses.js","components/FeatureViews/Accounts/TabComponents/Notes.js","components/FeatureViews/Accounts/ComponentViewer.js","components/FeatureViews/Accounts/ProfileHeading.js","components/FeatureViews/Accounts/UserProfile.js","components/FeatureViews/Accounts/TabComponents/CourseSessionStatus.js","components/Form/ParentPayment.js","components/Routes/rootRoutes.js","theme/muiTheme.js","components/Navigation/Navigation.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/registrationReducer.js","reducers/authReducer.js","reducers/usersReducer.js","reducers/rootReducer.js","reducers/courseReducer.js","reducers/calenderReducer.js","reducers/enrollmentReducer.js","reducers/paymentsReducer.js","index.js"],"names":["FETCH_COURSES_SUCCESSFUL","FETCH_COURSES_FAILED","FETCH_STUDENTS_SUCCESSFUL","FETCH_STUDENTS_FAILED","FETCH_PARENTS_SUCCESSFUL","FETCH_PARENTS_FAILED","FETCH_CATEGORIES_SUCCESSFUL","FETCH_CATEGORIES_FAILED","FETCH_INSTRUCTORS_SUCCESSFUL","FETCH_INSTRUCTORS_FAILED","ADD_STUDENT_FIELD","ADD_COURSE_FIELD","ADD_FIELD","SUCCESSFUL_LOGIN","FAILED_LOGIN","LOGOUT","RESET_ATTEMPT","REMOVE_FIELD","POST_STUDENT_SUCCESSFUL","POST_STUDENT_FAILED","POST_PARENT_SUCCESSFUL","POST_PARENT_FAILED","POST_INSTRUCTOR_SUCCESSFUL","POST_INSTRUCTOR_FAILED","ADD_EVENT","DELETE_EVENT","DELETE_ALL_EVENTS","FILTER_EVENT","SUBMIT_INITIATED","RESET_SUBMIT_STATUS","instance","axios","create","baseURL","typeToEndpoint","student","parent","instructor","course","course category","typeToFetchActions","types","typeToPostActions","fetchData","type","hasOwnProperty","endpoint","_typeToFetchActions$t","Object","slicedToArray","successAction","failAction","dispatch","get","headers","Authorization","concat","sessionStorage","getItem","then","_ref","data","payload","catch","error","console","keys","postData","body","_typeToPostActions$ty","Promise","resolve","post","Content-Type","_ref2","patchData","id","_typeToPostActions$ty2","patch","_ref3","submitParentAndStudent","parentID","studentID","studentEndpoint","parentEndpoint","_typeToPostActions$st","studentSuccessAction","studentFailAction","_typeToPostActions$pa","parentSuccessAction","parentFailAction","request","method","url","parentResponse","objectSpread","user","studentResponse","login","email","password","saveLogin","username","logout","resetAttemptStatus","parseGender","Male","Female","Do not disclose","parseBirthday","date","_date$split","split","_date$split2","month","day","year","getRegistrationForm","addStudentField","addCourseField","addField","path","removeField","fieldIndex","conditional","submitForm","state","form","first_name","last_name","gender","address","city","phone_number","zipcode","grade","age","school","birth_date","relationship","toUpperCase","selectedParent","value","resetSubmitStatus","Dashboard","react_default","a","createElement","className","Grid_default","container","spacing","Card_default","CardActionArea_default","CardMedia_default","CardContent_default","Typography_default","gutterBottom","variant","component","CardActions_default","Button_default","size","color","Component","connect","withStyles","paper","border","props","core_Menu_default","assign","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","RegistrationActions","_useState","useState","_useState2","courseTitle","encodeURIComponent","direction","justify","item","NavLink","to","PersonAdd_default","MobileRegistration","getInstructorByID","_this","teachers","find","teacher","CoursesView","courses","map","i","Grow_default","in","key","xs","index_es","style","fontWeight","course_title","instructor_id","dates","days","time","onClick","e","preventDefault","goToRoute","route","this","history","push","categoriesViewToggle","cats","cat","image","title","cat_title","bind","CategoryView","categories","withRouter","BackButton","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","alert","warn","setState","goBack","onBack","actionName","saveForm","_this2","Fragment","handleClick","ArrowBack_default","Modal_default","aria-labelledby","aria-describedby","open","hideWarning","alertMessage","denyAction","alertDenyText","confirmAction","alertConfirmText","filter","courseID","setCourses","_useState3","_useState4","setAnchorEl","_useState5","_useState6","_useState7","subject","_useState8","setFilter","match","handleFilterClick","event","currentTarget","renderFilter","filterType","options","values","instructors","_ref4","label","name","user_id","toConsumableArray","Array","CustomClearText","customStyles","clearIndicator","base","cursor","isFocused","option","textAlign","react_select_browser_esm","onChange","filters","includes","defineProperty","handleFilterChange","closeMenuOnSelect","components","ClearIndicator","indicatorProps","_indicatorProps$child","children","getStyles","_indicatorProps$inner","ref","restInnerProps","objectWithoutProperties","padding","placeholder","styles","isMulti","weekday","0","1","2","3","4","5","6","Paper_default","components_BackButton","layout","md","align","Hidden_default","xsDown","start_date","Date","schedule","end_date","start_time","substr","end_time","toDateString","alignItems","course_id","textDecoration","tuition","Registration","mobileViewToggle","mobileView","window","addEventListener","resize","innerWidth","lg","Registration_RegistrationActions","Registration_RegistrationLanding","courseCategories","Users","Course","registrationActions","bindActionCreators","rootActions","NumberValidation","input","String","PhoneValidation","EmailValidation","ShortTextValidation","AddressValidation","ZipCodeValidation","BirthdayValidation","M","F","U","Form","removeItem","nextSection","activeStep","activeSection","submitPending","preLoaded","existingUser","prevState","JSON","parse","formType","params","edit","students","parents","parent_id","Basic Information","Student First Name","Student Last Name","Gender","Grade","Age","School","Student Email","Student Phone Number","Parent Information","Select Parent","Parent First Name","Parent Last Name","Parent Email","Address","City","State","Zip Code","Relationship to Student","Phone Number","Basic Information_validated","Parent Information_validated","First Name","Last Name","E-Mail","Date of Birth","Education","College","Degree(s)","Minor(s)","Experience","Subject(s) Tutor Can Teach","Specialties","Background","Notes","Education_validated","Experience_validated","registrationForm","oldState","formContents","stringify","NewState","section_titles","_this2$props$courses$","forEach","isArray","validateSection","section","getFormObject","step","_this3","currSectionTitle","getActiveSection","required","every","valid","_this4","nextSectionInput","some","field","_this5","validateField","length","conditionalField","getConditionalFieldFromCurrentSection","nextActiveStep","nextActiveSection","newState","_this6","sectionTitle","fieldValue","_this7","Boolean","InputValidation","isValid","parseInt","emails","setItem","_this8","OldState","selectedParentID","Parent Phone Number","arr1","arr2","stringValue","stringOtherValue","otherValue","j","uniqueVals","Set","indexOfString","splice","_this9","fieldTitle","FormControl_default","InputLabel_default","htmlFor","Select_default","displayEmpty","_ref5","target","onSelectChange","MenuItem_default","courseList","capacity","roster","removeDuplicates","fieldCount","reduce","total","_ref6","width","Clear_default","aria-label","forceUpdate","studentList","_ref7","studentCount","_ref8","instructorList","_ref9","currParentList","_ref10","isClearable","TextField_default","multiline","margin","helperText","fullWidth","full","handleFieldUpdate","onBlur","_this10","currentForm","param","numSameTypeFields","count","otherField","_this11","baseName","currentSectionFields","currentSectionValidationFields","newSectionFields","newSectionValidationFields","index","hasNotRemoved","entries","_ref11","_ref12","origFieldKey","newFieldName","_this12","_this$state","steps","Stepper_default","orientation","Step_default","StepLabel_default","StepContent_default","lastFieldOfType","reverse","renderField","field_limit","Fab_default","Add_default","disabled","handleBack","handleNext","_this13","fontSize","_ref13","fieldVal","_this14","react_router","message","renderTitle","submitStatus","renderForm","renderSubmitted","Dialog_default","onClose","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","autoFocus","fetchTeacherAvailabilities","addEvent","deleteEvent","filterEvent","Scheduler","calendarComponentRef","React","createRef","toggleWeekends","calendarWeekends","changeView","current","getApi","currentDate","viewValue","goToNext","next","goToPrev","prev","today","view","changeViewToResource","resourceIcon","calendarIcon","calendarResources","getRoomResources","changeViewToCalendar","getEvents","courseKeys","sessions","sessionsInViewList","courseKey","sessionKey","session","description","room_id","sessionsInView","sessionsList","el","newSessions","session_id","log","newEvents","calendarEvents","handleResourceFilterChange","rooms","getInstructorResources","inst","filterValue","resourceFilterValue","info","string","tippy","content","start","slice","extendedProps","substring","theme","placement","interactive","IconButton_default","DateRangeOutlined_default","ViewList_default","Search_default","native","inputProps","ChevronLeftOutlined_default","ChevronRightOutlined_default","main_esm","defaultView","header","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listViewPlugin","resourceTimelinePlugin","weekends","displayEventTime","eventColor","eventSources","events","timeZone","eventMouseEnter","handleToolTip","eventLimit","nowIndicator","resourceOrder","resourceAreaWidth","resources","schedulerLicenseKey","NewCourseList","CourseSessions","InstructorList","calenderActions","_extends","arguments","source","prototype","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","identifier_ref2","d","identifier_SvgIdentifier","svgRef","height","viewBox","ForwardRef","forwardRef","ProfileCard","__webpack_require__","p","usersList","viewToggle","hash","charCodeAt","colour","toString","sm","role","Hidden_Hidden","Avatar_default","backgroundColor","stringToColor","join","Chip_default","charAt","marginTop","PhoneOutlined_default","addDashes","EmailOutlined_default","ParentList","StudentList","Accounts","handleChange","assertThisInitialized","receptionist","newTabIndex","newUsersList","cardView","Accounts_ProfileCard","Tabs_default","indicatorColor","textColor","Tab_default","ViewModule_default","Table_default","TableHead_default","TableRow_default","TableCell_default","mdDown","TableBody_default","row","scope","ReceptionistList","TableToolbar","heading","courseRoster","enrollments","Enrollments","object","expanded","dayConverter","timeOptions","hour","minute","dateOptions","startDate","endDate","startTime","toLocaleTimeString","endTime","startDay","toLocaleDateString","endDay","rows","student_id","phone","_props$enrollments$st","notes","session_payment_status","paymentStatus","status","react_router_dom","isActive","borderRadius","href","Email_default","Edit_default","CalendarTodayRounded_default","marginLeft","Class_default","avatar","valueBuffer","RegistrationCourse_TableToolbar","react","Typography","CourseCategory","CategoryInView","category","categoryID","auth","authActions","setEmail","setPassword","savePassword","setSavePassword","emailEmpty","setEmailEmpty","_useState9","_useState10","passwordEmpty","setPasswordEmpty","handleTextInput","setter","validator","useEffect","setLogin","token","minHeight","onSubmit","stopPropagation","failedLogin","autoComplete","Checkbox_default","checked","render","rest","exact","SessionView","CalendarToday_default","aria-controls","aria-haspopup","Assignment_default","courseSessions","handleOpen","handleClose","all","sessionData","computedMatch","courseData","mt","ml","varient","maxWidth","FormControlLabel_default","control","Radio_default","labelPlacement","Schedule","InstructorCourses","courseIDs","courseInstructorID","DayConverter","Days","square","Bio","class","background","bio","experience","subjects","languages","CourseViewer","userCourseList","filterCourseByDate","inputEndDate","user_role","userCourseIDList","userRole","userID","userEnrollments","courseEnrollment","enrollmentPayments","numPaidEnrollments","numPaidCourses","_this2$courseDataPars","courseDataParser","PaymentHistory","payments","userPayments","coursePayments","subPayID","payment_id","allUserPayments","coursePaymentsList","payment","Payments","ParentContact","f","EditOutlined_default","StudentInfo","student_ids","Hidden","unpaidEnrollments","unpaidCount","numUnpaid","Math","round","_ref$schedule","calcSessionCost","Paper","_ref6$student","float","user_notes","noteID","note","AddAlertOutlined_default","DeleteForeverOutlined_default","timestamp","ComponentViewer","tab_id","inView","TabComponents_Schedule","TabComponents_InstructorCourses","TabComponents_Bio","TabComponents_CourseViewer","TabComponents_PaymentHistory","TabComponents_ParentContact","TabComponents_Notes","TabComponents_StudentInfo","TabComponents_PayCourses","paddingTop","renderComponent","ProfileHeading","birthday","LocalAtmOutlined_default","getURL","profileDetails","renderStudentProfile","renderTeacherProfile","renderParentProfile","smUp","renderEditButton","userTabs","tab_heading","icon","SchoolOutlined_default","PersonOutlined_default","NoteOutlined_default","AssignmentOutlined_default","AssignmentTurnedInOutlined_default","ContactPhoneOutlined_default","UserProfile","tabs","accountType","accountID","tab","Accounts_ComponentViewer","action_log","rowID","Accounts_ProfileHeading","CourseSessionStatus","_this2$props$match$pa","calendarSessions","paymentSessionStatus","DaysString","end","getDay","sessionDataParse","renderDate","sessionsMax","initialSelectedRows","sessionFields","setSessionFields","selectedRows","setSelectedRows","paymentType","setPaymentType","enteredDiscountCode","setEnteredDiscountCode","renderStudentPayments","numSessions","getPaymentInfo","validSessions","hover","tabIndex","FormLabel_default","RadioGroup_default","OutlinedInput_default","studentCourses","sessionCount","getTotalCost","passedProps","Authentication_LoginPage","FeatureViews_Accounts_Accounts","FeatureViews_Registration_Registration","FeatureViews_Scheduler_Scheduler","Accounts_UserProfile","Form_ParentPayment","TabComponents_CourseSessionStatus","components_Form_Form","Registration_RegistrationCourse","Registration_CourseCategory","ErrorNotFoundPage","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","overrides","MuiButton","text","MuiTabs","root","MuiTab","selected","MuiStepIcon","fill","mobileOpen","setMobileOpen","isLogin","setIsLogin","handleDrawerToggle","NavList","link","Contacts_default","drawer","List_default","NavItem","ListItem_default","button","ListItemIcon_default","ListItemText_default","MuiThemeProvider","CustomTheme","position","Menu_default","flex","implementation","Routes_rootRoutes","components_Navigation_Navigation","location","hostname","initialState","Authentication","localStorage","initAuth","RegistrationForms","studentInfoSection","Student Information","registration_form","form_type","suggestions","suggestion","tutoring","Tutoring Session Type","Student(s)","Private Tutoring","Small Group","Tutor Selection","Payment","Student","Course Selection","initRegistrationForm","SignUpForm","CourseList","CourseCategories","Subjects","7","8","9","10","11","12","13","Tags","tags","session_cost","14","15","23","Current Instructor in School","Textbook Used","Current Grade in Class","Current Topic in School / Topic of Interest","Student Strengths","Student Weakness","general","24","99","64","complete","important","active","amount","discount","code","session_amount","updated_at","created_at","balance","78","79","80","81","work_hours","time_off","101","130","CalenderData","events_in_view","editable","pop","SectionFieldList","getSectionFieldList","fieldName","numFieldType","NewField","setSectionFieldList","formList","firstPathStep","shift","Error","successSubmit","failedSubmit","onSuccess","onFail","onLogout","resetStatus","parseRelationship","MOTHER","FATHER","GUARDIAN","OTHER","addStudents","addParents","addInstructors","rootReducer","combineReducers","undefined","actions","SmallGroupList","NewStudentField","addAStudentField","CourseFieldList","NewCourseField","addACourseField","removeFieldIndex","fieldCounts","Calender","removeIndex","filter_key","filter_value","allCourse","finalResult","store","createStore","applyMiddleware","thunk","ReactDOM","Provider","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9774289c.chunk.js","sourcesContent":["export const ALERT = \"ALERT\";\nexport const FETCH_COURSES_SUCCESSFUL = \"FETCH_COURSES_SUCCESSFUL\";\nexport const FETCH_COURSES_FAILED = \"FETCH_COURSES_FAILED\";\nexport const FETCH_STUDENTS_SUCCESSFUL = \"FETCH_STUDENTS_SUCCESSFUL\";\nexport const FETCH_STUDENTS_FAILED = \"FETCH_STUDENTS_FAILED\";\nexport const FETCH_PARENTS_SUCCESSFUL = \"FETCH_PARENTS_SUCCESSFUL\";\nexport const FETCH_PARENTS_FAILED = \"FETCH_PARENTS_FAILED\";\nexport const FETCH_CATEGORIES_SUCCESSFUL = \"FETCH_CATEGORY_SUCCESSFUL\";\nexport const FETCH_CATEGORIES_FAILED = \"FETCH_CATEGORY_FAILED\";\nexport const FETCH_INSTRUCTORS_SUCCESSFUL = \"FETCH_INSTRUCTORS_SUCCESSFUL\";\nexport const FETCH_INSTRUCTORS_FAILED = \"FETCH_INSTRUCTORS_FAILED\";\nexport const GET_REGISTRATION_FORM = \"GET_REGISTRATION_FORM\";\nexport const ADD_STUDENT_FIELD = \"ADD_STUDENT_FIELD\";\nexport const ADD_COURSE_FIELD = \"ADD_COURSE_FIELD\";\nexport const ADD_FIELD = \"ADD_FIELD\";\nexport const SUBMIT_FORM = \"SUBMIT_FORM\";\nexport const SUCCESSFUL_LOGIN = \"SUCCESFUL_LOGIN\";\nexport const FAILED_LOGIN = \"FAILED_LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const RESET_ATTEMPT = \"RESET_ATTEMPT\";\nexport const REMOVE_FIELD = \"REMOVE_FIELD\";\nexport const POST_STUDENT_SUCCESSFUL = \"POST_STUDENT_SUCCESSFUL\";\nexport const POST_STUDENT_FAILED = \"POST_STUDENT_FAILED\";\nexport const POST_PARENT_SUCCESSFUL = \"POST_PARENT_SUCCESSFUL\";\nexport const POST_PARENT_FAILED = \"POST_PARENT_FAILED\";\nexport const POST_INSTRUCTOR_SUCCESSFUL = \"POST_INSTRUCTOR_SUCCESSFUL\";\nexport const POST_INSTRUCTOR_FAILED = \"POST_INSTRUCTOR_FAILED\";\nexport const POST_CATEGORY_SUCCESSFUL = \"POST_CATEGORY_SUCCESSFUL\";\nexport const POST_CATEGORY_FAILED = \"POST_CATEGORY_FAILED\";\nexport const POST_COURSE_SUCCESSFUL = \"POST_COURSE_SUCCESSFUL\";\nexport const POST_COURSE_FAILED = \"POST_COURSE_FAILED\";\nexport const ADD_EVENT = \"ADD_EVENT\";\nexport const DELETE_EVENT = \"DELETE_EVENT\";\nexport const DELETE_ALL_EVENTS = \"DELETE_ALL_EVENTS\";\nexport const FILTER_EVENT = \"FILTER_EVENT\";\nexport const SUBMIT_INITIATED = \"SUBMIT_INITIATED\";\nexport const RESET_SUBMIT_STATUS = \"RESET_SUBMIT_STATUS\";\n","import * as types from \"./actionTypes\";\nimport axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"http://localhost:8000\",\n});\n\nconst typeToEndpoint = {\n    \"student\": \"/account/students/\",\n    \"parent\": \"/account/parents/\",\n    \"instructor\": \"/account/instructors/\",\n    \"course\": \"/courses/catalog/\",\n    \"course category\": \"/courses/categories/\",\n};\n\nconst typeToFetchActions = {\n    \"student\": [\n        types.FETCH_STUDENTS_SUCCESSFUL,\n        types.FETCH_STUDENTS_FAILED,\n    ],\n    \"parent\": [\n        types.FETCH_PARENTS_SUCCESSFUL,\n        types.FETCH_PARENTS_FAILED,\n    ],\n    \"instructor\": [\n        types.FETCH_INSTRUCTORS_SUCCESSFUL,\n        types.FETCH_INSTRUCTORS_FAILED,\n    ],\n    \"course\": [\n        types.FETCH_COURSES_SUCCESSFUL,\n        types.FETCH_COURSES_FAILED,\n    ],\n    \"course category\": [\n        types.FETCH_CATEGORIES_SUCCESSFUL,\n        types.FETCH_CATEGORIES_FAILED,\n    ],\n};\n\nconst typeToPostActions = {\n    \"student\": [\n        types.POST_STUDENT_SUCCESSFUL,\n        types.POST_STUDENT_FAILED,\n    ],\n    \"parent\": [\n        types.POST_PARENT_SUCCESSFUL,\n        types.POST_PARENT_FAILED,\n    ],\n    \"instructor\": [\n        types.POST_INSTRUCTOR_SUCCESSFUL,\n        types.POST_INSTRUCTOR_FAILED,\n    ],\n    \"course\": [\n        types.POST_COURSE_SUCCESSFUL,\n        types.POST_COURSE_FAILED,\n    ],\n    \"course category\": [\n        types.POST_CATEGORY_SUCCESSFUL,\n        types.POST_CATEGORY_FAILED,\n    ],\n};\n\nexport const fetchData = (type) => {\n    if (typeToEndpoint.hasOwnProperty(type)) {\n        const endpoint = typeToEndpoint[type];\n        const [successAction, failAction] = typeToFetchActions[type];\n        return (dispatch) => instance.get(endpoint, {\n            headers: {\n                \"Authorization\": `Token ${sessionStorage.getItem(\"authToken\")}`,\n            },\n        })\n            .then(({data}) => {\n                dispatch({\n                    type: successAction,\n                    payload: data,\n                });\n            })\n            .catch((error) => {\n                dispatch({type: failAction, payload: error});\n            });\n    } else {\n        console.error(`Invalid data type ${type}, must be one of ${Object.keys(typeToEndpoint)}`);\n    }\n};\n\nexport const postData = (type, body) => {\n    if (typeToEndpoint.hasOwnProperty(type)) {\n        const endpoint = typeToEndpoint[type];\n        const [successAction, failAction] = typeToPostActions[type];\n        return (dispatch) => new Promise((resolve) => {\n            dispatch({\n                type: types.SUBMIT_INITIATED,\n                payload: null,\n            });\n            resolve();\n        }).then(() => {\n            instance.post(endpoint, body, {\n                headers: {\n                    \"Authorization\": `Token ${sessionStorage.getItem(\"authToken\")}`,\n                    \"Content-Type\": \"application/json\",\n                },\n            })\n                .then(({data}) => {\n                    dispatch({\n                        type: successAction,\n                        payload: data,\n                    });\n                })\n                .catch((error) => {\n                    dispatch({type: failAction, payload: error});\n                });\n        });\n    } else {\n        console.error(`Invalid data type ${type}, must be one of ${Object.keys(typeToEndpoint)}`);\n    }\n};\n\nexport const patchData = (type, body, id) => {\n    if (typeToEndpoint.hasOwnProperty(type)) {\n        const endpoint = typeToEndpoint[type];\n        const [successAction, failAction] = typeToPostActions[type];\n        return (dispatch) => new Promise((resolve) => {\n            dispatch({\n                type: types.SUBMIT_INITIATED,\n                payload: null,\n            });\n            resolve();\n        }).then(() => {\n            instance.patch(`${endpoint}${id}/`, body, {\n                headers: {\n                    \"Authorization\": `Token ${sessionStorage.getItem(\"authToken\")}`,\n                    \"Content-Type\": \"application/json\",\n                },\n            })\n                .then(({data}) => {\n                    dispatch({\n                        type: successAction,\n                        payload: data,\n                    });\n                })\n                .catch((error) => {\n                    dispatch({type: failAction, payload: error});\n                });\n        });\n    } else {\n        console.error(`Invalid data type ${type}, must be one of ${Object.keys(typeToEndpoint)}`);\n    }\n};\n\nexport const submitParentAndStudent = (parent, student, parentID, studentID) => {\n    const studentEndpoint = typeToEndpoint[\"student\"];\n    const parentEndpoint = typeToEndpoint[\"parent\"];\n    const [studentSuccessAction, studentFailAction] = typeToPostActions[\"student\"];\n    const [parentSuccessAction, parentFailAction] = typeToPostActions[\"parent\"];\n    return (dispatch) => new Promise((resolve) => {\n        dispatch({\n            type: types.SUBMIT_INITIATED,\n            payload: null,\n        });\n        resolve();\n    }).then(() => {\n        instance.request({\n            \"data\": parent,\n            \"headers\": {\n                \"Authorization\": `Token ${sessionStorage.getItem(\"authToken\")}`,\n                \"Content-Type\": \"application/json\",\n            },\n            \"method\": parentID ? \"patch\" : \"post\",\n            \"url\": parentID ? `${parentEndpoint}${parentID}/` : parentEndpoint,\n        })\n            .then((parentResponse) => {\n                dispatch({\n                    type: parentSuccessAction,\n                    payload: parentResponse.data,\n                });\n                instance.request({\n                    \"data\": {\n                        ...student,\n                        \"parent\": parentResponse.data.user.id,\n                    },\n                    \"headers\": {\n                        \"Authorization\": `Token ${sessionStorage.getItem(\"authToken\")}`,\n                        \"Content-Type\": \"application/json\",\n                    },\n                    \"method\": studentID ? \"patch\" : \"post\",\n                    \"url\": studentID ? `${studentEndpoint}${studentID}/` : studentEndpoint,\n                })\n                    .then((studentResponse) => {\n                        dispatch({\n                            type: studentSuccessAction,\n                            payload: studentResponse.data,\n                        });\n                    }, (error) => {\n                        dispatch({type: studentFailAction, payload: error});\n                    });\n            }, (error) => {\n                dispatch({type: parentFailAction, payload: error});\n            });\n    });\n};\n","import * as types from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const login = (email, password, saveLogin) =>\n    (dispatch) => axios.post(\"http://localhost:8000/auth_token/\", {\n        username: email,\n        password,\n    })\n        .then(({data}) => {\n            dispatch({\n                type: types.SUCCESSFUL_LOGIN,\n                payload: {\n                    saveLogin,\n                    data,\n                },\n            });\n        })\n        .catch((error) => {\n            dispatch({type: types.FAILED_LOGIN, payload: error});\n        });\n\nexport const logout = () => ({type: types.LOGOUT});\n\nexport const resetAttemptStatus = () => ({type: types.RESET_ATTEMPT});\n","import * as types from \"./actionTypes\";\nimport {submitParentAndStudent, postData, patchData} from \"./rootActions\";\n\nconst parseGender = {\n    \"Male\": \"M\",\n    \"Female\": \"F\",\n    \"Do not disclose\": \"U\",\n};\n\nconst parseBirthday = (date) => {\n    const [month, day, year] = date.split(\"/\");\n    return `${year}-${month}-${day}`;\n};\n\nexport const getRegistrationForm = () =>\n    ({type: types.ALERT, payload: \"alert stuff\"});\n\nexport const addStudentField = () =>\n    ({type: types.ADD_STUDENT_FIELD, payload: \"\"});\n\nexport const addCourseField = () =>\n    ({type: types.ADD_COURSE_FIELD, payload: \"\"});\n\nexport const addField = (path) =>\n    ({type: types.ADD_FIELD, payload: path});\n\nexport const removeField = (path, fieldIndex, conditional) =>\n    ({type: types.REMOVE_FIELD, payload: [path, fieldIndex, conditional]});\n\nexport const submitForm = (state, id) => {\n    switch (state.form) {\n        case \"student\": {\n            const student = {\n                \"user\": {\n                    \"first_name\":\n                        state[\"Basic Information\"][\"Student First Name\"],\n                    \"last_name\":\n                        state[\"Basic Information\"][\"Student Last Name\"],\n                    \"email\": state[\"Basic Information\"][\"Student Email\"],\n                    \"password\": \"password123\",\n                },\n                \"gender\":\n                    parseGender[state[\"Basic Information\"][\"Gender\"]],\n                \"address\": state[\"Parent Information\"][\"Address\"],\n                \"city\": state[\"Parent Information\"][\"City\"],\n                \"phone_number\":\n                    state[\"Basic Information\"][\"Student Phone Number\"] ||\n                    null,\n                \"state\": state[\"Parent Information\"][\"State\"],\n                \"zipcode\": state[\"Parent Information\"][\"Zip Code\"],\n                \"grade\": state[\"Basic Information\"][\"Grade\"],\n                \"age\": state[\"Basic Information\"][\"Age\"],\n                \"school\": state[\"Basic Information\"][\"School\"],\n                \"birth_date\": \"2019-01-01\",\n            };\n            const parent = {\n                \"user\": {\n                    \"email\": state[\"Parent Information\"][\"Parent Email\"],\n                    \"password\": \"password123\",\n                    \"first_name\":\n                        state[\"Parent Information\"][\"Parent First Name\"],\n                    \"last_name\":\n                        state[\"Parent Information\"][\"Parent Last Name\"],\n                },\n                \"gender\":\n                    parseGender[state[\"Parent Information\"][\"Gender\"]],\n                \"address\": state[\"Parent Information\"][\"Address\"],\n                \"city\": state[\"Parent Information\"][\"City\"],\n                \"state\": state[\"Parent Information\"][\"State\"],\n                \"phone_number\":\n                    state[\"Parent Information\"][\"Phone Number\"] ||\n                    null,\n                \"zipcode\": state[\"Parent Information\"][\"Zip Code\"],\n                \"relationship\":\n                    state[\"Parent Information\"][\"Relationship to Student\"]\n                        .toUpperCase(),\n                \"birth_date\": \"2019-01-01\",\n            };\n            const selectedParent = state[\"Parent Information\"][\"Select Parent\"];\n            return submitParentAndStudent(parent, student,\n                selectedParent ? selectedParent.value : null, id);\n        }\n        case \"instructor\": {\n            const instructor = {\n                \"user\": {\n                    \"email\": state[\"Basic Information\"][\"E-Mail\"],\n                    \"password\": \"password123\",\n                    \"first_name\": state[\"Basic Information\"][\"First Name\"],\n                    \"last_name\": state[\"Basic Information\"][\"Last Name\"],\n                },\n                \"gender\": parseGender[state[\"Basic Information\"][\"Gender\"]],\n                \"address\": state[\"Basic Information\"][\"Address\"],\n                \"city\": state[\"Basic Information\"][\"City\"],\n                \"state\": \"CA\",\n                \"phone_number\": state[\"Basic Information\"][\"Phone Number\"],\n                \"zipcode\": state[\"Basic Information\"][\"Zip Code\"],\n                \"age\": 21,\n                \"birth_date\": parseBirthday(state[\"Basic Information\"][\"Date of Birth\"]),\n            };\n            if (id) {\n                return patchData(\"instructor\", instructor, id);\n            } else {\n                return postData(\"instructor\", instructor);\n            }\n        }\n        default:\n            console.error(`Invalid form type ${state.form}`);\n    }\n};\n\nexport const resetSubmitStatus = () =>\n    ({type: types.RESET_SUBMIT_STATUS, payload: null});\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport './Dashboard.scss'\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nclass Dashboard extends Component {\n    render() {\n        return (<div className=\"`Dashboard`\">\n            <h1>Dashboard</h1>\n            <Grid container spacing={16} className=\"Root\">\n                <Card>\n                    <CardActionArea>\n                        <CardMedia>\n                        </CardMedia>\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                Contact Us\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActions>\n                        <Button size=\"small\" color=\"primary\">\n                            Share\n                        </Button>\n                        <Button size=\"small\" color=\"primary\">\n                            Learn More\n                        </Button>\n                    </CardActions>\n                </Card>\n            </Grid>\n        </div>)\n    }\n}\n\nDashboard.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Dashboard);\n","import PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\n\n// Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport NewUser from \"@material-ui/icons/PersonAdd\";\nimport NewTutor from \"@material-ui/icons/Group\";\nimport NewCourse from \"@material-ui/icons/School\";\nimport { NavLink } from \"react-router-dom\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"./registration.scss\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: \"1px solid #d3d4d5\",\n    },\n})((props) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n        }}\n        transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n        }}\n        {...props}\n    />\n));\n\nfunction RegistrationActions(props) {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    function handleClick(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        setAnchorEl(null);\n    }\n\n    const courseRoute = props.courseTitle ? encodeURIComponent(props.courseTitle) : \"\";\n    return (\n        <Grid container\n            direction=\"row\"\n            justify=\"flex-start\"\n            className=\"registration-action-control\">\n            <Grid item>\n                <Button component={NavLink} to=\"/registration/form/student\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    className=\"button\">\n                    <NewUser className=\"icon\" />\n                    New Student\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nRegistrationActions.propTypes = {\n    courseTitle: PropTypes.string,\n    admin: PropTypes.bool,\n};\n\nexport default RegistrationActions;\n","import React, {Component} from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport {Typography} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Grow from \"@material-ui/core/Grow\";\nimport {withRouter} from 'react-router'\n\nimport '../../../theme/theme.scss';\n\nconst CategoryView = (cats) => {\n    return cats.map((cat,i)=>{\n        return <Grow in={true} key={i}>\n            <Grid item xs={12}>\n                <Card className={\"category-card\"}>\n                    <CardMedia\n                        className={\"media\"}\n                        image={\"https://www.google.com/url?sa=i&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwjBz-2K9ZviAhWiGDQIHdopCZYQjRx6BAgBEAU&url=https%3A%2F%2Fwww.losdschools.org%2Fdomain%2F1704&psig=AOvVaw0GpyRGZMw9QDj5zOLnmw85&ust=1557954002247055\"}\n                        title={\"AP Test Logo\"}/>\n                    <CardContent className={\"text\"}>\n                        <Typography gutterBottom variant={\"h6\"} component={\"h2\"}>\n                            {cat.cat_title}\n                        </Typography>\n                        <Typography component=\"p\">\n                            Lizards are a widespread group of squamate reptiles, with over 6,000 species.\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button size={\"small\"} color={\"secondary\"}>\n                            Explore\n                        </Button>\n                        <Button size={\"small\"} color={\"secondary\"}>\n                            Learn More\n                        </Button>\n                    </CardActions>\n                </Card>\n            </Grid>\n        </Grow>\n    })\n};\n\nclass MobileRegistration extends Component {\n\n    goToRoute(route){\n        this.props.history.push(route);\n    }\n\n    getInstructorByID = ( id ) =>{\n        return this.props.teachers.find((teacher)=>{\n            return teacher.id === id;\n        })['name'];\n    };\n\n    CoursesView = (courses) => {\n        return courses.map((course,i)=>{\n            return <Grow in={true} key={i}>\n                <Grid item xs={12}>\n                    <Card className={\"category-card\"}>\n                        <CardContent className={\"text\"}>\n                            <Typography gutterBottom variant={\"h4\"} component={\"h2\"} style={{fontWeight:'500'}}>\n                                {course.course_title}\n                            </Typography>\n                            <Typography variant={\"h6\"} component={\"h3\"} >\n                                {this.getInstructorByID(course.instructor_id)}\n                            </Typography>\n                            <Typography component=\"p\">\n                                {course.dates} | {course.days} | {course.time}\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button\n                                size={\"small\"}\n                                color={\"primary\"}\n                                onClick={(e) => {e.preventDefault(); this.goToRoute('/registration/form/course/' + course.course_title)}}\n                            >\n                                Register\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            </Grow>\n        })\n    };\n\n    render(){\n        return (\n            <div className=\"\">\n                <Grid container spacing={16} className={\"course-categories\"}>\n                { this.props.categoriesViewToggle ?\n                    CategoryView.bind(this)(this.props.categories) :\n                    this.CoursesView.bind(this)(this.props.courses)\n                }\n                </Grid>\n            </div>\n        )\n    }\n}\n\n\n\nexport default withRouter(MobileRegistration);","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport BackArrow from \"@material-ui/icons/ArrowBack\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { Typography } from \"@material-ui/core\";\n\nclass BackButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            alert: false,\n        };\n    }\n\n    handleClick() {\n        if (this.props.warn) {\n            this.setState({\n                alert: true,\n            });\n        } else {\n            this.goBack();\n        }\n    }\n\n    hideWarning() {\n        this.setState({\n            alert: false,\n        });\n    }\n\n    goBack() {\n        // only call user defined function from parent component if defined\n        this.props.onBack && this.props.onBack();\n        this.props.history.goBack();\n    }\n\n    saveForm() {\n        //enter future code to save form\n    }\n\n    confirmAction(actionName) {\n        //actionName is a string\n        switch (actionName) {\n            case \"saveForm\":\n                this.saveForm();\n                break;\n            default:\n                console.warn(`Unhandled backbutton action ${actionName}`)\n        }\n        this.goBack();\n    }\n\n    denyAction(actionName) {\n        // switch(actionName){\n        //future switch statement for denyAction functions\n        // }\n        this.goBack();\n    }\n\n    render() {\n        return (\n            <>\n                <Button className=\"control course button\"\n                    onClick={this.handleClick.bind(this)}\n                >\n                    <BackArrow className=\"icon\" />\n                    <span className=\"label\">Back</span>\n                </Button>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.alert}\n                    onClick={this.hideWarning.bind(this)}>\n                    <div className=\"exit-popup\">\n                        <Typography variant=\"h6\" id=\"modal-title\">\n                            {this.props.alertMessage || \"Are you sure you want to leave unsaved changes?\"}\n                        </Typography>\n                        <Button\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.denyAction.bind(this)(this.props.denyAction)\n                            }}\n                            color=\"secondary\"\n                            className=\"button secondary\">\n                            {this.props.alertDenyText || \"No, leave me here\"}\n                        </Button>\n                        <Button\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.confirmAction.bind(this)(this.props.confirmAction)\n                            }}\n                            color=\"primary\"\n                            className=\"button primary\">\n                            {this.props.alertConfirmText || \"Yes, take me back\"}\n                        </Button>\n                    </div>\n                </Modal>\n            </>\n        );\n    }\n}\n\nBackButton.propTypes = {\n    history: PropTypes.shape({\n        goBack: PropTypes.func.isRequired,\n    }).isRequired,\n    alertConfirmText: PropTypes.string,\n    onBack: PropTypes.func,\n    alertMessage: PropTypes.string,\n    warn: PropTypes.bool,\n    alertDenyText: PropTypes.string,\n    alertConfirmAction: PropTypes.string,\n    alertDenyAction: PropTypes.string,\n};\n\nexport default withRouter(BackButton);\n","import PropTypes from \"prop-types\";\nimport React, {useState} from \"react\";\n\n// Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {withRouter} from \"react-router-dom\";\nimport {Typography} from \"@material-ui/core\";\nimport BackButton from \"../../BackButton\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport Popover from \"@material-ui/core/Popover\";\nimport SearchSelect from \"react-select\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ForwardArrow from \"@material-ui/icons/ArrowForward\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst trimString = (string, maxLen) => {\n    if (string.length > maxLen) {\n        return `${string.slice(0, maxLen - 3).trim()}...`;\n    } else {\n        return string;\n    }\n};\n\nconst RegistrationLanding = (props) => {\n    const [courses, setCourses] = useState(\n        Object.keys(props.courses).filter(\n            (courseID) => props.courses[courseID].type === \"C\"\n        ),\n    );\n    const [anchorEl, setAnchorEl] = useState(\"\");\n    const [view, setView] = useState(0);\n    const [filter, setFilter] = useState({\n        \"instructor\": [],\n        \"grade\": [],\n        \"subject\": [],\n    });\n\n    const goToRoute = (route) => {\n        props.history.push(props.match.url + route);\n    };\n\n    const handleFilterClick = (event) => {\n        event.preventDefault();\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (event) => {\n        event.preventDefault();\n        setAnchorEl(null);\n    };\n\n    const handleFilterChange = (filters, filterType) => {\n        setCourses(filters\n            ? Object.keys(props.courses).filter((courseID) => {\n                const course = props.courses[courseID];\n                switch (filterType) {\n                    case \"instructor\":\n                        return filters\n                            .map(({value}) => value)\n                            .includes(course.instructor_id);\n                    case \"subject\":\n                        return filters\n                            .map(({value}) => value)\n                            .includes(course.subject);\n                    case \"grade\":\n                        return filters\n                            .map(({value}) => value)\n                            .includes(course.grade);\n                    default:\n                        return true;\n                }\n            })\n            : Object.keys(props.courses));\n        setFilter({\n            ...filter,\n            [filterType]: filters ? filters : [],\n        });\n    };\n\n    const renderFilter = (filterType) => {\n        let options = [];\n        switch (filterType) {\n            case \"instructor\":\n                options = Object.values(props.instructors).map(\n                    ({name, user_id}) => ({\n                        \"label\": name,\n                        \"value\": user_id,\n                    })\n                );\n                break;\n            case \"subject\":\n                options = [\n                    {\"label\": \"Math\", \"value\": \"Math\"},\n                    {\"label\": \"Science\", \"value\": \"Science\"},\n                    {\"label\": \"Sat\", \"value\": \"Sat\"},\n                ];\n                break;\n            case \"grade\":\n                options = [...Array(10).keys()].map((i) => ({\n                    \"label\": `${i + 1}`,\n                    \"value\": i + 1,\n                }));\n                break;\n            default:\n                return '';\n        }\n        const CustomClearText = () => \"clear all\";\n        const ClearIndicator = (indicatorProps) => {\n            const {\n                children = <CustomClearText />,\n                getStyles,\n                \"innerProps\": {ref, ...restInnerProps},\n            } = indicatorProps;\n            return (\n                <div\n                    {...restInnerProps}\n                    ref={ref}\n                    style={getStyles(\"clearIndicator\", indicatorProps)}>\n                    <div style={{\"padding\": \"0px 5px\"}}>{children}</div>\n                </div>\n            );\n        };\n\n        const customStyles = {\n            \"clearIndicator\": (base, state) => ({\n                ...base,\n                \"cursor\": \"pointer\",\n                \"color\": state.isFocused ? \"blue\" : \"black\",\n            }),\n            \"option\": (base, state) => ({\n                ...base,\n                \"textAlign\": \"left\",\n            }),\n        };\n        return <SearchSelect\n            value={handleFilterClick[filterType]}\n            onChange={(event) => {\n                handleFilterChange(event, filterType);\n            }}\n            className=\"filter-options\"\n            closeMenuOnSelect={false}\n            components={{ClearIndicator}}\n            placeholder={`All ${filterType}s`}\n            styles={customStyles}\n            isMulti\n            options={options}\n        />;\n    };\n\n    const renderCourses = () => courses.map((courseID) => {\n        let course = props.courses[courseID],\n            start_date = new Date(course.schedule.start_date),\n            end_date = new Date(course.schedule.end_date),\n            start_time = course.schedule.start_time.substr(1),\n            end_time = course.schedule.end_time.substr(1),\n            days = course.schedule.days.map((day) => weekday[day].substr(0, 3));\n        start_date = start_date.toDateString().substr(3);\n        end_date = end_date.toDateString().substr(3);\n        const date = `${start_date} - ${end_date}`,\n            time = `${start_time} - ${end_time}`;\n        return (\n            <Paper className=\"row\" key={courseID}>\n                <Grid container alignItems=\"center\" layout=\"row\">\n                    <Grid\n                        item\n                        md={3} xs={12}\n                        onClick={(event) => {\n                            event.preventDefault();\n                            goToRoute(`/course/${course.course_id}`);\n                        }}\n                        style={{\"textDecoration\": \"none\", \"cursor\": \"pointer\"}}>\n                        <Typography className=\"course-heading\" align=\"left\">\n                            {course.title}\n                        </Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        md={5} xs={12}\n                        onClick={(event) => {\n                            event.preventDefault();\n                            goToRoute(`/course/${course.course_id}`);\n                        }}\n                        style={{\"textDecoration\": \"none\", \"cursor\": \"pointer\"}}>\n                        <Grid\n                            container className=\"course-detail\">\n                            <Grid\n                                item\n                                md={4} xs={3}\n                                className=\"heading-det\"\n                                align=\"left\">\n                                Date\n                            </Grid>\n                            <Grid\n                                item\n                                md={8} xs={9}\n                                className=\"value\"\n                                align=\"left\">\n                                {date} | {days} {time}\n                            </Grid>\n                        </Grid>\n                        <Grid container className=\"course-detail\">\n                            <Grid\n                                item\n                                md={4} xs={3}\n                                className=\"heading-det\"\n                                align=\"left\">\n                                Instructor\n                            </Grid>\n                            <Grid item md={8} xs={9}\n                                className=\"value\"\n                                align=\"left\">\n                                {props.instructors[course.instructor_id].name}\n                            </Grid>\n                        </Grid>\n                        <Grid container className=\"course-detail\">\n                            <Grid\n                                item\n                                md={4} xs={3}\n                                className=\"heading-det\"\n                                align=\"left\">\n                                Tuition\n                            </Grid>\n                            <Grid\n                                item\n                                md={8} xs={9}\n                                className=\"value\"\n                                align=\"left\">\n                                ${course.tuition}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n        );\n    });\n\n    const renderTutoring = () => {\n        const coursesPerRow = 3;\n        const coursesSplit = [[]];\n        courses.forEach((course) => {\n            if (coursesSplit[coursesSplit.length - 1].length === coursesPerRow) {\n                coursesSplit.push([course]);\n            } else {\n                coursesSplit[coursesSplit.length - 1].push(course);\n            }\n        });\n        return (\n            <Grid container spacing={8} alignItems=\"center\" direction=\"row\">\n                {\n                    courses.map((courseID) => {\n                        const course = props.courses[courseID];\n                        return (\n                            <Grid\n                                item\n                                xs={12} sm={6} md={4}\n                                key={courseID}\n                                onClick={() => {\n                                    goToRoute(`/form/tutoring/${courseID}`);\n                                }}\n                                alignItems=\"center\">\n                                <Card className=\"tutoring-card\">\n                                    <Grid container>\n                                        <Grid\n                                            item\n                                            xs={11}\n                                            component={CardContent}\n                                            align=\"left\">\n                                            {trimString(course.title, 20)}\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={1}\n                                            align=\"center\"\n                                            component={ForwardArrow}\n                                            style={{\n                                                \"display\": \"inline\",\n                                                \"margin\": \"auto 0\",\n                                            }} />\n                                    </Grid>\n                                </Card>\n                            </Grid>\n                        );\n                    })\n                }\n            </Grid>\n        );\n    };\n\n    const weekday = {\n        \"0\": \"Sunday\",\n        \"1\": \"Monday\",\n        \"2\": \"Tuesday\",\n        \"3\": \"Wednesday\",\n        \"4\": \"Thursday\",\n        \"5\": \"Friday\",\n        \"6\": \"Saturday\",\n    };\n\n    return (\n        <Grid container>\n            <Grid item xs={12}>\n                <Paper className=\"RegistrationLanding paper\">\n                    <BackButton />\n                    <hr />\n                    <Grid container layout=\"row\">\n                        <Grid item md={7} xs={12}>\n                            <Typography\n                                variant=\"h3\"\n                                align=\"left\"\n                                className=\"heading\">\n                                Registration Catalog\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid container layout=\"row\" spacing={8}>\n                        <Grid item xs={12} md={4}>\n                            {renderFilter(\"instructor\")}\n                        </Grid>\n                        <Hidden xsDown>\n                            <Grid item xs={12} md={4}>\n                                {renderFilter(\"subject\")}\n                            </Grid>\n                            <Grid item xs={12} md={4}>\n                                {renderFilter(\"grade\")}\n                            </Grid>\n                        </Hidden>\n                    </Grid>\n                    <div className=\"registration-table\">\n                        {renderCourses()}\n                    </div>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nRegistrationLanding.propTypes = {\n    \"stuffActions\": PropTypes.object,\n    \"RegistrationForms\": PropTypes.array,\n};\n\n\nexport default withRouter(RegistrationLanding);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registrationActions from '../../../actions/registrationActions';\nimport * as rootActions from '../../../actions/rootActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport RegistrationUserActions from \"./RegistrationActions\";\nimport '../../../theme/theme.scss';\n\n//Material UI Imports\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\nimport MobileRegistration from \"./MobileRegistration\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Categories from \"@material-ui/icons/Category\";\nimport CourseList from \"@material-ui/icons/List\";\nimport Fab from '@material-ui/core/Fab';\nimport RegistrationLanding from \"./RegistrationLanding\";\n\nclass Registration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileViewToggle: false,\n            mobileView: false,\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resize.bind(this));\n        this.resize();\n    }\n\n    resize() {\n        let currentHideNav = (window.innerWidth <= 760);\n        if (currentHideNav !== this.state.mobileView) {\n            this.setState({ mobileView: !this.state.mobileView });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"\">\n                <Grid item xs={12}>\n                    <Paper className={\"paper\"}>\n                        <Grid item lg={12}>\n                            <RegistrationUserActions\n                                //admin = {false}\n                            />\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <RegistrationLanding\n                    courses={this.props.courses}\n                    categories={this.props.courseCategories}\n                    instructors={this.props.instructors}\n                />\n            </div>\n        )\n    }\n}\n\nRegistration.propTypes = {\n    stuffActions: PropTypes.object,\n    RegistrationForms: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        instructors: state.Users[\"InstructorList\"],\n        courses: state.Course[\"NewCourseList\"],\n        courseCategories: state.Course[\"CourseCategories\"],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        registrationActions: bindActionCreators(registrationActions, dispatch),\n        rootActions: bindActionCreators(rootActions, dispatch),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Registration);\n","/*Validations for various text inputs*/\n\nexport let InputValidation = (input, type) => {\n    switch (type) {\n        case \"number\":\n            return NumberValidation(input);\n        case \"phone number\":\n            return PhoneValidation(input);\n        case \"email\":\n            return EmailValidation(input);\n        case \"short text\":\n            return ShortTextValidation(input);\n        case \"address\":\n            return AddressValidation(input);\n        case \"zipcode\":\n            return ZipCodeValidation(input);\n        case \"birthday\":\n            return BirthdayValidation(input);\n        default:\n            return Boolean(input);\n    }\n};\n\n// Simple Numbers (i.e. grade, age, etc.)\nexport let NumberValidation = (input) => {\n    return !!String(input).match(/^[0-9]{1,5}$/);\n};\n\nlet PhoneValidation = (input) => {\n    return !!input.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/);\n};\n\nlet EmailValidation = (input) => {\n    return !!input.match(/^(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/);\n};\n\n// Short input fields (i.e. name, school, city etc.)\nlet ShortTextValidation = (input) => {\n    return !!input.match(/([A-Za-z ]+)(\" \")?([A-Za-z ]+)?(\" \")?([A-Za-z ]+)?$/);\n};\n\n// Address\nlet AddressValidation = (input) => {\n    // Old regex /\\d{1,5}\\s\\w\\s(\\b\\w*\\b\\s){1,2}?.\\w*/\n    return !!input.match(/\\d+[ ](?:[A-Za-z0-9.-]+[ ]?)+/);\n\n};\n\n// Zip Code\nlet ZipCodeValidation = (input) => {\n    return !!input.match(/^\\d{5}(?:[-\\s]\\d{4})?$/)\n}\n\n// Birthday format to MM/DD/YYYY\nlet BirthdayValidation = (input) => {\n    return !!input.match(/^((0|1)\\d{1})\\/((0|1|2)\\d{1})\\/((19|20)\\d{2})/)\n}","import {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as registrationActions from \"../../actions/registrationActions\";\nimport React, {Component} from \"react\";\nimport {Prompt} from \"react-router\";\nimport {NavLink} from \"react-router-dom\";\n\n// Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {InputValidation} from \"../FeatureViews/Registration/Validations\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Clear\";\n\n// Outside React Component\nimport SearchSelect from \"react-select\";\nimport BackButton from \"../BackButton.js\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst parseGender = {\n    \"M\": \"Male\",\n    \"F\": \"Female\",\n    \"U\": \"Do not disclose\",\n};\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            conditional: \"\",\n            nextSection: false,\n            activeStep: 0,\n            activeSection: \"\",\n            form: \"\",\n            submitPending: false,\n            preLoaded: false,\n            existingUser: false,\n        };\n    }\n\n    componentWillMount() {\n        let prevState = JSON.parse(sessionStorage.getItem(\"form\") || null);\n        const formType = this.props.match.params.type;\n        const {id} = this.props.match.params;\n        if (this.props.match.params.edit === \"edit\") {\n            switch (formType) {\n                case \"student\": {\n                    const student = this.props.students[id];\n                    if (student) {\n                        const parent = this.props.parents[student.parent_id];\n                        prevState = {\n                            ...this.state,\n                            \"Basic Information\": {\n                                \"Student First Name\": student.first_name,\n                                \"Student Last Name\": student.last_name,\n                                \"Gender\": parseGender[student.gender],\n                                \"Grade\": student.grade,\n                                \"Age\": student.age,\n                                \"School\": student.school,\n                                \"Student Email\": student.email,\n                                \"Student Phone Number\": student.phone_number,\n                            },\n                            \"Parent Information\": {\n                                \"Select Parent\": {\n                                    value: parent.user_id,\n                                    label: `${parent.user_id}: ${parent.name} - ${parent.email}`,\n                                },\n                                \"Parent First Name\": parent.first_name,\n                                \"Parent Last Name\": parent.last_name,\n                                \"Gender\": parseGender[parent.gender],\n                                \"Parent Email\": parent.email,\n                                \"Address\": parent.address,\n                                \"City\": parent.city,\n                                \"State\": parent.state,\n                                \"Zip Code\": parent.zipcode,\n                                \"Relationship to Student\": parent.relationship,\n                                \"Phone Number\": parent.phone_number,\n                            },\n                            \"Basic Information_validated\": {\n                                \"Student First Name\": true,\n                                \"Student Last Name\": true,\n                                \"Gender\": true,\n                                \"Grade\": true,\n                                \"Age\": true,\n                                \"School\": true,\n                                \"Student Email\": true,\n                                \"Student Phone Number\": true,\n                            },\n                            \"Parent Information_validated\": {\n                                \"Parent First Name\": true,\n                                \"Parent Last Name\": true,\n                                \"Gender\": true,\n                                \"Parent Email\": true,\n                                \"Address\": true,\n                                \"City\": true,\n                                \"State\": true,\n                                \"Zip Code\": true,\n                                \"Relationship to Student\": true,\n                                \"Phone Number\": true,\n                            },\n                            \"form\": formType,\n                            \"activeSection\": \"Basic Information\",\n                            \"nextSection\": true,\n                            \"preLoaded\": true,\n                        };\n                    }\n                    break;\n                }\n                case \"instructor\": {\n                    const instructor = this.props.instructors[id];\n                    if (instructor) {\n                        prevState = {\n                            ...this.state,\n                            \"Basic Information\": {\n                                \"First Name\": instructor.first_name,\n                                \"Last Name\": instructor.last_name,\n                                \"E-Mail\": instructor.email,\n                                \"Phone Number\": instructor.phone_number,\n                                \"Gender\": parseGender[instructor.gender],\n                                \"Address\": instructor.address,\n                                \"City\": instructor.city,\n                                \"Zip Code\": instructor.zipcode,\n                                \"State\": instructor.state,\n                                \"Date of Birth\": instructor.birth_date,\n                            },\n                            \"Education\": {\n                                \"College\": \"\",\n                                \"Degree(s)\": \"\",\n                                \"Minor(s)\": \"\",\n                            },\n                            \"Experience\": {\n                                \"Subject(s) Tutor Can Teach\": \"\",\n                                \"Specialties\": \"\",\n                                \"Background\": \"\",\n                                \"Notes\": \"\",\n                            },\n                            \"Basic Information_validated\": {\n                                \"First Name\": true,\n                                \"Last Name\": true,\n                                \"E-Mail\": true,\n                                \"Phone Number\": true,\n                                \"Gender\": true,\n                                \"Address\": true,\n                                \"City\": true,\n                                \"Zip Code\": true,\n                                \"State\": true,\n                                \"Date of Birth\": true,\n                            },\n                            \"Education_validated\": {\n                                \"College\": true,\n                                \"Degree(s)\": true,\n                                \"Minor(s)\": true,\n                            },\n                            \"Experience_validated\": {\n                                \"Subject(s) Tutor Can Teach\": true,\n                                \"Specialties\": true,\n                                \"Background\": true,\n                                \"Notes\": true,\n                            },\n                            \"form\": formType,\n                            \"activeSection\": \"Basic Information\",\n                            \"nextSection\": true,\n                            \"preLoaded\": true,\n                        };\n                    }\n                    break;\n                }\n                default: console.warn(\"Invalid form type!\");\n            }\n        }\n        if (!prevState ||\n            formType !== prevState.form ||\n            prevState[\"submitPending\"] ||\n            (id && this.props.match.params.edit !== \"edit\")) {\n            if (this.props.registrationForm[formType]) {\n                this.setState((oldState) => {\n                    const formContents = JSON.parse(\n                        JSON.stringify(this.props.registrationForm[formType])\n                    );\n                    let NewState = {\n                        ...oldState,\n                        \"activeSection\": formContents.section_titles[0],\n                        \"form\": formType,\n                    };\n                    let course = null;\n                    if (this.props.courses.hasOwnProperty(id)) {\n                        const {course_id, title} =\n                            this.props.courses[this.props.match.params.id];\n                        // convert it to a format that onselectChange can use\n                        course = {\n                            \"value\": course_id,\n                            \"label\": title,\n                        };\n                    }\n                    formContents.section_titles.forEach((title) => {\n                        // create blank fields based on form type\n                        NewState[title] = {};\n                        NewState[`${title}_validated`] = {};\n                        // set a value for every non-conditional field (object)\n                        if (Array.isArray(formContents[title])) {\n                            formContents[title].forEach(({name, type}) => {\n                                NewState[`${title}_validated`][name] = true;\n                                switch (type) {\n                                    case \"course\":\n                                        NewState[title][name] = course;\n                                        break;\n                                    default:\n                                        NewState[title][name] = null;\n                                }\n                            });\n                        }\n                    });\n                    if (formType === \"tutoring\" && id &&\n                        this.props.courses.hasOwnProperty(id)) {\n                        NewState[\"Tutor Selection\"][\"Course / Subject\"] =\n                            this.props.courses[id].title;\n                    }\n                    return NewState;\n                }, () => {\n                    this.setState({\n                        \"nextSection\": this.validateSection(),\n                    });\n                });\n            }\n        } else if (prevState && !prevState[\"submitPending\"]) {\n            if (formType === \"tutoring\" &&\n                this.props.courses.hasOwnProperty(id)) {\n                prevState[\"Tutor Selection\"][\"Course / Subject\"] =\n                    this.props.courses[id].title;\n            }\n            this.setState(prevState);\n        }\n    }\n\n    getFormObject() {\n        return this.props.registrationForm[this.state.form];\n    }\n\n    getActiveSection() {\n        const section = this.getFormObject()[this.state.activeSection];\n        if (Array.isArray(section)) {\n            return section;\n        } else {\n            return section[this.state.conditional];\n        }\n    }\n\n    onBack = () => {\n        // clear session storage\n        sessionStorage.removeItem(\"form\");\n        this.props.registrationActions.resetSubmitStatus();\n    }\n\n    getStepContent(step, formType) {\n        return this.props.registrationForm[formType][step];\n    }\n\n    validateSection() {\n        const currSectionTitle = this.getFormObject().section_titles[this.state.activeStep];\n        return (\n            this.getActiveSection()\n                .filter(({required}) => required)\n                .every(({name}) => this.state[currSectionTitle][name]) &&\n            Object.values(this.state[`${currSectionTitle}_validated`])\n                .every((valid) => valid)\n        );\n    }\n\n    getConditionalFieldFromCurrentSection() {\n        let nextSectionInput = false;\n        const currSectionTitle = this.state.activeSection;\n        // Get input from the conditional field\n        if (Array.isArray(this.getFormObject()[currSectionTitle])) {\n            this.getFormObject()[currSectionTitle].some((field) => {\n                if (field.conditional) {\n                    nextSectionInput = this.state[currSectionTitle][field.name];\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n        }\n        return nextSectionInput;\n    }\n\n    // Progresses to next section in registration form\n    handleNext() {\n        const currSectionTitle = this.getFormObject().section_titles[this.state.activeStep];\n        let section = this.props.registrationForm[this.state.form][this.state.activeSection];\n        if (!Array.isArray(section)) {\n            section = section[this.state.conditional];\n        }\n        section.forEach((field) => {\n            this.validateField(currSectionTitle, field, this.state[currSectionTitle][field.name]);\n        });\n        this.setState((oldState) => {\n            if (this.validateSection()) {\n                if (oldState.activeStep === this.getFormObject().section_titles.length - 1) {\n                    if (!oldState.submitPending) {\n                        if (this.props.match.params.edit === \"edit\") {\n                            this.props.registrationActions.submitForm(this.state,\n                                this.props.match.params.id);\n                        } else {\n                            this.props.registrationActions.submitForm(this.state);\n                        }\n                    }\n                    return {\n                        submitPending: true,\n                    };\n                } else {\n                    const conditionalField = this.getConditionalFieldFromCurrentSection(),\n                        nextActiveStep = oldState.activeStep + 1,\n                        nextActiveSection = this.getFormObject().section_titles[nextActiveStep];\n                    let newState = {\n                        activeStep: nextActiveStep,\n                        activeSection: nextActiveSection,\n                        conditional: conditionalField ? conditionalField : oldState.conditional,\n                        nextSection: false,\n                    };\n                    if (conditionalField) {\n                        let formContents = this.getFormObject(),\n                            title = nextActiveSection;\n                        // create blank fields based on form type\n                        newState[title] = {};\n                        formContents[nextActiveSection][conditionalField].forEach((field) => {\n                            newState[title][field.name] = \"\";\n                        });\n                        // create validated state for each field\n                        newState[`${title}_validated`] = {};\n                        formContents[nextActiveSection][conditionalField].forEach((field) => {\n                            newState[`${title}_validated`][field.name] = true;\n                        });\n                    }\n                    return newState;\n                }\n            } else {\n                return {};\n            }\n        }, () => {\n            this.setState({\n                nextSection: this.validateSection(),\n            });\n        });\n    }\n\n    // Regresses to previous section in registration form\n    handleBack() {\n        this.setState((oldState) => {\n            if (oldState.activeStep !== 0 && oldState.activeSection) {\n                return {\n                    activeStep: oldState.activeStep - 1,\n                    activeSection: this.getFormObject().section_titles[oldState.activeStep - 1],\n                };\n            } else {\n                return {};\n            }\n        }, () => {\n            this.setState({\n                nextSection: this.validateSection(),\n            });\n        });\n    }\n\n    handleReset() {\n        this.setState({activeStep: 0});\n    }\n\n    handleFieldUpdate(sectionTitle, field, fieldValue) {\n        this.setState((oldState) => {\n            oldState[sectionTitle][field.name] = fieldValue;\n            return oldState;\n        });\n    }\n\n    validateField(sectionTitle, field, fieldValue) {\n        this.setState((oldState) => {\n            if (!fieldValue) { // if empty field\n                oldState[`${sectionTitle}_validated`][field.name] = !field.required;\n            } else if (InputValidation(fieldValue, field.type)) { // if valid input\n                let isValid = true;\n                if (field.type === \"number\") {\n                    // parse if number\n                    oldState[sectionTitle][field.name] = parseInt(fieldValue, 10);\n                } else if (field.type === \"email\") {\n                    let emails = [];\n                    if (field.field === \"Student Email\") {\n                        emails = Object.values(this.props.students).map(({email}) => email);\n                    }\n                    // validate that email doesn't exist in database already\n                    isValid = !emails.includes(fieldValue) || this.state.preLoaded;\n                    if (!isValid) {\n                        oldState.existingUser = true;\n                    }\n                }\n                oldState[`${sectionTitle}_validated`][field.name] = isValid;\n            } else {\n                oldState[`${sectionTitle}_validated`][field.name] = false;\n            }\n            return oldState;\n        }, () => {\n            this.setState({\n                nextSection: this.validateSection(),\n            }, () => {\n                sessionStorage.setItem(\"form\", JSON.stringify(this.state));\n            });\n        });\n    }\n\n    onSelectChange(value, label, field) {\n        if (field.type === \"select parent\") {\n            if (value) {\n                this.setState((OldState) => {\n                    let NewState = OldState;\n                    const selectedParentID = value.value;\n                    const parent = this.props.parents[selectedParentID];\n                    NewState[label] = {\n                        \"Select Parent\": {\n                            value: selectedParentID,\n                            label: `${selectedParentID}: ${parent.name} - ${parent.email}`,\n                        },\n                        \"Parent First Name\": parent.first_name,\n                        \"Parent Last Name\": parent.last_name,\n                        \"Gender\": parent.gender,\n                        \"Parent Email\": parent.email,\n                        \"Address\": parent.address,\n                        \"City\": parent.city,\n                        \"State\": parent.state,\n                        \"Zip Code\": parent.zipcode,\n                        \"Relationship to Student\": parent.relationship,\n                        \"Parent Phone Number\": parent.phone_number,\n                        \"user_id\": selectedParentID,\n                    };\n                    Object.keys(NewState[label]).forEach((key) => {\n                        NewState[`${label}_validated`][key] = true;\n                    });\n                    return NewState;\n                }, () => {\n                    this.validateSection();\n                    this.setState({nextSection: true});\n                });\n            } else {\n                this.setState((OldState) => {\n                    let NewState = OldState;\n                    NewState[label] = {\n                        \"Select Parent\": null,\n                        \"Parent First Name\": \"\",\n                        \"Parent Last Name\": \"\",\n                        \"Gender\": \"\",\n                        \"Parent Email\": \"\",\n                        \"Address\": \"\",\n                        \"City\": \"\",\n                        \"State\": \"\",\n                        \"Zip Code\": \"\",\n                        \"Relationship to Student\": \"\",\n                        \"Parent Phone Number\": \"\",\n                        \"user_id\": \"\",\n                    };\n                    Object.keys(NewState[label]).forEach((key) => {\n                        NewState[`${label}_validated`][key] = true;\n                    });\n                    NewState.nextSection = false;\n                    return NewState;\n                });\n            }\n        } else {\n            this.setState((OldState) => {\n                let NewState = OldState;\n                NewState[label][field.name] = value;\n                return NewState;\n            }, () => {\n                this.validateField(this.state.activeSection, field, value);\n            });\n        }\n    }\n\n    // removes duplicates with arr1 from arr2 from search select field\n    removeDuplicates(arr1, arr2) {\n        let stringValue, stringOtherValue;\n        arr1.forEach((value) => {\n            if (value) {\n                stringValue = value.value;\n            } else {\n                stringValue = \"\";\n            }\n            arr2.forEach((otherValue, j) => {\n                if (otherValue) {\n                    stringOtherValue = otherValue.value;\n                } else {\n                    stringOtherValue = \"\";\n                }\n                if (stringValue === stringOtherValue) {\n                    arr2[j] = \"1\";\n                }\n            });\n        });\n        let uniqueVals = [...new Set(arr2)], indexOfString = -1;\n        uniqueVals.forEach((value, i) => {\n            if (typeof value === \"string\") {\n                indexOfString = i;\n            }\n        });\n        if (indexOfString > -1) {\n            uniqueVals.splice(indexOfString, 1);\n        }\n        return uniqueVals;\n    }\n\n    renderField(field, label, fieldIndex) {\n        let fieldTitle = field.name;\n        switch (field.type) {\n            case \"select\":\n                return <FormControl className={\"form-control\"}>\n                    <InputLabel htmlFor={fieldTitle}>{fieldTitle}</InputLabel>\n                    <Select\n                        displayEmpty={false}\n                        value={this.state[label][fieldTitle]}\n                        onChange={({target}) => {\n                            this.onSelectChange(target.value, label, field);\n                        }}>\n                        {\n                            field.options.map((option) => {\n                                return <MenuItem value={option} key={option}>\n                                    <em>{option}</em>\n                                </MenuItem>\n                            }\n\n                            )\n                        }\n                    </Select>\n                </FormControl>;\n            case \"course\": {\n                let courseList = Object.keys(this.props.courses)\n                    .filter((courseID) =>\n                        this.props.courses[courseID].capacity >\n                        this.props.courses[courseID].roster.length)\n                    .map((courseID) => ({\n                        \"value\": courseID,\n                        \"label\": this.props.courses[courseID].title,\n                    }));\n                // remove preselected courses\n                courseList = this.removeDuplicates(Object.values(this.state[label]), courseList);\n                // count # of course fields in current section\n                const fieldCount = this.getActiveSection()\n                    .reduce((total, {type}) => total + (type === \"course\"), 0);\n                return (\n                    <div style={{width: \"inherit\"}}>\n                        <Grid container className={\"student-align\"} spacing={2000}>\n                            <SearchSelect\n                                value={this.state[label][fieldTitle]}\n                                onChange={(value) => {\n                                    this.onSelectChange(value, label, field);\n                                }}\n                                options={courseList}\n                                className=\"search-options\" />\n                            {\n                                (fieldCount > 1) &&\n                                <RemoveIcon color=\"primary\" aria-label=\"Add\" variant=\"extended\"\n                                    className=\"button-remove-student\"\n                                    onClick={(event) => {\n                                        event.preventDefault();\n                                        // deletes answer field from state\n                                        this.removeField(fieldIndex);\n                                        this.forceUpdate();\n                                    }}>\n                                </RemoveIcon>\n                            }\n                        </Grid>\n                    </div>\n                );\n            }\n            case \"student\": {\n                let studentList = Object.values(this.props.students)\n                    .map(({user_id, name, email}) => ({\n                        value: user_id,\n                        label: `${name} - ${email}`,\n                    }));\n\n                studentList = this.removeDuplicates(Object.values(this.state[label]), studentList);\n\n                // count # of course fields in current section\n                const studentCount = this.getActiveSection()\n                    .reduce((total, {type}) => total + (type === \"student\"), 0);\n\n                return (\n                    <div style={{width: \"inherit\"}}>\n                        <Grid container className={\"student-align\"} spacing={2000}>\n                            <SearchSelect\n                                value={this.state[label][fieldTitle] ? this.state[label][fieldTitle] : \"\"}\n                                onChange={(value) => {\n                                    this.onSelectChange(value, label, field);\n                                }}\n                                options={studentList}\n                                className=\"search-options\" />\n                            {\n                                studentCount > 1 &&\n                                <RemoveIcon color=\"primary\" aria-label=\"Add\" variant=\"extended\"\n                                    className=\"button-remove-student\"\n                                    onClick={(event) => {\n                                        event.preventDefault();\n                                        // deletes answer field\n                                        this.removeField(fieldIndex);\n                                        this.forceUpdate();\n                                    }}>\n                                </RemoveIcon>\n                            }\n                        </Grid>\n                    </div>\n                );\n            }\n            case \"instructor\": {\n                let instructorList = this.props.instructors;\n\n                instructorList = Object.values(instructorList).map(({user_id, name, email}) => ({\n                    value: user_id,\n                    label: `${name} - ${email}`,\n                }));\n                instructorList = this.removeDuplicates(Object.values(this.state[label]), instructorList);\n                return (<div style={{width: \"inherit\"}}>\n                    <Grid container className=\"student-align\" spacing={2000}>\n                        <SearchSelect\n                            value={this.state[label][fieldTitle] ? this.state[label][fieldTitle] : \"\"}\n                            onChange={(value) => {\n                                this.onSelectChange(value, label, field);\n                            }}\n                            options={instructorList}\n                            className=\"search-options\" />\n                    </Grid>\n                </div>);\n            }\n            case \"select parent\": {\n                const currParentList = Object.values(this.props.parents)\n                    .map(({user_id, name, email}) => ({\n                        value: user_id,\n                        label: `${name} - ${email}`,\n                    }));\n                return (\n                    <SearchSelect\n                        className=\"search-options\"\n                        isClearable\n                        onChange={(value) => {\n                            this.onSelectChange(value, label, field);\n                        }}\n                        value={this.state[label][fieldTitle]}\n                        options={currParentList}\n                    />\n                );\n            }\n            default:\n                return <TextField\n                    label={field.name}\n                    multiline={field.multiline}\n                    margin=\"normal\"\n                    value={this.state[label][field.name]}\n                    error={!this.state[label + \"_validated\"][field.name]}\n                    helperText={!this.state[label + \"_validated\"][field.name] ? field.name + \" invalid\" : \"\"}\n                    type={field.type === \"number\" ? \"Number\" : \"text\"}\n                    required={field.required}\n                    fullWidth={field.full}\n                    onChange={(e) => {\n                        e.preventDefault();\n                        this.handleFieldUpdate.bind(this)(label, field, e.target.value);\n                    }}\n                    onBlur={(e) => {\n                        e.preventDefault();\n                        this.validateField.bind(this)(label, field, e.target.value);\n                    }}\n                />\n        }\n    }\n\n    addField(field, fieldIndex) {\n        const currentForm = this.getFormObject();\n        let param = [this.state.form, this.state.activeSection, fieldIndex];\n        if (!Array.isArray(currentForm[this.state.activeSection])) {\n            param.splice(2, 0, this.state.conditional);\n        }\n        this.props.registrationActions.addField(param);\n        this.setState((prevState) => {\n            // number of fields of the same type as the current field\n            const {form, activeSection, conditional} = prevState;\n            let section = this.props.registrationForm[form][activeSection];\n            if (!Array.isArray(section)) {\n                section = section[conditional];\n            }\n            const numSameTypeFields = section.reduce((count, otherField) =>\n                count + (field === otherField.field), 0);\n            if (Array.isArray(prevState[activeSection])) {\n                prevState[activeSection][`${field} ${numSameTypeFields}`] = null;\n                prevState[`${activeSection}_validated`][`${field} ${numSameTypeFields}`] = true;\n            } else {\n                prevState[activeSection][`${field} ${numSameTypeFields}`] = null;\n                prevState[`${activeSection}_validated`][`${field} ${numSameTypeFields}`] = true;\n            }\n            return prevState;\n        }, () => {\n            sessionStorage.setItem(\"form\", JSON.stringify(this.state));\n        });\n        // for some reason it isn't rerendering automatically\n    }\n\n    removeField(fieldIndex) {\n        this.setState((prevState) => {\n            const currentSectionFields = prevState[prevState[\"activeSection\"]];\n            const currentSectionValidationFields = prevState[`${prevState[\"activeSection\"]}_validated`];\n            let baseName;\n            let newSectionFields = {};\n            let newSectionValidationFields = {};\n            let index = 0;\n            let hasNotRemoved = true;\n\n            Object.entries(currentSectionFields).forEach(([origFieldKey, fieldValue]) => {\n                if (index === 0 && hasNotRemoved) {\n                    baseName = origFieldKey;\n                }\n                if (index === fieldIndex && hasNotRemoved) {\n                    hasNotRemoved = false;\n                    return;\n                }\n                let newFieldName = index === 0 ? baseName : `${baseName} ${index + 1}`;\n                newSectionFields[newFieldName] = fieldValue;\n                newSectionValidationFields[newFieldName] = currentSectionValidationFields[origFieldKey];\n                index++;\n            });\n\n            prevState[prevState[\"activeSection\"]] = newSectionFields;\n            prevState[`${prevState[\"activeSection\"]}_validated`] = newSectionValidationFields;\n            //save to session Storage\n            sessionStorage.setItem(\"form\", JSON.stringify(this.state));\n            return prevState;\n        }, () => {\n            //delete field from redux store\n            let param = [this.state.form, this.state.activeSection];\n            this.props.registrationActions.removeField(param, fieldIndex, this.state.conditional);\n            this.forceUpdate();\n        });\n        this.forceUpdate();\n    }\n\n    renderForm() {\n        let {activeStep, nextSection} = this.state,\n            currentForm = this.props.registrationForm[this.state.form],\n            steps = currentForm.section_titles;\n        let section = this.getActiveSection();\n        return (\n            <Stepper\n                activeStep={activeStep}\n                orientation=\"vertical\"\n                className=\"form-section\">\n                {\n                    steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel>\n                                {label}\n                                {/* {activeStep !== i &&\n                                    Object.entries(this.state[label]).map(([field, value]) => {\n                                        if (!value) {\n                                            return null;\n                                        }\n                                        if (value && value.hasOwnProperty(\"label\")) {\n                                            value = value.label;\n                                        }\n\n                                        return (\n                                            <div key={field}>\n                                                <Typography className=\"field-title\" align=\"left\">\n                                                    {field}: {value}\n                                                </Typography>\n                                            </div>\n                                        );\n                                    })\n                                } */}\n                            </StepLabel>\n                            <StepContent>\n                                {\n                                    section.map((field, j) => {\n                                        // number of fields of the same type as the current field\n                                        const numSameTypeFields = section.reduce((count, otherField) => field.field === otherField.field ? count + 1 : count, 0),\n                                            reversedSection = [...section].reverse(),\n                                            lastFieldOfType = reversedSection.find((otherField) => otherField.field === field.field);\n                                        return (\n                                            <div key={j} className=\"fields-wrapper\" style={{}}>\n                                                <Grid container className=\"student-align\">\n                                                    {label === this.state.activeSection ? this.renderField(field, label, j) : \"\"}\n                                                </Grid>\n                                                <br />\n                                                {\n                                                    !this.props.match.params.course && numSameTypeFields < field.field_limit &&\n                                                    field === lastFieldOfType &&\n                                                    <Fab color=\"primary\" aria-label=\"Add\" variant=\"extended\"\n                                                        className=\"button add-student\"\n                                                        onClick={(event) => {\n                                                            event.preventDefault();\n                                                            this.addField(field.field, j);\n                                                        }}>\n                                                        <AddIcon />\n                                                        Add {field.field}\n                                                    </Fab>\n                                                }\n\n                                            </div>\n                                        );\n                                    })\n                                }\n                                <div className=\"controls\">\n                                    <Button\n                                        disabled={activeStep === 0}\n                                        color=\"secondary\"\n                                        onClick={(event) => {\n                                            event.preventDefault();\n                                            this.handleBack();\n                                        }}\n                                        className={`button ${activeStep === 0 ? \"hide\" : \"\"}`}>\n                                        Back\n                                    </Button>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={!nextSection}\n                                        onClick={(event) => {\n                                            event.preventDefault();\n                                            this.handleNext();\n                                        }}\n                                        className=\"button primary\">\n                                        {activeStep === steps.length - 1 ? this.props.submitPending ? \"Submitting\" : \"Submit\" : \"Next\"}\n                                    </Button>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    ))\n                }\n            </Stepper>\n        );\n    }\n\n    // view after a submitted form\n    renderSubmitted() {\n        const currentForm = this.props.registrationForm[this.state.form];\n        const steps = currentForm.section_titles;\n        sessionStorage.removeItem(\"form\");\n        return (\n            <div style={{\n                margin: \"2%\",\n                padding: \"5px\",\n            }}>\n                <Typography align=\"left\" style={{fontSize: \"24px\"}}>\n                    You have successfully registered!\n                </Typography>\n                <Typography align=\"left\" style={{fontSize: \"14px\"}}>\n                    An email will be sent to you to confirm your registration\n                </Typography>\n                <Button\n                    align=\"left\"\n                    component={NavLink}\n                    to=\"/registration\"\n                    onClick={() => {\n                        this.props.registrationActions.resetSubmitStatus();\n                    }}\n                    style={{margin: \"20px\"}}\n                    className=\"button\">Back to Registration</Button>\n                <div className=\"confirmation-copy\">\n                    <Typography className=\"title\" align=\"left\">Confirmation Copy</Typography>\n                    {\n                        steps.map((sectionTitle) => (\n                            <div key={sectionTitle}>\n                                <Typography\n                                    className=\"section-title\"\n                                    align=\"left\">\n                                    {sectionTitle}\n                                </Typography>\n                                {\n                                    this.getActiveSection().map(({field, type}) => {\n                                        let fieldVal = this.state[sectionTitle][field];\n                                        if (fieldVal && fieldVal.hasOwnProperty(\"value\")) {\n                                            fieldVal = fieldVal.value;\n                                            if (type === \"select parent\" && typeof fieldVal === \"number\") {\n                                                fieldVal = this.props.parents[fieldVal].first_name;\n                                            }\n                                        }\n\n                                        return (\n                                            <div key={field}>\n                                                <Typography className=\"field-title\" align=\"left\">\n                                                    {field || \"\"}\n                                                </Typography>\n                                                <Typography className=\"field-value\" align=\"left\">\n                                                    {fieldVal || \"N/A\"}\n                                                </Typography>\n                                            </div>\n                                        );\n                                    })\n                                }\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    renderTitle(id, type) {\n        switch (type) {\n            case \"course\":\n                return id ? this.props.courses[id].title : \"\";\n            case \"student\": {\n                const student = this.props.students[id];\n                return student ? student.name : \"\";\n            }\n            default:\n                return \"\";\n        }\n    }\n\n    render() {\n        return (\n            <Grid container className=\"\">\n                {/* Determine if finished component is displayed. If not, then don't prompt */}\n                {this.state.submitPending ? \"\" : <Prompt message=\"Are you sure you want to leave?\" />}\n                <Grid item xs={12}>\n                    <Paper className={\"registration-form paper\"}>\n                        <BackButton\n                            warn={true}\n                            onBack={this.onBack}\n                            alertMessage={\"Do you want to save your changes?\"}\n                            alertConfirmText={\"Yes, save changes\"}\n                            confirmAction={\"saveForm\"}\n                            alertDenyText={\"No, don't save changes\"}\n                            denyAction={\"default\"}\n                        />\n                        <Typography className=\"heading\" align=\"left\">\n                            {this.renderTitle(this.props.match.params.id, this.state.form)} {this.props.match.params.type} Registration\n                        </Typography>\n                        {\n                            this.props.submitStatus !== \"success\" ?\n                                this.props.registrationForm[this.state.form] ?\n                                    this.renderForm.bind(this)() :\n                                    <Typography>\n                                        Sorry! The form is unavailable.\n                                    </Typography>\n                                : this.renderSubmitted()\n                        }\n                        <Modal\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                            open={this.state.existingUser}\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.setState({existingUser: false})\n                            }}>\n                            <div className=\"existing-user-popup\">\n                                <Typography variant=\"h6\" id=\"modal-title\">\n                                    {\"The user you are entering already exists in the database! Please enter a new email, and check for spelling.\"}\n                                </Typography>\n                                <Button\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.setState({existingUser: false})\n                                    }}\n                                    color=\"primary\"\n                                    className=\"button primary\">\n                                    {\"I will enter a new email\"}\n                                </Button>\n                            </div>\n                        </Modal>\n                        {/* Error message on failed submit */}\n                        <Dialog\n                            open={this.props.submitStatus === \"fail\"}\n                            onClose={() => {\n                                this.props.registrationActions.resetSubmitStatus();\n                                this.setState({\n                                    \"submitPending\": false,\n                                }, () => {\n                                    sessionStorage.setItem(\"form\", JSON.stringify(this.state));\n                                });\n                            }}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\">\n                            <DialogTitle id=\"alert-dialog-title\">Failed to Submit</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\">\n                                    There was an error submitting the form. Check all fields and try again.\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => {\n                                    this.props.registrationActions.resetSubmitStatus();\n                                    this.setState({\n                                        \"submitPending\": false,\n                                    }, () => {\n                                        sessionStorage.setItem(\"form\", JSON.stringify(this.state));\n                                    });\n                                }} color=\"primary\" autoFocus>\n                                    Go back\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </Paper>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course[\"NewCourseList\"],\n        courseCategories: state.Course[\"CourseCategories\"],\n        registrationForm: state.Registration[\"registration_form\"],\n        submitStatus: state.Registration[\"submitStatus\"],\n        parents: state.Users[\"ParentList\"],\n        students: state.Users[\"StudentList\"],\n        instructors: state.Users[\"InstructorList\"],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        registrationActions: bindActionCreators(registrationActions, dispatch),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Form);\n","import * as types from './actionTypes';\n\nexport function fetchTeacherAvailabilities(event){\n\n}\n\nexport function addEvent(event) {\n    return { type: types.ADD_EVENT, payload: event };\n}\n\nexport function deleteEvent(event) {\n    return { type: types.DELETE_EVENT, payload: event }\n}\n\nexport function filterEvent(event) {\n    return { type: types.FILTER_EVENT, payload: event }\n}","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes, { bool } from 'prop-types';\nimport React, { Component } from 'react';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listViewPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction'\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\n\nimport * as calenderActions from '../../../actions/calenderActions';\n\n// Material-Ui dependencies\n\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ChevronLeftOutlinedIcon from '@material-ui/icons/ChevronLeftOutlined';\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\nimport Paper from \"@material-ui/core/Paper\";\nimport DateRangeOutlinedIcon from '@material-ui/icons/DateRangeOutlined';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport SearchIcon from '@material-ui/icons/Search';\n\n// Tool tip dependencies \nimport tippy from 'tippy.js'\nimport 'tippy.js/themes/google.css'\nimport './scheduler.scss'\n\n\n\n\nclass Scheduler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            calendarWeekends: true,\n            calendarResources: [],\n            calendarEvents: [],\n            currentDate: \"\",\n            viewValue: '',\n            filterValue: \"C\",\n            resourceFilterValue: \"R\",\n            calendarIcon: true,\n            resourceIcon: false,\n\n        };\n\n    }\n\n    calendarComponentRef = React.createRef();\n\n    componentWillMount() {\n        this.setState({\n            calendarEvents: this.getEvents(),\n        })\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            currentDate: this.currentDate()\n        })\n\n    }\n\n    // The eventRender function handles the tooltip\n    handleToolTip(info) {\n        function truncate(string) {\n            let numberOfCharRemoved = 88\n            if (string.length > numberOfCharRemoved)\n                return string.substring(0, numberOfCharRemoved) + '...';\n            else\n                return string;\n        };\n\n\n\n        new tippy(info.el, {\n            content: `\n            <div class=\"toolTip\">\n            <div class='title'><h3> ${info.event.title} </h3></div>\n            <div class=\"container\">\n            <div class='clock'><span class='clock_icon'>  ${ new Date(info.event.start).toDateString().slice(0, 10)}</span></div>   \n            <span> \n            ${info.event.extendedProps.type}\n            </span>\n            <div class='pin_icon'><span class=''>Room # ${info.event.extendedProps.room_id}</span></div> \n            <div class='teacher_icon'><span class=''>${info.event.extendedProps.instructor ? info.event.extendedProps.instructor : \"No teacher Yet\"}</span></div> \n            <div class='discription_icon'><span class='description-text'>${truncate(info.event.extendedProps.description)}</span></div> \n            </div>\n        </div>\n            `,\n            theme: \"light\",\n            placement: 'right',\n            interactive: true,\n        })\n    }\n\n\n    // Full Calendar API used to change calendar views \n    toggleWeekends = () => {\n        this.setState({ // update a property\n            calendarWeekends: !this.state.calendarWeekends\n        })\n    };\n\n    // Change from day,week, and month views\n    changeView = (value) => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.changeView(value)\n        let date = this.currentDate()\n        this.setState({\n            viewValue: value,\n            currentDate: date\n        })\n    }\n\n    goToNext = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n\n        calendarApi.next()\n        let date = this.currentDate();\n        this.setState({\n            currentDate: date\n        })\n    }\n\n    goToPrev = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.prev()\n        let date = this.currentDate();\n        this.setState({\n            currentDate: date\n        })\n    }\n\n    today = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.today()\n        this.currentDate()\n    }\n\n    currentDate = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        const date = calendarApi.view.title\n        return date\n    }\n\n    // This function changes the resouce view when click as well as change the color of the icon \n    changeViewToResource = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.changeView('resourceTimeline');\n        this.currentDate()\n        this.setState({\n            resourceIcon: true,\n            calendarIcon: false,\n            calendarResources: this.getRoomResources(),\n        })\n\n    }\n\n    changeViewToCalendar = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.changeView('dayGridMonth');\n        this.currentDate()\n        this.setState({\n            calendarIcon: true,\n            resourceIcon: false\n        })\n    }\n\n    // Function to parse the inital state into data that full calendar could\n    getEvents = () => {\n        let courseKeys = Object.keys(this.props.sessions);\n        let instructorKeys = Object.keys(this.props.instructors)\n\n\n        // creates an array from courseKeys [0,1,2,3,...,10]\n        let sessionsInViewList = courseKeys.map((courseKey) => {\n            // course will get each session and map with courseKey\n            let course = this.props.sessions[courseKey];\n            // gets the keys to each session that was mapped \n            let courseSessionKeys = Object.keys(course);\n            // creates an array that maps through courseSessionKey \n            let courseSessions = courseSessionKeys.map((sessionKey) => {\n                // sessions = sessions from initial state\n                // courseKey is the key value from inital state\n                // sessionKey is the variable named inside the map, this is mapping over each coursekey\n                // session is the matched pairs of course and session objects \n                let session = this.props.sessions[courseKey][sessionKey];\n\n                session[\"title\"] = this.props.courses[session.course_id].title;\n                session[\"description\"] = this.props.courses[session.course_id].description;\n                session['type'] = this.props.courses[session.course_id].type;\n                session['resourceId'] = this.props.courses[session.course_id].room_id;\n\n                return session;\n\n            })\n            return courseSessions;\n        })\n\n        let sessionsInView = [];\n        sessionsInViewList.forEach((sessionsList) => {\n            sessionsInView = sessionsInView.concat(sessionsList);\n        })\n\n        let sessionsInViewWithUrl = sessionsInView.map((el) => {\n            const newSessions = Object.assign({}, el);\n            newSessions.url = `http:/scheduler/view-session/${newSessions.course_id}/${newSessions.session_id}`\n            return newSessions\n        })\n\n        return sessionsInViewWithUrl\n\n    }\n    // This function is used in material-ui for the eventhandler\n    handleFilterChange = (name) => event => {\n        console.log(event)\n        this.setState({\n            ...this.state,\n            [name]: event.target.value\n        })\n        this.filterEvent(event.target.value)\n    }\n\n    // This will filter out event based on type\n    filterEvent = (type) => {\n        // Grabs the array of objects to filter \n        const items = this.getEvents();\n        const newEvents = items.filter(item => item.type == type);\n        this.setState(prevState => (\n            {\n                calendarEvents: prevState.calendarEvents = newEvents\n            }))\n    }\n\n    handleResourceFilterChange = (name) => event => {\n        this.setState({\n            ...this.state,\n            [name]: event.target.value\n        })\n        if (event.target.value === \"R\") {\n            let rooms = this.getRoomResources()\n            this.setState(prevState => (\n                {\n                    calendarResources: rooms\n                }\n            ))\n            console.log(rooms)\n        } else {\n            let instructors = this.getInstructorResources()\n            console.log(instructors)\n            this.setState(prevState => (\n                {\n                    calendarResources: instructors\n                }\n            ))\n        }\n    }\n\n\n    // gets the values of course object \n    getRoomResources = () => {\n        let courses = Object.values(this.props.courses);\n        let resourceList = courses.map((course) => {\n            return {\n                \"id\": course.course_id,\n                \"title\": `Room ${course.room_id}`,\n\n            }\n        });\n\n        return resourceList\n    }\n\n    // gets values of instructors and places them in the resource col\n    getInstructorResources = () => {\n        let instructor = Object.values(this.props.instructors)\n        let instructorList = instructor.map((inst) => {\n            console.log(inst)\n            return {\n                \"id\": inst.user_id,\n                'title': inst.name\n            }\n\n        })\n\n        return instructorList\n    }\n\n\n\n\n    render() {\n        return (\n            <Grid >\n                <Paper className=\"paper\">\n                    <div className='demo-app-calendar'>\n                        <Typography variant=\"h3\" align=\"left\">Scheduler</Typography>\n                        <br />\n                        <Grid container\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            className=\"scheduler-header\"\n                        >\n                            <Grid item  >\n                                <IconButton color={this.state.calendarIcon ? \"primary\" : \"\"} onClick={this.changeViewToCalendar} className={'calendar-icon'} aria-label='next-month'>\n                                    <DateRangeOutlinedIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item  >\n                                <IconButton color={this.state.resourceIcon ? \"primary\" : \"\"} onClick={this.changeViewToResource} className={'resource-icon'} aria-label='next-month'>\n                                    <ViewListIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item  >\n                                <IconButton onClick={this.goToNext} className={'next-month'} aria-label='next-month'>\n                                    <SearchIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item md={1} lg={1}>\n                                {(this.state.calendarIcon) ?\n                                    <FormControl className={'filter-select'}>\n                                        <InputLabel htmlFor=\"filter-class-type\"></InputLabel>\n\n                                        <Select\n                                            native\n                                            value={this.state.filterValue}\n                                            onChange={this.handleFilterChange('filterValue')}\n                                            inputProps={{\n                                                name: 'filterValue',\n                                                id: 'filter-class-type',\n                                            }}\n                                        >\n                                            <option value={\"C\"}>Class</option>\n                                            <option value={\"T\"}>Tutor</option>\n                                        </Select>\n                                    </FormControl>\n                                    :\n                                    <FormControl className={'filter-select'}>\n                                        <InputLabel htmlFor=\"filter-resource-type\"></InputLabel>\n\n                                        <Select\n                                            native\n                                            value={this.state.resourceFilterValue}\n                                            onChange={this.handleResourceFilterChange('resourceFilterValue')}\n                                            inputProps={{\n                                                name: 'resourceFilterValue',\n                                                id: 'filter-resource-type',\n                                            }}\n                                        >\n                                            <option value={\"R\"}>Room</option>\n                                            <option value={\"I\"}>Instructors</option>\n                                        </Select>\n                                    </FormControl>\n                                }\n\n                            </Grid>\n                            <Grid item lg={1} md={1}>\n                                <IconButton onClick={this.goToPrev} className={'prev-month'} aria-label=\"prev-month\">\n                                    <ChevronLeftOutlinedIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item lg={3} md={2}>\n                                <Typography variant={'h6'}>  {this.state.currentDate} </Typography>\n                            </Grid>\n                            <Grid item lg={1} md={1} >\n                                <IconButton onClick={this.goToNext} className={'next-month'} aria-label='next-month'>\n                                    <ChevronRightOutlinedIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item md={2} lg={1}>\n                                <FormControl className={'change-view'}>\n                                    <InputLabel htmlFor=\"change-view-select\"></InputLabel>\n                                    <Select\n                                        native\n                                        value={this.state.viewValue}\n                                        onChange={(event) => this.changeView(event.target.value)}\n                                        inputProps={{\n                                            name: 'viewValue',\n                                            id: 'change-view-select'\n                                        }}\n                                    >\n                                        <option value={\"timeGridDay\"}>Day</option>\n                                        <option value={\"dayGridWeek\"}>Week</option>\n                                        <option value={\"dayGridMonth\"}>Month</option>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={() => { this.changeViewToCalendar() }}\n                                >Calendar</Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={() => { this.changeViewToResource() }}\n                                >Resource</Button>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <FullCalendar\n                            defaultView=\"timeGridDay\"\n                            header={false}\n                            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listViewPlugin, resourceTimelinePlugin]}\n                            ref={this.calendarComponentRef}\n                            weekends={this.state.calendarWeekends}\n                            displayEventTime={true}\n                            eventColor={\"none\"}\n                            eventSources={[\n                                { events: this.state.calendarEvents, color: '#6FB87B' }\n                            ]}\n\n                            timeZone={'local'}\n                            eventMouseEnter={this.handleToolTip}\n                            eventLimit={4}\n                            nowIndicator={true}\n                            resourceOrder={'title'}\n                            resourceAreaWidth={'20%'}\n                            resources={this.state.calendarResources}\n                            schedulerLicenseKey={'GPL-My-Project-Is-Open-Source'}\n                        />\n                    </div>\n                </Paper >\n            </Grid >\n        )\n    }\n}\n\nScheduler.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course.NewCourseList,\n        sessions: state.Course.CourseSessions,\n        instructors: state.Users.InstructorList\n\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        calenderActions: bindActionCreators(calenderActions, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Scheduler);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M6,18V8H8V18H6M6,4.5H8V6.5H6V4.5M17,4H19V18H17V17.75C17,17.75 15.67,18 15,18A5,5 0 0,1 10,13A5,5 0 0,1 15,8C15.67,8 17,8.25 17,8.25V4M17,10.25C17,10.25 15.67,10 15,10A3,3 0 0,0 12,13A3,3 0 0,0 15,16C15.67,16 17,15.75 17,15.75V10.25Z\"\n});\n\nvar SvgIdentifier = function SvgIdentifier(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIdentifier, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/identifier.64906079.svg\";\nexport { ForwardRef as ReactComponent };","import { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Card, Paper, Typography } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { withRouter } from \"react-router-dom\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport PhoneIcon from \"@material-ui/icons/PhoneOutlined\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\n\nimport { ReactComponent as IDIcon } from \"../../identifier.svg\";\nimport './Accounts.scss';\n\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass ProfileCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n            usersList: [],\n            viewToggle: true, // true = list, false = card view\n        };\n    }\n\n    componentWillMount() {\n\n    }\n\n    addDashes(string) {\n        return(\n             `(${string.slice(0, 3)}-${string.slice(3, 6)}-${string.slice(6, 15)})`);\n    }\n\n    goToRoute(route) {\n        this.props.history.push(this.props.match.url + route);\n    }\n    stringToColor(string) {\n        let hash = 0;\n        let i;\n\n        /* eslint-disable no-bitwise */\n        for (i = 0; i < string.length; i += 1) {\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        let colour = \"#\";\n\n        for (i = 0; i < 3; i += 1) {\n            const value = (hash >> (i * 8)) & 0xff;\n            colour += `00${value.toString(16)}`.substr(-2);\n        }\n        /* eslint-enable no-bitwise */\n\n        return colour;\n    }\n\n    render() {\n        const styles = (username) => ({\n            \"backgroundColor\": this.stringToColor(username),\n            \"color\": \"white\",\n            \"width\": \"5vw\",\n            \"height\": \"5vw\",\n            \"fontSize\": 20,\n            \"margin\": 20,\n        });\n\n        return (\n            <Grid item xs={12} sm={6} md={4} className=\"ProfileCard\">\n                <Card key={this.props.user.user_id}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={(event) => {\n                        event.preventDefault();\n                        this.goToRoute(`/${this.props.user.role}/${this.props.user.user_id}`);\n                    }}>\n                    <Grid container>\n                        <Hidden xsDown>\n                            <Grid item xs={4} md={3}>\n                                <Avatar\n                                    className={'avatar'}\n                                    style={styles(this.props.user.name)}>{this.props.user.name.match(/\\b(\\w)/g).join(\"\")}\n                                </Avatar>\n                            </Grid>\n                        </Hidden>\n                        <Grid item xs={8} md={9}>\n                            <CardContent className={\"text\"}>\n                                <Typography gutterBottom variant={\"h6\"} component={\"h2\"} align={'left'}>\n                                    {this.props.user.name}\n                                </Typography>\n                                <Typography component=\"p\" align={'left'}>\n                                    <Chip\n                                        style={{ cursor: \"pointer\" }}\n                                        className={`userLabel ${this.props.user.role}`}\n                                        label={this.props.user.role.charAt(0).toUpperCase() + this.props.user.role.slice(1)}\n                                    />\n                                </Typography>\n                                <Typography>\n                                    <Grid item xs={8} style={{ marginTop: 10 }}>\n                                        <Grid container>\n                                            <Grid item md={2} align=\"left\">\n                                                <IDIcon\n                                                    width={22}\n                                                    height={22} />\n                                            </Grid>\n                                            <Grid item md={10} align=\"left\">\n                                                #{this.props.user.user_id}\n                                            </Grid>\n                                            <Grid item md={2} align=\"left\">\n                                                <PhoneIcon />\n                                            </Grid>\n                                            <Grid item md={10} align=\"left\">\n                                                {this.addDashes(this.props.user.phone_number)}\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container>\n                                            <Grid item md={2} align=\"left\">\n                                                <EmailIcon />\n                                            </Grid>\n                                            <Grid item md={10} align=\"left\">\n                                                {this.props.user.email}\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Typography>\n                            </CardContent>\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n        )\n    }\n}\n\nProfileCard.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        instructors: state.Users.InstructorList,\n        parents: state.Users.ParentList,\n        students: state.Users.StudentList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProfileCard));\n","import {connect} from \"react-redux\";\nimport React, {Component} from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Card, Hidden, Paper, Typography} from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport {withRouter} from \"react-router-dom\";\n\nimport \"./Accounts.scss\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ProfileCard from \"./ProfileCard\";\nimport Grow from \"@material-ui/core/Grow\";\n\nclass Accounts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n            usersList: [],\n            viewToggle: true, // true = list, false = card view\n            mobileView: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentWillMount() {\n        let prevState = JSON.parse(sessionStorage.getItem('AccountsState'));\n        window.addEventListener(\"resize\", this.resize.bind(this));\n        this.resize();\n        if(prevState){\n            this.setState(prevState);\n\n        } else {\n            this.setState(() => {\n                let usersList = {};\n                Object.assign(usersList, this.props.parents);\n                Object.assign(usersList, this.props.students);\n                Object.assign(usersList, this.props.instructors);\n                Object.assign(usersList, this.props.receptionist);\n                return {usersList: usersList,}\n            });\n        }\n    }\n\n    resize() {\n        let currentHideNav = (window.innerWidth <= 760);\n        if (currentHideNav !== this.state.mobileView) {\n            this.setState({ mobileView: !this.state.mobileView });\n        }\n    }\n\n    goToRoute(route) {\n        this.props.history.push(this.props.match.url + route);\n    }\n\n    handleChange(e, newTabIndex) {\n        e.preventDefault();\n        let newUsersList = [];\n        let usersList = {};\n        Object.assign(usersList, this.props.parents);\n        Object.assign(usersList, this.props.students);\n        Object.assign(usersList, this.props.instructors);\n        Object.assign(usersList, this.props.receptionist);\n        switch (newTabIndex) {\n            case 0:\n                newUsersList = usersList;\n                break;\n            case 1:\n                newUsersList = this.props.instructors;\n                break;\n            case 2:\n                newUsersList = this.props.students;\n                break;\n            case 3:\n                newUsersList = this.props.receptionist;\n                break;\n            case 4:\n                newUsersList = this.props.parents;\n                break;\n            default:\n                newUsersList = usersList;\n        }\n        this.setState({value: newTabIndex, usersList: newUsersList},\n            ()=>{\n                sessionStorage.setItem('AccountsState', JSON.stringify(this.state));\n            }\n        );\n    }\n\n    stringToColor(string) {\n        let hash = 0;\n        let i;\n\n        /* eslint-disable no-bitwise */\n        for (i = 0; i < string.length; i += 1) {\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        let colour = \"#\";\n\n        for (i = 0; i < 3; i += 1) {\n            const value = (hash >> (i * 8)) & 0xff;\n            colour += `00${value.toString(16)}`.substr(-2);\n        }\n        /* eslint-enable no-bitwise */\n\n        return colour;\n    }\n\n    render() {\n        let styles = (username) => ({\n                backgroundColor: this.stringToColor(username),\n                color: \"white\",\n                width: 38,\n                height: 38,\n                fontSize: 14,\n            });\n        let tableView = () => (\n            <Table className=\"AccountsTable\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <Hidden mdDown>\n                            <TableCell>Email</TableCell>\n                        </Hidden>\n                        <TableCell>Phone</TableCell>\n                        <TableCell>Role</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {Object.values(this.state.usersList).map((row) => (\n                        <TableRow key={row.user_id}\n                            onClick={(event) => {\n                                event.preventDefault();\n                                this.goToRoute(`/${row.role}/${row.user_id}`);\n                            }}\n                            className=\"row\">\n                            <TableCell component=\"th\" scope=\"row\">\n                                <Grid container layout={\"row\"} alignItems={\"center\"}>\n                                    <Grid item md={3}>\n                                        <Avatar\n                                            style={styles(row.name)}>{row.name.match(/\\b(\\w)/g).join(\"\")}</Avatar>\n                                    </Grid>\n                                    <Grid item md={9}>\n                                        <Typography>\n                                            {row.name}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </TableCell>\n                            <Hidden mdDown>\n                                <TableCell>{row.email}</TableCell>\n                            </Hidden>\n                            <TableCell>{row.phone_number}</TableCell>\n                            <TableCell>{row.role.charAt(0).toUpperCase() + row.role.slice(1)}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        );\n\n        const cardView = () => {\n            return <Grow in={true}>\n                <Grid container xs={12} md={12} spacing={8} alignItems={'center'} direction={'row'} style={{marginTop:20}}>\n                    {Object.values(this.state.usersList).map((user) => (\n                        <ProfileCard user={user} key={user.user_id}/>))}\n                </Grid>\n            </Grow>\n        };\n\n        return (<Grid item xs={12} className=\"Accounts\">\n            <Paper className={\"paper\"}>\n                <BackButton/>\n                <hr/>\n                <Typography variant=\"h2\" align={\"left\"} className={\"heading\"}>Accounts</Typography>\n                <Grid container direction={\"row\"} alignItems={\"center\"}>\n                    <Grid item xs={12} md={10}>\n                        <Tabs\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            indicatorColor=\"primary\"\n                            variant=\"scrollable\"\n                            textColor=\"primary\"\n                            className={\"tabs\"}\n                        >\n                            <Tab label=\"ALL\"/>\n                            <Tab label=\"INSTRUCTORS\"/>\n                            <Tab label=\"STUDENTS\"/>\n                            <Tab label=\"RECEPTIONISTS\"/>\n                            <Tab label=\"PARENTS\"/>\n                        </Tabs>\n                    </Grid>\n                    {\n                        this.state.mobileView ? '' :\n                        <Grid item xs={2} className=\"toggleView\">\n                            <ListView className={`list icon ${this.state.viewToggle ? 'active':''}`} onClick={(event) => {\n                                event.preventDefault();\n                                this.setState({viewToggle: true},\n                                    ()=>{sessionStorage.setItem('AccountsState',JSON.stringify(this.state));});\n                            }}/>\n                            <CardView className={`card icon ${this.state.viewToggle ? '':'active'}`} onClick={(event) => {\n                                event.preventDefault();\n                                this.setState({viewToggle: false},\n                                    ()=>{sessionStorage.setItem('AccountsState',JSON.stringify(this.state));});\n                            }}/>\n                        </Grid>\n                    }\n                </Grid>\n                <Grid container\n                      direction={\"row\"}\n                      alignItems={\"center\"}\n                      spacing={8}\n                      className={'accounts-list-wrapper'}\n                >\n                    {\n                        this.state.mobileView ?\n                            cardView() :\n                            this.state.viewToggle ?\n                                tableView() :\n                                cardView()\n                    }\n                </Grid>\n            </Paper>\n        </Grid>)\n    }\n}\n\nAccounts.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        instructors: state.Users.InstructorList,\n        parents: state.Users.ParentList,\n        students: state.Users.StudentList,\n        receptionist: state.Users.ReceptionistList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Accounts));\n","import {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as registrationActions from \"../../../actions/registrationActions\";\nimport PropTypes from \"prop-types\";\nimport React, {useState, Fragment} from \"react\";\nimport BackButton from \"../../BackButton.js\";\nimport RegistrationActions from \"./RegistrationActions\";\nimport \"../../../theme/theme.scss\";\n\n// Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClassIcon from \"@material-ui/icons/Class\";\nimport {Divider, LinearProgress, TableBody, Typography} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport DownArrow from \"@material-ui/icons/KeyboardArrowDown\";\nimport UpArrow from \"@material-ui/icons/KeyboardArrowUp\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayRounded\";\nimport Button from \"@material-ui/core/Button\";\nimport {NavLink} from \"react-router-dom\";\n\nconst TableToolbar = () => (\n    <TableHead>\n        <TableRow>\n            {[\"Student\", \"Parent\", \"Phone\", \"Status\", \"\"].map((heading) => (\n                <TableCell\n                    key={heading}\n                    align=\"left\"\n                    padding=\"default\">\n                    {heading}\n                </TableCell>\n            ))}\n        </TableRow>\n    </TableHead>\n);\n\nconst stringToColor = (string) => {\n    let hash = 0;\n    let i;\n\n    for (i = 0; i < string.length; i += 1) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = \"#\";\n\n    for (i = 0; i < 3; i += 1) {\n        const value = (hash >> (i * 8)) & 0xff;\n        color += `00${value.toString(16)}`.substr(-2);\n    }\n\n    return color;\n};\n\nconst styles = (username) => ({\n    \"backgroundColor\": stringToColor(username),\n    \"color\": \"white\",\n    \"width\": 38,\n    \"height\": 38,\n    \"fontSize\": 14,\n    \"border\": \"1px solid white\",\n});\n\nconst formatPhone = (phone) => phone &&\n    `${phone.slice(0, 3)}-${phone.slice(3, 6)}-${phone.slice(6, 15)}`;\n\nconst RegistrationCourse = (props) => {\n    const course = props.courses[props.match.params.courseID];\n    const [expanded, setExpanded] = useState(\n        course.roster.reduce((object, studentID) =>\n            ({...object, [studentID]: false})), {}\n    );\n\n    const dayConverter = {\n        \"1\": \"Monday\",\n        \"2\": \"Tuesday\",\n        \"3\": \"Wednesday\",\n        \"4\": \"Thursday\",\n        \"5\": \"Friday\",\n        \"6\": \"Saturday\",\n    };\n\n    const days = course.schedule.days.map((day) => dayConverter[day]);\n\n    const timeOptions = {\"hour\": \"2-digit\", \"minute\": \"2-digit\"};\n    const dateOptions = {\"year\": \"numeric\", \"month\": \"short\", \"day\": \"numeric\"};\n\n    const startDate = new Date(course.schedule.start_date +\n        course.schedule.start_time),\n        endDate = new Date(course.schedule.end_date +\n            course.schedule.end_time),\n        startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n        endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions),\n        startDay = startDate.toLocaleDateString(\"en-US\", dateOptions),\n        endDay = endDate.toLocaleDateString(\"en-US\", dateOptions);\n\n    const instructor = props.instructors[course.instructor_id];\n\n    const rows = course.roster.map((student_id) => {\n        const student = props.students[student_id];\n        const parent = props.parents[student.parent_id];\n        const {notes, session_payment_status} = props.enrollments[student_id][course.course_id];\n        const paymentStatus = Object.values(session_payment_status).every((status) => status !== 0);\n        return [\n            (\n                <NavLink key={student_id}\n                    isActive={() => false}\n                    style={{\n                        \"textDecoration\": \"none\",\n                        \"color\": \"inherit\",\n                    }}\n                    to={`/accounts/student/${student_id}`}>\n                    {student.name}\n                </NavLink>\n            ),\n            (\n                <NavLink key={student_id}\n                    isActive={() => false}\n                    style={{\n                        \"textDecoration\": \"none\",\n                        \"color\": \"inherit\",\n                    }}\n                    to={`/accounts/parent/${student.parent_id}`}>\n                    {parent.name}\n                </NavLink>\n            ),\n            formatPhone(parent.phone_number),\n            (\n                <div\n                    key={student_id}\n                    style={{\n                        \"padding\": \"5px 0\",\n                        \"borderRadius\": \"10px\",\n                        \"backgroundColor\": paymentStatus ? \"#28D52A\" : \"#E9515B\",\n                        \"textAlign\": \"center\",\n                        \"width\": \"7vw\",\n                        \"color\": \"white\",\n                    }}>\n                    {paymentStatus ? \"Paid\" : \"Unpaid\"}\n                </div>\n            ),\n            (\n                <div key={student_id} className=\"actions\">\n                    <a href={`mailto:${parent.email}`}>\n                        <EmailIcon />\n                    </a>\n                </div>\n            ),\n            {\n                notes,\n                student,\n            },\n        ];\n    });\n\n    return (\n        <Grid item xs={12}>\n            <Paper className=\"paper\">\n                <Grid item lg={12}>\n                    <RegistrationActions courseTitle={course.course_title} />\n                </Grid>\n            </Paper>\n            <Paper className=\"paper content\">\n                <Grid container justify=\"space-between\">\n                    <Grid item sm={3}>\n                        <BackButton />\n                    </Grid>\n                    <Grid item sm={2}>\n                        <Button\n                            className=\"button\"\n                            style={{\n                                \"padding\": \"6px 10px 6px 10px\",\n                                \"backgroundColor\": \"white\",\n                            }}>\n                            <EditIcon style={{\"fontSize\": \"16px\"}} />\n                            Edit Course\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Divider className=\"top-divider\" />\n                <div className=\"course-heading\">\n                    <Typography\n                        align=\"left\"\n                        variant=\"h3\"\n                        style={{\"fontWeight\": \"500\"}}>\n                        {course.title}\n                    </Typography>\n                    <div className=\"date\">\n                        <CalendarIcon\n                            style={{\"fontSize\": \"16\"}}\n                            align=\"left\"\n                            className=\"icon\" />\n                        <Typography\n                            align=\"left\"\n                            style={{\n                                \"marginLeft\": \"5px\",\n                                \"marginTop\": \"10px\",\n                            }}>\n                            {startDay} - {endDay}\n                        </Typography>\n                    </div>\n                    <div className=\"info-section\">\n                        <div className=\"first-line\">\n                            <ClassIcon style={{\"fontSize\": \"16\"}} className=\"icon\" />\n                            <Typography align=\"left\" className=\"text\">\n                                Course Information\n                            </Typography>\n                        </div>\n                        <div className=\"second-line\">\n                            <Chip\n                                avatar={\n                                    <Avatar style={styles(instructor.name)}>\n                                        {instructor.name.match(/\\b(\\w)/g).join(\"\")}\n                                    </Avatar>\n                                }\n                                label={instructor.name}\n                                component={NavLink}\n                                to={`/accounts/instructor/${instructor.user_id}`}\n                                className=\"chip\" />\n                            <Typography align=\"left\" className=\"text\">\n                                {startTime} - {endTime}\n                            </Typography>\n                            <Typography align=\"left\" className=\"text\">\n                                {days}\n                            </Typography>\n                            <Typography align=\"left\" className=\"text\">\n                                {course.grade} Grade\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n                <Typography align=\"left\" className=\"description text\">\n                    {course.description}\n                </Typography>\n                <div className=\"course-status\">\n                    <div className=\"status\">\n                        <div className=\"text\">\n                            {course.roster.length} / {course.capacity} Spaces Taken\n                        </div>\n                    </div>\n                    <LinearProgress\n                        color=\"primary\"\n                        value={(course.roster.length / course.capacity) * 100}\n                        valueBuffer={100}\n                        variant=\"buffer\" />\n                </div>\n                <Table>\n                    <TableToolbar />\n                    <TableBody>\n                        {\n                            rows.map((row, i) => (\n                                <Fragment key={i}>\n                                    <TableRow>\n                                        {\n                                            row.slice(0, 5).map((data, j) => (\n                                                <TableCell\n                                                    key={j}\n                                                    className={j === 0 ? \"bold\" : \"\"}>\n                                                    {data}\n                                                </TableCell>\n                                            ))\n                                        }\n                                    </TableRow>\n                                    {\n                                        expanded[course.roster[i]] &&\n                                        <TableRow align=\"left\">\n                                            <TableCell component={Typography} style={{\n                                                \"padding\": \"10px 0 10px 20px\",\n                                            }}>\n                                                <span style={{\"padding\": \"5px\"}}>\n                                                    <b>School</b>: {\n                                                        row[5].student.school\n                                                    }\n                                                    <br />\n                                                </span>\n                                                <span style={{\"padding\": \"5px\"}}>\n                                                    <b>School Teacher</b>: {\n                                                        row[5].notes[\"Current Instructor in School\"]\n                                                    }\n                                                    <br />\n                                                </span>\n                                                <span style={{\"padding\": \"5px\"}}>\n                                                    <b>Textbook:</b> {\n                                                        row[5].notes[\"Textbook Used\"]\n                                                    }\n                                                    <br />\n                                                </span>\n                                            </TableCell>\n                                        </TableRow>\n                                    }\n                                </Fragment>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n            </Paper>\n        </Grid>\n    );\n};\n\nRegistrationCourse.propTypes = {\n    \"stuffActions\": PropTypes.object,\n    \"RegistrationForms\": PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n    \"courses\": state.Course[\"NewCourseList\"],\n    \"courseCategories\": state.Course[\"CourseCategories\"],\n    \"students\": state.Users[\"StudentList\"],\n    \"instructors\": state.Users[\"InstructorList\"],\n    \"parents\": state.Users[\"ParentList\"],\n    \"courseRoster\": state.Course[\"CourseRoster\"],\n    \"enrollments\": state.Enrollments,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    \"registrationActions\": bindActionCreators(registrationActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegistrationCourse);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registrationActions from '../../../actions/registrationActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\n//Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport BackButton from \"../../BackButton\";\nimport RegistrationActions from \"./RegistrationActions\";\n\nclass CourseCategory extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentWillMount() {\n        let CategoryInView = this.props.courseCategories.find((category) => {\n            return category.id.toString() === this.props.match.params.categoryID;\n        });\n        this.setState({ ...CategoryInView });\n    }\n\n    render() {\n        return (\n            <Grid item xs={12}>\n                <Paper className={\"paper\"}>\n                    <Grid item lg={12}>\n                        <RegistrationActions\n                        //admin={false}\n                        />\n                    </Grid>\n                </Paper>\n                <Paper className={\"paper content\"}>\n                    <BackButton />\n                    <Typography style={{ fontWeight: 500 }} variant={'h4'} align={'left'}>\n                        {this.state.cat_title}\n                    </Typography>\n                </Paper>\n            </Grid>\n        )\n    }\n}\n\nCourseCategory.propTypes = {\n    stuffActions: PropTypes.object,\n    RegistrationForms: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course[\"CourseList\"],\n        courseCategories: state.Course[\"CourseCategories\"],\n        students: state.Users[\"StudentList\"],\n        teachers: state.Users[\"TeacherList\"],\n        parents: state.Users[\"ParentList\"],\n        courseRoster: state.Course[\"CourseRoster\"],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        registrationActions: bindActionCreators(registrationActions, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CourseCategory);","import React, {useEffect, useState} from \"react\";\nimport * as authActions from \"../../actions/authActions.js\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {withRouter} from \"react-router\";\nimport PropTypes from \"prop-types\";\n\n// Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport \"./LoginPage.scss\";\n\nfunction LoginPage(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [savePassword, setSavePassword] = useState(false);\n    const [emailEmpty, setEmailEmpty] = useState(false);\n    const [passwordEmpty, setPasswordEmpty] = useState(false);\n\n    const handleTextInput = (setter, validator, {target}) => {\n        setter(target.value);\n        props.authActions.resetAttemptStatus();\n        validator(!target.value);\n    };\n\n    const login = () => {\n        props.authActions.login(email, password, savePassword);\n    };\n\n    useEffect(() => {\n        props.setLogin(true);\n        return () => {\n            props.setLogin(false);\n        };\n    });\n\n    if (props.auth.token) {\n        props.history.push(\"/accounts\");\n    }\n\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{\n                minHeight: \"100vh\",\n            }}>\n            <Grid item xs={3}>\n                <Paper className=\"bg\">\n                    <Typography\n                        align=\"center\"\n                        color=\"primary\">\n                        <span className=\"header\">sign in</span>\n                    </Typography>\n                    <form onSubmit={(event) => {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        login();\n                    }}>\n                        <TextField\n                            error={props.auth.failedLogin || emailEmpty}\n                            label=\"E-Mail\"\n                            className=\"email\"\n                            margin=\"dense\"\n                            value={email}\n                            onChange={(event) => {\n                                handleTextInput(setEmail, setEmailEmpty, event);\n                            }}\n                        />\n                        <TextField\n                            id=\"standard-password-input\"\n                            label=\"Password\"\n                            className=\"password\"\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            margin=\"normal\"\n                            value={password}\n                            error={props.auth.failedLogin || passwordEmpty}\n                            onChange={(event) => {\n                                handleTextInput(setPassword, setPasswordEmpty, event);\n                            }}\n                        />\n                        <Grid container>\n                            <Grid item className=\"remember\">\n                                <label>\n                                    <Checkbox\n                                        checked={savePassword}\n                                        onClick={() => {\n                                            setSavePassword(!savePassword);\n                                        }} />\n                                    Remember me\n                                </label>\n                            </Grid>\n                            <Grid item>\n                                <Button color=\"secondary\" className=\"forgot\">\n                                    <span className=\"forgotText\">Forgot Password?</span>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"button signIn\"\n                            disabled={!email || !password}\n                            onClick={login}>\n                            sign in\n                        </Button>\n                    </form>\n                    {\n                        props.auth.failedLogin &&\n                        <Typography color=\"error\">\n                            Invalid credentials\n                        </Typography>\n                    }\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n\nLoginPage.propTypes = {\n    \"auth\": PropTypes.shape({\n        \"failedLogin\": PropTypes.bool,\n        \"token\": PropTypes.string,\n    }),\n    \"authActions\": PropTypes.shape({\n        \"login\": PropTypes.func,\n        \"resetAttemptStatus\": PropTypes.func,\n    }),\n    \"history\": PropTypes.shape({\n        \"push\": PropTypes.func,\n    }),\n    \"setLogin\": PropTypes.func,\n};\n\nconst mapStateToProps = ({auth}) => ({auth});\n\nconst mapDispatchToProps = (dispatch) => ({\n    \"authActions\": bindActionCreators(authActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(LoginPage));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nfunction ProtectedRoute({component, render, auth, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            exact\n            render={() =>\n                auth.token\n                    ? component || (render && render(rest))\n                    : <Redirect push to=\"/login\" />\n            } />\n    );\n}\n\nProtectedRoute.propTypes = {\n    component: PropTypes.any,\n    render: PropTypes.func,\n    auth: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProtectedRoute);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as calenderActions from '../../../actions/calenderActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport '../../../theme/theme.scss';\n\n//Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NewCourse from \"@material-ui/icons/CalendarToday\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport UpdateTeacher from \"@material-ui/icons/PersonAdd\";\nimport Button from \"@material-ui/core/Button\";\nimport { NavLink } from \"react-router-dom\";\n\nclass SessionView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentWillMount() {\n\n    }\n\n    render() {\n\n\n        return (\n            <Grid item xs={12}>\n                <Paper className={\"paper\"}>\n                    <Grid container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        className=\"registration-action-control\">\n                        <Grid item>\n                            <Button component={NavLink} to=\"/scheduler/add-course\"\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className=\"button\">\n                                <NewCourse className=\"icon\" />\n                                Add New Course\n                </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                to=\"/\"\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className=\"button\">\n                                <UpdateTeacher className=\"icon\" />\n                                Update Teacher Avalibility\n                </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className=\"button\"\n                                aria-controls=\"simple-menu\"\n                                aria-haspopup=\"true\"\n                                onClick={\"\"}>\n                                <AssignmentIcon className=\"icon\" />\n                                Add New Classroom\n                </Button>\n                        </Grid>\n                    </Grid>\n\n                </Paper>\n            </Grid>\n        )\n    }\n}\n\nSessionView.propTypes = {\n    sessionView: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course[\"NewCourseList\"],\n        courseCategories: state.Course[\"CourseCategories\"],\n        students: state.Users[\"StudentList\"],\n        teachers: state.Users[\"TeacherList\"],\n        courseSessions: state.Course[\"CourseSessions\"],\n\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        calenderActions: bindActionCreators(calenderActions, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SessionView);","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as calenderActions from '../../../actions/calenderActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport BackButton from \"../../BackButton.js\";\nimport SessionActions from \"./SessionActions\";\nimport '../../../theme/theme.scss';\nimport './scheduler.scss'\nimport { NavLink } from \"react-router-dom\";\n// import TimeSelector from \"../../Form/TimeSelector\";\n\n//Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { Divider, LinearProgress, Typography, ListItem, RadioGroup } from \"@material-ui/core\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport FormControl from \"@material-ui/core/FormControl\"\n\n\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nimport NewCourse from \"@material-ui/icons/CalendarToday\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport UpdateTeacher from \"@material-ui/icons/PersonAdd\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayRounded\";\n\nimport List from '@material-ui/core/List'\nimport ListItemText from '@material-ui/core/ListItemText'\n\n\nimport Button from \"@material-ui/core/Button\";\n\nclass SessionView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            current: \"current\",\n            all: \"all\"\n        }\n    }\n\n\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n\n\n    componentWillMount() {\n        this.setState(() => {\n\n            let sessionData = this.props.courseSessions[this.props.computedMatch.params.course_id][this.props.computedMatch.params.session_id]\n            let courseData = this.props.courses[this.props.computedMatch.params.course_id]\n\n            let instructorData = this.props.instructors\n\n\n\n            return {\n                sessionData: sessionData,\n                courseData: courseData\n            }\n        })\n\n\n    }\n\n    render() {\n\n        const flexContainer = {\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            width: \"50%\",\n            padding: 0,\n        };\n\n\n\n\n        return (\n            <Grid container className={'main-session-view'}>\n\n                <Paper className={'paper'} mt={\"2em\"} >\n                    <Grid item className={'session-button'}>\n                        <BackButton />\n                    </Grid>\n                    <Divider />\n\n                    <Grid container className={'session-view'} ml={10} spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography className={'session-view-title'} align={'left'} variant={'h3'}>\n                                {this.state.courseData.title}\n                            </Typography>\n                        </Grid>\n\n                        <Grid container className={\"session-view-details\"} spacing={10} align={'left'} >\n                            <Grid item xs={6} md={7} lg={2}>\n                                <Typography variant=\"h5\"> Subject </Typography>\n                                <Typography varient=\"body1\">{this.state.courseData.subject} </Typography>\n                            </Grid>\n\n                            <Grid item xs={'auto'}>\n                                <Typography variant=\"h5\"> Date & Time </Typography>\n                                <Typography variant=\"body1\">{this.state.sessionData.start}</Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant=\"h5\"> Teacher </Typography>\n                                <Typography variant=\"body1\">{this.state.courseData.instructor_id}</Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Typography variant=\"h5\"> Description </Typography>\n                                <Typography variant=\"body1\" style={{ width: \"75%\" }} > {this.state.courseData.description}   </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container\n                        direction=\"row\"\n                        justify=\"flex-end\"\n                        className=\"session-detail-action-control\"\n                    >\n                        <Grid item>\n                            <Button\n                                to=\"/\"\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className=\"button\">\n                                Edit Session\n                            </Button>\n                        </Grid>\n                        <Grid item >\n                            <Button\n                                onClick={this.handleOpen}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className=\"button\">\n                                Delete\n                            </Button>\n                        </Grid>\n                        <Grid item >\n                            <Button\n                                component={NavLink} to=\"/scheduler\"\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className=\"button\">\n                                Return to scheduling\n                            </Button>\n                        </Grid>\n                    </Grid>\n\n                </Paper>\n\n\n\n                <Dialog\n                    maxWidth={'xs'}\n                    fullWidth={true}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"session-view-modal\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Delete</DialogTitle>\n                    <Divider />\n                    <DialogContent>\n                        <RadioGroup\n                            aria-label=\"delete\"\n                            name=\"delete\"\n                            onChange={this.handleChange}\n                        >\n                            <FormControlLabel\n                                value=\"current\"\n                                control={<Radio color=\"primary\" />}\n                                label=\"This Session\"\n                                labelPlacement=\"end\"\n                            />\n                            <FormControlLabel\n                                value=\"all\"\n                                control={<Radio color=\"primary\" />}\n                                label=\"All Sessions\"\n                                labelPlacement=\"end\"\n                            />\n                        </RadioGroup>\n\n                    </DialogContent>\n\n\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n          </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Apply\n          </Button>\n                    </DialogActions>\n                </Dialog>\n\n            </Grid>\n\n        )\n\n    }\n}\n\nSessionView.propTypes = {\n    sessionView: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course[\"NewCourseList\"],\n        courseCategories: state.Course[\"CourseCategories\"],\n        students: state.Users[\"StudentList\"],\n        instructors: state.Users[\"InstructorList\"],\n        courseSessions: state.Course[\"CourseSessions\"],\n\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        calenderActions: bindActionCreators(calenderActions, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SessionView);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Card, Paper, Typography } from \"@material-ui/core\";\nimport './ErrorNotFoundPage.scss';\nimport BackButton from \"../BackButton\";\nimport Button from \"@material-ui/core/Button\";\n\n\nfunction ErrorNotFoundPage(props) {\n    return (\n        <div className={'error-page'}>\n            <Paper className={'paper'}>\n                <BackButton />\n                <hr />\n                <Typography className=\"center\">\n                    404.\n                    <br />\n                    page not found.\n                    <div className=\"space\" />\n                    <Button className=\"backButton\"\n                        onClick={\n                            props.history.goBack}\n                    >\n                        <div className=\"buttonText\">Let's go back.</div>\n                    </Button>\n                </Typography>\n            </Paper>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nErrorNotFoundPage.propTypes = {\n    history: PropTypes.shape({\n        goBack: PropTypes.func.isRequired,\n    }).isRequired,\n    onBack: PropTypes.func,\n    alertMessage: PropTypes.string,\n};\n\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ErrorNotFoundPage);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nclass Schedule extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n\n\n    render() {\n        return(<h1>Schedule</h1>)\n    }\n\n}\n\nSchedule.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Schedule);","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\n\nclass InstructorCourses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            courseIDs: [],\n        };\n    }\n\n    componentWillMount() {\n        this.setState(()=>{\n            let CoursesTaughtByInstructor = Object.keys(this.props.courseList).filter((courseID)=>{\n               let courseInstructorID = this.props.courseList[courseID].instructor_id;\n               return this.props.user_id === courseInstructorID;\n            });\n            return {\n                courseIDs: CoursesTaughtByInstructor,\n            }\n        })\n    }\n\n    render() {\n        return(<Grid container>\n            <Grid item md={12}>\n                <Grid container className={'accounts-table-heading'}>\n                    <Grid item md={1}>\n                    </Grid>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color:'white', fontWeight:'500'}}>\n                            Session\n                        </Typography>\n                    </Grid>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color:'white', fontWeight:'500'}}>\n                            Dates\n                        </Typography>\n                    </Grid>\n                    <Grid item md={2}>\n                        <Typography align={'left'} style={{color:'white', fontWeight:'500'}}>\n                            Class Day(s)\n                        </Typography>\n                    </Grid>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color:'white', fontWeight:'500'}}>\n                            Time\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid container spacing={8}>\n            {\n                this.state.courseIDs.map((courseID)=>{\n                    let course = this.props.courseList[courseID];\n                    let DayConverter = {\n                        1: \"Monday\",\n                        2: \"Tuesday\",\n                        3: \"Wednesday\",\n                        4: \"Thursday\",\n                        5: \"Friday\",\n                        6: \"Saturday\",\n                    };\n                    let Days = course.schedule.days.map((day) => {\n                        return DayConverter[day];\n                    });\n\n                    let timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\n                    let dateOptions = { year: \"numeric\", month: \"short\", day: \"numeric\"};\n                    let startDate = new Date(course.schedule.start_date + course.schedule.start_time),\n                        endDate = new Date(course.schedule.end_date + course.schedule.end_time),\n                        startTime = startDate.toLocaleTimeString(\"en-US\",timeOptions),\n                        endTime = endDate.toLocaleTimeString(\"en-US\",timeOptions);\n                    startDate = startDate.toLocaleDateString(\"en-US\",dateOptions);\n                    endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n                    return (<Grid item md={12} className={'accounts-table-row'}>\n                        <Paper square={true} >\n                            <Grid container>\n                                <Grid item md={1}>\n                                </Grid>\n                                <Grid item md={3} >\n                                    <Typography align={'left'}>\n                                        {course.title}\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={3}>\n                                    <Typography align={'left'}>\n                                        {startDate} - {endDate}\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={2}>\n                                    <Typography align={'left'}>\n                                        {Days}\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={3}>\n                                    <Typography align={'left'}>\n                                        {startTime} - {endTime}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>);\n                })\n            }\n            </Grid>\n        </Grid>)\n    }\n\n}\n\nInstructorCourses.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        courseList: state.Course.NewCourseList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(InstructorCourses);","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from '@material-ui/core/Typography';\n\nclass Bio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        return (\n            <Card className={\"Bio\"}>\n                <Grid item xs={12}>\n                    <Grid container>\n                        <Grid item xs={6} >\n                            <div className=\"Bio\">\n                                <Typography class=\"bioHeader\">\n                                    Bio\n                                    </Typography>\n                                <Typography className=\"bioBody\">\n                                    {this.props.background.bio}\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className=\"BioBackground\">\n                                <div className=\"Bio2\">\n                                    <Grid>\n                                        <Grid container className=\"rowPadding\">\n                                            <Grid className=\"bioDescription\">\n                                                Experience:\n                                        </Grid>\n                                            <Grid className=\"chipPadding\">\n                                                <Chip\n                                                    label={this.props.background.experience + \" years at Summit\"}\n                                                    className=\"bioChip\"\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container className=\"rowPadding\">\n                                            <Grid className=\"bioDescription\">\n                                                Subjects offered:\n                                        </Grid>\n                                            {this.props.background.subjects.map((subjects) => {\n                                                return (\n                                                    <Grid className=\"chipPadding\">\n                                                        <Chip\n                                                            label={subjects} className=\"bioChip\"\n                                                            variant=\"outlined\"\n                                                        />\n                                                    </Grid>)\n                                            })}\n                                        </Grid>\n                                        <Grid container className=\"rowPadding\">\n                                            <Grid className=\"bioDescription\">\n                                                Language:\n                                        </Grid>\n                                            {this.props.background.languages.map((languages) => {\n                                                return (\n                                                    <Grid className=\"chipPadding\">\n                                                        <Chip \n                                                            label={languages}\n                                                            className=\"bioChip\"\n                                                            variant=\"outlined\"\n                                                        />\n                                                    </Grid>)\n                                            })}\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Card>)\n    }\n\n}\n\nBio.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Bio);","import {connect} from 'react-redux';\nimport React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\n\nclass CourseViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userCourseIDList: [],\n        };\n    }\n\n    componentWillMount() {\n        this.setState({\n            current: this.props.current,\n            userRole: this.props.user_role,\n            userID: this.props.user_id,\n            userEnrollments: this.props.enrollments[this.props.user_id],\n        });\n    }\n\n    goToRoute(route){\n        this.props.history.push(this.props.match.url+route);\n    }\n\n    setCourses = () => {\n        let today = new Date();\n        let filterCourseByDate = (endDate) => {\n            let inputEndDate = new Date(endDate);\n            // if we're rendering current courses then check if the end date for the course is later than today\n            // else if we're rendering past courses, then check if the end date for the course is later than today\n            return (this.props.current ? inputEndDate > today : inputEndDate < today)\n        };\n        let userCourseList;\n        switch (this.props.user_role) {\n            case \"instructor\":\n                // only keep course if instructor is associated with the course\n                userCourseList = Object.keys(this.props.courses).filter((courseID) => {\n                    let course = this.props.courses[courseID];\n                    return filterCourseByDate(course.schedule.end_date) && course.instructor_id === this.props.user_id;\n                });\n                break;\n            case \"student\":\n                // only keep course if the student is on the roster\n                userCourseList = Object.keys(this.props.courses).filter((courseID) => {\n                    let course = this.props.courses[courseID];\n                    return filterCourseByDate(course.schedule.end_date) && course.roster.includes(this.props.user_id);\n                });\n                break;\n            default:\n                console.warn(`Unhandled user role ${this.props.user_role}`);\n        }\n        return userCourseList;\n    };\n\n    courseDataParser(course) {\n        let DayConverter = {\n            1: \"Monday\",\n            2: \"Tuesday\",\n            3: \"Wednesday\",\n            4: \"Thursday\",\n            5: \"Friday\",\n            6: \"Saturday\",\n        };\n        let Days = course.schedule.days.map((day) => {\n            return DayConverter[day];\n        });\n\n        let timeOptions = {hour: \"2-digit\", minute: \"2-digit\"};\n        let dateOptions = {year: \"numeric\", month: \"short\", day: \"numeric\"};\n        let startDate = new Date(course.schedule.start_date + course.schedule.start_time),\n            endDate = new Date(course.schedule.end_date + course.schedule.end_time),\n            startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n            endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions);\n        startDate = startDate.toLocaleDateString(\"en-US\", dateOptions);\n        endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n\n        return {\n            Days:Days,\n            startTime: startTime,\n            endTime: endTime,\n            startDate: startDate,\n            endDate: endDate,\n        }\n    }\n\n    numPaidCourses(courseID){\n        let courseEnrollment = this.state.userEnrollments[courseID],\n            enrollmentPayments = Object.values(courseEnrollment.session_payment_status),\n            numPaidEnrollments = 0;\n        enrollmentPayments.forEach((paymentStatus)=>{\n            if(paymentStatus === 1){\n                numPaidEnrollments++;\n            }\n        });\n        return numPaidEnrollments;\n    }\n\n\n\n    render() {\n        this.setCourses();\n        let paymentStatus = (numPaidCourses)=>{\n            if(numPaidCourses>3) {\n                return \"good\";\n            } else if(numPaidCourses <= 3 && numPaidCourses >0) {\n                return \"warning\";\n            } else if(numPaidCourses <= 0){\n                return \"bad\";\n            }\n        };\n        return (<Grid container>\n            <Grid item md={12}>\n                <Grid container className={'accounts-table-heading'}>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                            Session\n                        </Typography>\n                    </Grid>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                            Dates\n                        </Typography>\n                    </Grid>\n                    <Grid item md={2}>\n                        <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                            Class Day(s)\n                        </Typography>\n                    </Grid>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                            Time\n                        </Typography>\n                    </Grid>\n                    <Grid item md={1}>\n                        <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                            Status\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid container spacing={8}>\n                {this.setCourses().length !== 0 ?\n                    this.setCourses().map((courseID) => {\n                        let course = this.props.courses[courseID];\n                        let {Days, startDate, endDate, startTime, endTime} = this.courseDataParser(course);\n                        return (<Grid item md={12}\n                                      className={'accounts-table-row'}\n                                      onClick={(e)=>{e.preventDefault(); this.goToRoute(`/${courseID}`)}}\n                                      key={courseID}>\n                            <Paper square={true}>\n                                <Grid container>\n                                    <Grid item md={3}>\n                                        <Typography align={'left'}>\n                                            {course.title}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={3}>\n                                        <Typography align={'left'}>\n                                            {startDate} - {endDate}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={2}>\n                                        <Typography align={'left'}>\n                                            {Days}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={3}>\n                                        <Typography align={'left'}>\n                                            {startTime} - {endTime}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={1}>\n                                        <div className={`sessions-left-chip ${paymentStatus(this.numPaidCourses(courseID))}`}>\n                                            {this.numPaidCourses(courseID)}\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>);\n                    }) :\n                    <Grid item md={12}>\n                        <Paper className={'info'}>\n                            <Typography style={{fontWeight: 700}}>\n                                No Courses Yet!\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                }\n            </Grid>\n        </Grid>)\n    }\n\n}\n\nCourseViewer.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        usersList: state.Users,\n        courses: state.Course.NewCourseList,\n        enrollments: state.Enrollments,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CourseViewer));","import {connect} from 'react-redux';\nimport React, {Component} from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport {TableBody, TableHead} from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nclass PaymentHistory extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            payments: [],\n        };\n    }\n\n    componentWillMount() {\n        this.setState(() => {\n            let userPayments = Object.keys(this.props.payments[this.props.user_id]).map((courseID) => {\n                let coursePayments = this.props.payments[this.props.user_id][courseID];\n                coursePayments = Object.keys(coursePayments).map((subPayID) => {\n                    return {\n                        ...coursePayments[subPayID],\n                        payment_id: this.props.user_id.toString() + courseID.toString() + subPayID.toString(),\n                        course_id: courseID,\n                    };\n                });\n                return coursePayments;\n            });\n            let allUserPayments = [];\n            userPayments.forEach((coursePaymentsList) => {\n                allUserPayments = allUserPayments.concat(coursePaymentsList);\n            });\n            return {\n                payments: allUserPayments,\n            };\n        });\n    }\n\n    render() {\n        let numericDateString = (date) => {\n            let DateObject = new Date(date),\n                numericOptions = {year: \"numeric\", month: \"numeric\", day: \"numeric\"};\n            return DateObject.toLocaleDateString(\"en-US\", numericOptions);\n        };\n\n        return (<Grid item md={12}>\n            <Paper className={'payments-history'}>\n                <Table>\n                    <TableHead>\n                        <TableCell>ID</TableCell>\n                        <TableCell>Transaction Date</TableCell>\n                        <TableCell>Course</TableCell>\n                        <TableCell>Method</TableCell>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.state.payments.map((payment) => {\n                                return <TableRow key={payment.payment_id}>\n                                    <TableCell>\n                                        {payment.payment_id}\n                                    </TableCell>\n                                    <TableCell>\n                                        {numericDateString(payment.date)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {this.props.courses[payment.course_id].title}\n                                    </TableCell>\n                                    <TableCell>\n                                        {payment.method.charAt(0).toUpperCase() + payment.method.slice(1)}\n                                    </TableCell>\n                                </TableRow>\n                            })\n                        }\n                    </TableBody>\n                </Table>\n            </Paper>\n        </Grid>)\n    }\n\n}\n\nPaymentHistory.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        payments: state.Payments,\n        courses: state.Course.NewCourseList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PaymentHistory);","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\n\nclass ParentContact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parent: {},\n        };\n    }\n\n    componentWillMount() {\n        this.setState({\n            parent: this.props.parents[this.props.parent_id]\n        })\n    }\n\n    addDashes(f){\n        return(\"(\"+f.slice(0,3)+\"-\"+f.slice(3,6)+\"-\"+f.slice(6,15)+\")\");\n    }\n\n    render() {\n        //this.state.parent.name\n        return (\n            <Grid item md={12}>\n                <Grid container spacing={16}>\n                    <Grid item xs={4} >\n                        <Paper className={\"ParentContact\"}>\n                            <div className=\"parent-header\" align=\"left\">\n                                <Typography className=\"header-text\">\n                                    {this.state.parent.name}\n                                </Typography>\n                            </div>\n                            <div className={\"actions\"} align=\"right\">\n                                <EditIcon />\n                            </div>\n                            <Grid container spacing={16} className=\"bodyText\">\n                                    <Grid item xs={5} align=\"left\" className=\"bold\">\n                                        Relation\n                                    </Grid>\n                                    <Grid item xs={5} align=\"left\">\n                                        {this.state.parent.relationship}\n                                    </Grid>\n                                    <Grid item xs={5} align=\"left\" className=\"bold\">\n                                        Phone\n                                    </Grid>\n                                    <Grid item xs={5} align=\"left\">\n                                        {this.addDashes(this.state.parent.phone_number)}\n                                    </Grid>\n                                    <Grid item xs={5} align=\"left\" className=\"bold\">\n                                        Email\n                                    </Grid>\n                                    <Grid item xs={5} align=\"left\">\n                                        {this.state.parent.email}\n                                    </Grid>\n                                </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n\n}\n\nParentContact.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        parents: state.Users.ParentList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ParentContact);","import {connect} from \"react-redux\";\nimport React, {Component} from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport PhoneIcon from \"@material-ui/icons/PhoneOutlined\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\nimport {ReactComponent as IDIcon} from \"../../../identifier.svg\";\nimport \"../Accounts.scss\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {withRouter} from \"react-router-dom\";\n\nclass StudentInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"student\": this.props.user.student_ids\n                .map((student_id) => this.props.students[student_id]),\n        };\n    }\n\n    addDashes(string) {\n        return (\n            `(${string.slice(0, 3)}-${string.slice(3, 6)}-${string.slice(6, 15)})`);\n    }\n\n    stringToColor(string) {\n        let hash = 0;\n        let i;\n\n        /* eslint-disable no-bitwise */\n        for (i = 0; i < string.length; i += 1) {\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        let colour = \"#\";\n\n        for (i = 0; i < 3; i += 1) {\n            const value = (hash >> (i * 8)) & 0xff;\n            colour += `00${value.toString(16)}`.substr(-2);\n        }\n        /* eslint-enable no-bitwise */\n\n        return colour;\n    }\n\n    goToRoute(route) {\n        this.props.history.push(route);\n    }\n\n    render() {\n        const styles = (username) => ({\n            \"backgroundColor\": this.stringToColor(username),\n            \"color\": \"white\",\n            \"width\": \"5vw\",\n            \"height\": \"5vw\",\n            \"fontSize\": 20,\n            \"margin\": 20,\n        });\n\n        return (\n            <Grid container spacing={40} alignItems=\"center\" direction=\"row\" item xs={12}>\n                {this.state.student.map((student) =>\n                    <Grid item xs={12} sm={6} className=\"ProfileCard\" key={student.user_id}>\n                        <Card\n                            // onClick={() => {\n                            //     this.props.history.push(`/accounts/student/${student.user_id}`);\n                            // }}\n                            key={student.user_id}\n                            // style={{\n                            //     \"cursor\": \"pointer\",\n                            // }}\n                        >\n                            <Grid container>\n                                <Grid component={Hidden} xsDown item xs={4} lg={3}>\n                                    <Avatar\n                                        style={styles(student.name)}>\n                                        {student.name.match(/\\b(\\w)/g).join(\"\")}\n                                    </Avatar>\n                                </Grid>\n                                <Grid item xs={8}>\n                                    <CardContent className=\"text\">\n                                        <Typography gutterBottom variant=\"h6\" component=\"h2\" align=\"left\">\n                                            {student.name}\n                                        </Typography>\n                                        <Typography component=\"p\" align=\"left\">\n                                            <Chip\n                                                style={{\"marginLeft\": 0, \"marginTop\": 0}}\n                                                className={`userLabel ${student.role}`}\n                                                label={student.role.charAt(0).toUpperCase() + student.role.slice(1)}\n                                            />\n                                        </Typography>\n                                        <Typography>\n                                            <Grid item xs={8} style={{\"marginTop\": 10}}>\n                                                <Grid container>\n                                                    <Grid item xs={4} align=\"left\">\n                                                        <IDIcon\n                                                            width={22}\n                                                            height={22} />\n                                                    </Grid>\n                                                    <Grid item xs={8} align=\"left\">\n                                                        #{student.user_id}\n                                                    </Grid>\n                                                    <Grid item xs={4} align=\"left\">\n                                                        <PhoneIcon />\n                                                    </Grid>\n                                                    <Grid item xs={8} align=\"left\">\n                                                        {this.addDashes(student.phone_number)}\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid container>\n                                                    <Grid item xs={4} align=\"left\">\n                                                        <EmailIcon />\n                                                    </Grid>\n                                                    <Grid item xs={8} align=\"left\">\n                                                        {student.email}\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Typography>\n                                    </CardContent>\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    </Grid>)}\n            </Grid>\n        );\n    }\n}\n\nStudentInfo.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n    \"payments\": state.Payments,\n    \"courses\": state.Course.NewCourseList,\n    \"students\": state.Users.StudentList,\n    \"parents\": state.Users.ParentList,\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(StudentInfo));\n","import {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Table from \"@material-ui/core/Table\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Button} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\n\nconst msPerWeek = 1000 * 60 * 60 * 24 * 7;\n\nconst calcSessionCost = ({\n    \"schedule\": {start_date, end_date, days},\n    tuition,\n}) => {\n    const startDate = new Date(start_date);\n    const endDate = new Date(end_date);\n    const numWeeks = (endDate - startDate) / msPerWeek;\n    const numSessions = numWeeks * days.length;\n    return tuition / numSessions;\n};\n\nconst PayCourses = (props) => {\n    const rows = props.user.student_ids.map((studentID) => {\n        const student = props.students[studentID];\n\n        const unpaidEnrollments = Object.entries(props.enrollments[studentID])\n            .map(([courseID, {session_payment_status}]) => {\n                const unpaidCount = Object.values(session_payment_status)\n                    .reduce((total, paymentStatus) => total + (paymentStatus === 0), 0);\n                return {\n                    courseID,\n                    unpaidCount,\n                };\n            });\n\n        const numUnpaid = unpaidEnrollments\n            .reduce((total, {unpaidCount}) => total + unpaidCount, 0);\n        const tuition = unpaidEnrollments.reduce(\n            (total, {courseID, unpaidCount}) =>\n                total + Math.round(unpaidCount * calcSessionCost(props.courses[courseID])), 0\n        );\n\n        return {\n            student,\n            numUnpaid,\n            tuition,\n        };\n    });\n\n    return (\n        <Grid>\n            <Grid item md={6}>\n                <Table component={Paper}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"left\">\n                                Student\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                Unpaid&nbsp;Courses\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                Tuition\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map(({\n                            \"student\": {first_name, last_name, user_id},\n                            numUnpaid,\n                            tuition,\n                        }) => (\n                            <TableRow key={user_id}>\n                                <TableCell align=\"left\">\n                                    {first_name}&nbsp;{last_name}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {numUnpaid}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {tuition}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <Button\n                    style={{\n                        \"float\": \"right\",\n                    }}\n                    component={NavLink}\n                    to={`/accounts/parents/${props.user.user_id}/pay`}>\n                    $ Pay\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nPayCourses.propTypes = {\n    \"user\": PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    \"payments\": state.Payments,\n    \"courses\": state.Course.NewCourseList,\n    \"parents\": state.Users.ParentList,\n    \"students\": state.Users.StudentList,\n    \"enrollments\": state.Enrollments,\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PayCourses);\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport RemoveIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport AlertIcon from \"@material-ui/icons/AddAlertOutlined\";\n\nclass Notes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes:[],\n        };\n    }\n\n    componentWillMount(){\n        //TODO: notes in descending order\n        this.setState(()=>{\n            let notes = Object.keys(this.props.user_notes).map((noteID)=>{\n               return this.props.user_notes[noteID];\n            });\n            return {\n                notes:notes, \n            }\n        }); \n    }\n\n    render() {\n        console.log(this.state.notes);\n        let numericDateString = (date)=>{\n            let DateObject = new Date(date),\n                numericOptions = {\n                    year: \"numeric\",\n                    month: \"short\",\n                    day: \"numeric\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                };\n            return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n        };\n        return(<Grid item md={12}>\n            <Grid container spacing={16}>\n                {this.state.notes.map((note,i) => {\n                    return <Grid item xs={3}  key={i}>\n                        <Paper className={\"note\"}>\n                            <div className={\"actions\"}>\n                                <EditIcon/>\n                                <AlertIcon/>\n                                <RemoveIcon/>\n                            </div>\n                            <Typography className={\"body\"} align={'left'}>\n                                {note.body}\n                            </Typography>\n                            <Typography className={\"date\"} align={'right'}>\n                                {numericDateString(note.timestamp)}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                })}\n            </Grid>\n        </Grid>)\n    }\n\n}\n\nNotes.propTypes = {\n    user_notes: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Notes);","import {connect} from 'react-redux';\nimport React, {Component} from 'react';\n\nimport Schedule from \"./TabComponents/Schedule.js\";\nimport InstructorCourses from './TabComponents/InstructorCourses';\nimport Bio from './TabComponents/Bio';\nimport CourseViewer from './TabComponents/CourseViewer';\nimport PaymentHistory from './TabComponents/PaymentHistory';\nimport ParentContact from './TabComponents/ParentContact';\nimport StudentInfo from './TabComponents/StudentInfo';\nimport PayCourses from './TabComponents/PayCourses';\nimport Notes from './TabComponents/Notes';\nimport Grid from \"@material-ui/core/Grid\";\n\nclass ComponentViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tab_id: 0,\n        };\n    }\n\n    renderComponent() {\n        let component;\n        switch (this.props.inView) {\n            case 0:\n                component = <Schedule key={this.props.inView}/>;\n                break;\n            case 1:\n                component = <InstructorCourses user_id={this.props.user.user_id} key={this.props.inView}/>;\n                break;\n            case 2:\n                component = <Bio\n                key={this.props.inView}\n                background={this.props.user.background}\n                />;\n                break;\n            case 3:\n                component = <CourseViewer\n                    current={true}\n                    user_id={this.props.user.user_id}\n                    user_role={this.props.user.role}\n                    key={this.props.inView}\n                />;\n                break;\n            case 4:\n                component = <CourseViewer\n                    current={false}\n                    user_id={this.props.user.user_id}\n                    user_role={this.props.user.role}\n                    key={this.props.inView}\n                />;\n                break;\n            case 5:\n                component = <PaymentHistory user_id={this.props.user.user_id} key={this.props.inView}/>;\n                break;\n            case 6:\n                component = <ParentContact parent_id={this.props.user.parent_id} key={this.props.inView}/>;\n                break;\n            case 7:\n                component = <Notes user_notes={this.props.user.notes} key={this.props.inView}/>;\n                break;\n            case 8:\n                component = <StudentInfo user={this.props.user} key={this.props.inView}/>;\n                break;\n            case 9:\n                component = <PayCourses user={this.props.user} key={this.props.inView}/>;\n                break;\n            default:\n                component = <Schedule key={this.props.inView}/>;\n        }\n        return (<Grid item xs={12} style={{paddingTop: 15 + \"px\"}}>{component}</Grid>);\n    }\n\n    render() {\n        return <Grid container>\n            {this.renderComponent()}\n        </Grid>\n    }\n\n}\n\nComponentViewer.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ComponentViewer);\n","import {connect} from \"react-redux\";\nimport React, {Component} from \"react\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport PhoneIcon from \"@material-ui/icons/PhoneOutlined\";\nimport MoneyIcon from \"@material-ui/icons/LocalAtmOutlined\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport {ReactComponent as IDIcon} from \"../../identifier.svg\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Button from \"@material-ui/core/Button\";\nimport {NavLink} from \"react-router-dom\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\n\nclass ProfileHeading extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    addDashes(string) {\n        return (\n            `(${string.slice(0, 3)}-${string.slice(3, 6)}-${string.slice(6, 15)})`);\n    }\n\n    renderStudentProfile() {\n        return (\n            <Grid container>\n                <Grid item md={10}>\n                    <Grid container>\n                        <Grid item md={6} className=\"rowPadding\">\n                            {this.props.user.birthday}\n                        </Grid>\n                        <Grid item md={1} className=\"rowPadding\">\n                            <IDIcon height={24} width={24} />\n                        </Grid>\n                        <Grid item md={5} className=\"rowPadding\">\n                            #{this.props.user.user_id}\n                        </Grid>\n                        <Grid item md={6} className=\"rowPadding\">\n                            Grade {this.props.user.grade}\n                        </Grid>\n                        <Grid item md={1} className=\"rowPadding\">\n                            <PhoneIcon />\n                        </Grid>\n                        <Grid item md={5} className=\"rowPadding\">\n                            {this.addDashes(this.props.user.phone_number)}\n                        </Grid>\n                        <Grid item md={6} className=\"rowPadding\">\n                            {this.props.user.school}\n                        </Grid>\n                        <Grid item md={1} className=\"rowPadding\">\n                            <EmailIcon />\n                        </Grid>\n                        <Grid item md={5} className=\"rowPadding\">\n                            {this.props.user.email}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>);\n    }\n\n    renderTeacherProfile() {\n        return (\n            <Grid container>\n                <Grid item md={6}>\n                    <Grid container>\n                        <Grid item md={1} className=\"rowPadding\">\n                            <IDIcon height={24} width={24} />\n                        </Grid>\n                        <Grid item md={5} className=\"rowPadding\">\n                            #{this.props.user.user_id}\n                        </Grid>\n                        <Grid container>\n                            <Grid item md={1} className=\"rowPadding\">\n                                <PhoneIcon />\n                            </Grid>\n                            <Grid item md={5} className=\"rowPadding\">\n                                {this.addDashes(this.props.user.phone_number)}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container>\n                        <Grid item md={1} className=\"rowPadding\">\n                            <EmailIcon />\n                        </Grid>\n                        <Grid item md={5} className=\"rowPadding\">\n                            {this.props.user.email}\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n            </Grid>);\n    }\n\n    renderParentProfile() {\n        return (\n            <Grid container>\n                <Grid item xs={1} className=\"rowPadding\">\n                    <IDIcon height={24} width={24} />\n                </Grid>\n                <Grid item ={5} className=\"rowPadding\">\n                    #{this.props.user.user_id}\n                </Grid>\n                <Grid item md={1} className=\"rowPadding\">\n                    <MoneyIcon />\n                </Grid>\n                <Grid item md={5} className=\"rowPadding\">\n                    0\n                </Grid>\n                <Grid item md={1} className=\"rowPadding\">\n                    <PhoneIcon />\n                </Grid>\n                <Grid item md={5} className=\"rowPadding\">\n                    {this.addDashes(this.props.user.phone_number)}\n                </Grid>\n                <Grid item md={6} className=\"rowPadding\">\n                </Grid>\n                <Grid item md={1} className=\"rowPadding\">\n                    <EmailIcon />\n                </Grid>\n                <Grid item md={5} className=\"rowPadding\">\n                    {this.props.user.email}\n                </Grid>\n                <Grid item md={6} className=\"rowPadding\">\n                </Grid>\n            </Grid>);\n    }\n\n    renderEditButton() {\n        if (this.props.user.role != \"receptionist\") {\n            return (\n                <Grid component={Hidden} xsDown align=\"right\" className=\"editPadding\">\n                    <Button\n                        className=\"editButton\"\n                        component={NavLink}\n                        to={`/registration/form/${this.getURL(this.props.user.role)}/${this.props.user.user_id}/edit`}>\n                        <EditIcon />\n                Edit Profile\n                    </Button>\n                </Grid>);\n        }\n    }\n\n    getURL(role) {\n        switch (role) {\n            case \"parent\":\n                return \"student\";\n            default:\n                return role;\n        }\n    }\n\n    render() {\n        let profileDetails;\n        switch (this.props.user.role) {\n            case \"student\":\n                profileDetails = this.renderStudentProfile();\n                break;\n            case \"instructor\":\n                profileDetails = this.renderTeacherProfile();\n                break;\n            case \"parent\":\n                profileDetails = this.renderParentProfile();\n            case \"receptionist\":\n                profileDetails = this.renderTeacherProfile();\n            default:\n        }\n        return (\n            <div>\n                <Grid container className=\"row\">\n                    <Grid align=\"left\">\n                        <h1>{this.props.user.name}</h1>\n                    </Grid>\n                    <Grid component={Hidden} xsDown>\n                        <Chip\n                            className={`userLabel ${this.props.user.role}`}\n                            label={this.props.user.role.charAt(0).toUpperCase() + this.props.user.role.slice(1)}\n                        />\n                    </Grid>\n                    <Grid component={Hidden} smUp xs={12}>\n                        <Chip\n                            className={`userLabel ${this.props.user.role}`}\n                            label={this.props.user.role.charAt(0).toUpperCase() + this.props.user.role.slice(1)}\n                        />\n                    </Grid>\n                    {this.renderEditButton()}\n                </Grid>\n                {profileDetails}\n            </div>\n        );\n    }\n}\n\nProfileHeading.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProfileHeading);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Paper, Typography} from \"@material-ui/core\";\nimport './Accounts.scss';\n\nimport BackButton from \"../../BackButton\";\nimport ComponentViewer from \"./ComponentViewer.js\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ProfileHeading from \"./ProfileHeading.js\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Chip from \"@material-ui/core/Chip\";\nimport BioIcon from \"@material-ui/icons/PersonOutlined\";\nimport CoursesIcon from \"@material-ui/icons/SchoolOutlined\";\nimport ScheduleIcon from \"@material-ui/icons/CalendarTodayOutlined\";\nimport NoteIcon from \"@material-ui/icons/NoteOutlined\";\nimport CurrentSessionsIcon from \"@material-ui/icons/AssignmentOutlined\";\nimport PastSessionsIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\nimport PaymentIcon from \"@material-ui/icons/CreditCardOutlined\";\nimport ContactIcon from \"@material-ui/icons/ContactPhoneOutlined\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\n\nconst userTabs = {\n    \"instructor\": [\n        {\n            tab_heading: \"Courses\",\n            tab_id: 1,\n            icon: <CoursesIcon className=\"TabIcon\" />,\n        },\n        {\n            tab_heading: \"Bio\",\n            tab_id: 2,\n            icon: <BioIcon className=\"TabIcon\" />,\n        },\n        {\n            tab_heading: \"Notes\",\n            tab_id: 7,\n            icon: <NoteIcon className=\"TabIcon\" />,\n        },\n    ],\n    \"student\": [\n        {\n            tab_heading: \"Current Sessions\",\n            tab_id: 3,\n            icon: <CurrentSessionsIcon className=\"TabIcon\" />,\n        },\n        {\n            tab_heading: \"Past Sessions\",\n            tab_id: 4,\n            icon: <PastSessionsIcon className=\"TabIcon\" />,\n        },\n        {\n            tab_heading: \"Parent Contact\",\n            tab_id: 6,\n            icon: <ContactIcon className=\"TabIcon\" />,\n        },\n        {\n            tab_heading: \"Notes\",\n            tab_id: 7,\n            icon: <NoteIcon className=\"TabIcon\" />,\n        }],\n\n        \"parent\": [\n            {\n                tab_heading: \"Student Info\",\n                tab_id: 8,\n                icon: <CurrentSessionsIcon className=\"TabIcon\"/>,\n            },\n            {\n                tab_heading: \"Notes\",\n                tab_id: 7,\n                icon: <NoteIcon className=\"TabIcon\"/>,\n            },\n        ],\n}\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n            tabs: [],\n            value: 0,\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentWillMount() {\n        let user;\n        let accountType = this.props.match.params.accountType, accountID = this.props.match.params.accountID;\n        switch (accountType) {\n            case \"student\":\n                user = this.props.students[accountID];\n                break;\n            case \"parent\":\n                user = this.props.parents[accountID];\n                break;\n            case \"instructor\":\n                user = this.props.instructors[accountID];\n                break;\n            case \"receptionist\":\n                user = this.props.receptionist[accountID];\n                break;\n            default:\n                user = -1;\n        }\n        // this.setState({ ...CourseInView });\n        if (user != \"receptionist\") {\n            this.setState({\n                user: user,\n                tabs: userTabs[accountType],\n            })\n        }\n        else {\n            this.setState({\n                user: user,\n            })\n        }\n    }\n\n    handleChange(e, newTabIndex) {\n        e.preventDefault();\n        this.setState({ value: newTabIndex });\n    }\n\n    stringToColor(string) {\n        let hash = 0;\n        let i;\n\n        /* eslint-disable no-bitwise */\n        for (i = 0; i < string.length; i += 1) {\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        let colour = '#';\n\n        for (i = 0; i < 3; i += 1) {\n            const value = (hash >> (i * 8)) & 0xff;\n            colour += `00${value.toString(16)}`.substr(-2);\n        }\n        /* eslint-enable no-bitwise */\n\n        return colour;\n    }\n\n    render() {\n        const styles = {\n            \"backgroundColor\": this.stringToColor(this.state.user.name),\n            \"color\": \"white\",\n            \"width\": \"10vw\",\n            \"height\": \"10vw\",\n            \"fontSize\": \"3.5vw\",\n            \"margin\": 20,\n        };\n        let tabs;\n        if (this.state.user.role !== \"receptionist\") {\n            tabs =\n                (<div>\n                    <Tabs\n                    key={this.props.inView}\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    {this.state.tabs.map((tab) => {\n                        return <Tab\n                            label={<>{tab.icon} {tab.tab_heading}</>}\n                            key={this.props.inView}\n                        />\n                    })}\n                </Tabs>\n                <ComponentViewer user={this.state.user} inView={this.state.tabs[this.state.value].tab_id} />\n                </div>)\n        }\n        else {\n            tabs=(<div>\n                <Grid align=\"left\">\n                    Action Log\n                </Grid>\n\n                <Paper className={'paper'}>\n            <Table className=\"ActionTable\">\n            <TableHead>\n                <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Time</TableCell>\n                    <TableCell>Description</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {Object.keys(this.state.user.action_log).map(rowID => {\n                    let row = this.state.user.action_log[rowID];\n                    return (\n                        <TableRow key={row.date}\n                                //   onClick={(e) => {\n                                //       e.preventDefault();\n                                //       this.goToRoute(`/${row.role}/${row.user_id}`)\n                                //   }}\n                                  className=\"row\">\n                            <TableCell component=\"th\" scope=\"row\">\n                                <Grid container layout={'row'} alignItems={'center'}>\n                                    <Grid item md={3}>\n                                    </Grid>\n                                    <Grid item md={9}>\n                                        <Typography>\n                                            {row.date}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </TableCell>\n                            <TableCell>{row.time}</TableCell>\n                            <TableCell>{row.description}</TableCell>\n                        </TableRow>\n                    )\n                })}\n            </TableBody>\n            </Table>\n            </Paper>\n            </div>\n            );\n        }\n        return (<div className=\"UserProfile\">\n            <Paper className={'paper'}>\n                <BackButton\n                    warn={false}\n                />\n                <hr />\n                <Grid container layout=\"row\" className={'padding'}>\n                    <Grid item md={2} component={Hidden} xsDown>\n                        <Avatar style={styles}>{this.state.user.name.match(/\\b(\\w)/g).join('')}</Avatar>\n                    </Grid>\n                    <Grid item md={8} className=\"headingPadding\">\n                        <ProfileHeading user={this.state.user} />\n                    </Grid>\n                </Grid>\n                {tabs}\n            </Paper>\n        </div>\n        )\n    }\n\n}\n\nUserProfile.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        students: state.Users.StudentList,\n        parents: state.Users.ParentList,\n        instructors: state.Users.InstructorList,\n        receptionist: state.Users.ReceptionistList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserProfile);\n","import {connect} from 'react-redux';\nimport React, {Component} from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\nimport BackButton from \"../../../BackButton\";\nimport {Link} from \"react-router-dom\";\n\nclass CourseSessionStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentWillMount() {\n        this.setState(() => {\n            let {accountID, courseID} = this.props.match.params;\n            let calendarSessions = this.props.courseSessions[courseID],\n                paymentSessionStatus = this.props.enrollments[accountID][courseID].session_payment_status,\n                statusKey = (status) => {\n                    if (status === 1) {\n                        return \"Paid\";\n                    } else if (status === 0) {\n                        return \"Unpaid\";\n                    } else {\n                        return \"Waived\";\n                    }\n                };\n            let course = this.props.courses[courseID];\n            if(course.type===\"T\"){\n                calendarSessions = Object.values(calendarSessions).map((session) => {\n                    return {\n                        ...session,\n                        status: statusKey(paymentSessionStatus[session.session_id]),\n\n                    }\n                });\n                return {\n                    sessions: calendarSessions,\n                    type:\"T\",\n                    studentID: accountID,\n                    course: course,\n                };\n            } else {\n                let status = \"Paid\";\n                Object.values(paymentSessionStatus).forEach((session)=>{\n                    if(session === 0){\n                        status = \"Unpaid\";\n                    }\n                });\n                return {\n                    sessions: [\n                        {\n                            ...course,\n                            status: status,\n                            type: \"C\",\n                        }\n                    ],\n                    type:\"C\",\n                    course: course,\n                    studentID: accountID,\n                }\n            }\n\n        })\n    }\n\n    courseDataParser(course) {\n        let DayConverter = {\n            0: \"Sunday\",\n            1: \"Monday\",\n            2: \"Tuesday\",\n            3: \"Wednesday\",\n            4: \"Thursday\",\n            5: \"Friday\",\n            6: \"Saturday\",\n        };\n        let Days = course.schedule.days.map((day) => {\n            return DayConverter[day];\n        });\n        let DaysString = \"\";\n        if(Days.length > 1){\n            Days.forEach((day)=>{\n                DaysString += day + \", \"\n            });\n        } else {\n            DaysString = Days[0];\n        }\n\n        let timeOptions = {hour: \"2-digit\", minute: \"2-digit\"};\n        let dateOptions = {year: \"numeric\", month: \"numeric\", day: \"numeric\"};\n        let startDate = new Date(course.schedule.start_date + course.schedule.start_time),\n            endDate = new Date(course.schedule.end_date + course.schedule.end_time),\n            startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n            endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions);\n        startDate = startDate.toLocaleDateString(\"en-US\", dateOptions);\n        endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n\n        let date = startDate + \" - \" + endDate;\n\n        return {\n            day: DaysString,\n            startTime: startTime,\n            endTime: endTime,\n            date: date,\n            tuition: course.tuition,\n            status: course.status,\n        }\n    }\n\n    sessionDataParse(session) {\n        let {start, end, course_id, status} = session;\n        let startDate = new Date(start);\n        let endDate = new Date(end);\n\n        let timeOptions = {hour: \"2-digit\", minute: \"2-digit\"};\n        let dateOptions = {year: \"numeric\", month: \"numeric\", day: \"numeric\"};\n\n        let DayConverter = {\n            0: \"Sunday\",\n            1: \"Monday\",\n            2: \"Tuesday\",\n            3: \"Wednesday\",\n            4: \"Thursday\",\n            5: \"Friday\",\n            6: \"Saturday\",\n        };\n\n        let day = DayConverter[startDate.getDay()];\n\n        let startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n            endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions),\n            date = startDate.toLocaleDateString(\"en-US\", dateOptions);\n\n        let courseTuition = this.props.courses[course_id].tuition;\n\n        return {\n            day:day,\n            startTime: startTime,\n            endTime: endTime,\n            date: date,\n            tuition: courseTuition,\n            status: status,\n        }\n    }\n\n    render() {\n        return (<Paper className={'paper'}>\n            <Grid container className={'course-session-status'}>\n                <Grid item md={12}>\n                    <BackButton/>\n                    <hr/>\n                </Grid>\n\n                <Grid item md={12}>\n                    <Typography variant={'h4'} align={'left'}>\n                        {this.state.course.title}\n                    </Typography>\n\n                    <Typography align={'left'}>\n                        Student:\n                        <Link to={'/accounts/student/'+this.state.studentID}>\n                              {this.props.usersList.StudentList[this.state.studentID].name}\n                        </Link>\n                    </Typography>\n\n                    <Typography align={'left'}>\n                        Instructor:\n                        <Link to={'/accounts/instructor/'+this.state.course.instructor_id}>\n                              {this.props.usersList.InstructorList[this.state.course.instructor_id].name}\n                        </Link>\n                    </Typography>\n\n                </Grid>\n\n                <Grid item md={12}>\n                    <Grid container className={'accounts-table-heading'}>\n                        <Grid item md={1}>\n\n                        </Grid>\n                        <Grid item md={3}>\n                            <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                                Session Date\n                            </Typography>\n                        </Grid>\n                        <Grid item md={2}>\n                            <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                                Day\n                            </Typography>\n                        </Grid>\n                        <Grid item md={2}>\n                            <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                                Time\n                            </Typography>\n                        </Grid>\n                        <Grid item md={2}>\n                            <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                                Tuition\n                            </Typography>\n                        </Grid>\n                        <Grid item md={2}>\n                            <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                                Status\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={8}>\n                    {this.state.sessions.length !== 0 ?\n                        this.state.sessions.map((session,i) => {\n                            let {day, date, startTime, endTime, status, tuition} = this.state.type === \"T\" ?\n                                this.sessionDataParse(session): this.courseDataParser(session);\n                            return (<Grid item md={12}\n                                          className={'accounts-table-row'}\n                                          key={i}>\n                                <Paper square={true}>\n                                    <Grid container>\n                                        <Grid item md={1}></Grid>\n                                        <Grid item md={3}>\n                                            <Typography align={'left'}>\n                                                {date}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item md={2}>\n                                            <Typography align={'left'}>\n                                                {day}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item md={2}>\n                                            <Typography align={'left'}>\n                                                {startTime} - {endTime}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item md={2}>\n                                            <Typography align={'left'}>\n                                                ${tuition}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item md={2}>\n                                            <div className={`sessions-left-chip ${status}`}>\n                                                {status}\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </Grid>);\n                        }) :\n                        <Grid item md={12}>\n                            <Paper className={'info'}>\n                                <Typography style={{fontWeight: 700}}>\n                                    No Courses Yet!\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                    }\n                </Grid>\n            </Grid>\n        </Paper>)\n    }\n\n}\n\nCourseSessionStatus.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        usersList: state.Users,\n        courseSessions: state.Course.CourseSessions,\n        courses: state.Course.NewCourseList,\n        enrollments: state.Enrollments,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CourseSessionStatus);","import {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React, {useState} from \"react\";\n\nimport BackButton from \"../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport {Button} from \"@material-ui/core\";\n\nconst msPerWeek = 1000 * 60 * 60 * 24 * 7;\n\nconst renderDate = (date) => {\n    const [year, month, day] = date.split(\"-\");\n    return `${month}/${day}/${year}`;\n};\n\nconst calcSessionCost = ({\n    \"schedule\": {start_date, end_date, days},\n    tuition,\n}) => {\n    const startDate = new Date(start_date);\n    const endDate = new Date(end_date);\n    const numWeeks = (endDate - startDate) / msPerWeek;\n    const numSessions = numWeeks * days.length;\n    return tuition / numSessions;\n};\n\nconst ParentPayment = (props) => {\n    const parent = props.parents[props.computedMatch.params.parentID];\n\n    const sessionsMax = {};\n    const initialSelectedRows = {};\n    parent.student_ids.forEach((studentID) => {\n        sessionsMax[studentID] = {};\n        initialSelectedRows[studentID] = {};\n        Object.entries(props.enrollments[studentID])\n            .forEach(([courseID, {session_payment_status}]) => {\n                const unpaidCount = Object.values(session_payment_status)\n                    .reduce((total, paymentStatus) => total + (paymentStatus === 0), 0);\n                if (unpaidCount !== 0) {\n                    sessionsMax[studentID][courseID] = unpaidCount;\n                    initialSelectedRows[studentID][courseID] = false;\n                }\n            });\n    });\n\n    const [sessionFields, setSessionFields] = useState(sessionsMax);\n    const [selectedRows, setSelectedRows] = useState(initialSelectedRows);\n    const [paymentType, setPaymentType] = useState();\n    const [enteredDiscountCode, setEnteredDiscountCode] = useState();\n\n    const getPaymentInfo = (student) => {\n        const unpaidCourses = Object.keys(props.enrollments[student.user_id])\n            .filter((courseID) =>\n                // only use courses that need to be paid\n                Object.values(\n                    props.enrollments[student.user_id][courseID].session_payment_status\n                ).some((paymentStatus) => paymentStatus === 0))\n            .map((courseID) => props.courses[courseID]);\n\n        return unpaidCourses.map((course) => {\n            const numSessions = sessionFields[student.user_id][course.course_id];\n            return {\n                course,\n                \"sessions\": numSessions,\n                \"tuition\": numSessions * calcSessionCost(course),\n            };\n        });\n    };\n\n    const getTotalCost = () => {\n        let total = 0;\n\n        Object.entries(sessionFields).forEach(([studentID, studentCourses]) => {\n            Object.entries(studentCourses).forEach(([courseID, sessionCount]) => {\n                if (selectedRows[studentID][courseID] &&\n                    sessionCount > 0 &&\n                    sessionCount <= sessionsMax[studentID][courseID]) {\n                    total += sessionCount * calcSessionCost(props.courses[courseID]);\n                }\n            });\n        });\n\n        return total;\n    };\n\n    const renderStudentPayments = (student) => {\n        const rows = getPaymentInfo(student);\n        return (\n            <div key={student.user_id}>\n                <h3 align=\"left\">{student.name}</h3>\n                <Table padding=\"default\">\n                    <colgroup>\n                        <col width=\"0%\" />\n                        <col width=\"100%\" />\n                        <col width=\"0%\" />\n                        <col width=\"0%\" />\n                        <col width=\"0%\" />\n                        <col width=\"0%\" />\n                    </colgroup>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell />\n                            <TableCell align=\"left\">\n                                Session\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                Dates\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                Sessions\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                Tuition\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                Material Fee\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map(({course, tuition}) => {\n                            const validSessions = sessionFields[student.user_id][course.course_id] > 0 &&\n                                sessionFields[student.user_id][course.course_id] <= sessionsMax[student.user_id][course.course_id];\n                            return (\n                                <TableRow\n                                    hover\n                                    tabIndex={-1}\n                                    key={course.course_id}>\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            checked={selectedRows[student.user_id][course.course_id]}\n                                            onClick={() => {\n                                                setSelectedRows({\n                                                    ...selectedRows,\n                                                    [student.user_id]: {\n                                                        ...selectedRows[student.user_id],\n                                                        [course.course_id]: !selectedRows[student.user_id][course.course_id],\n                                                    },\n                                                });\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        <span style={{\n                                            \"width\": \"50%\",\n                                        }}>{course.title}</span>\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        {renderDate(course.schedule.start_date)}&nbsp;-&nbsp;{renderDate(course.schedule.end_date)}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        <TextField\n                                            id=\"standard-name\"\n                                            type=\"number\"\n                                            error={!validSessions}\n                                            value={sessionFields[student.user_id][course.course_id]}\n                                            onChange={({\"target\": {value}}) => {\n                                                setSessionFields({\n                                                    ...sessionFields,\n                                                    [student.user_id]: {\n                                                        ...sessionFields[student.user_id],\n                                                        [course.course_id]: value,\n                                                    },\n                                                });\n                                            }}\n                                        />\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        {validSessions && `$${Math.round(tuition)}`}\n                                    </TableCell>\n                                    <TableCell>\n                                        $50\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    };\n\n    return (\n        <Grid container className=\"\">\n            <Grid item xs={11} style={{\"padding\": \"20px\"}}>\n                <BackButton />\n                <h1 align=\"left\">Pay for Course(s)</h1>\n                {\n                    parent.student_ids.map((studentID) =>\n                        renderStudentPayments(props.students[studentID]))\n                }\n                <Grid container style={{\n                    \"paddingTop\": \"5vh\",\n                }}>\n                    <Grid item xs={6} align=\"left\">\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\"><b>Payment Method</b></FormLabel>\n                            <RadioGroup\n                                aria-label=\"position\"\n                                name=\"position\"\n                                value={paymentType}\n                                onChange={({\"target\": value}) => {\n                                    setPaymentType(value);\n                                }} row>\n                                <FormControlLabel\n                                    value=\"Credit Card\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Credit Card\"\n                                    labelPlacement=\"end\"\n                                />\n                                <FormControlLabel\n                                    value=\"Check\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Check\"\n                                    labelPlacement=\"end\"\n                                />\n                                <FormControlLabel\n                                    value=\"Cash\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Cash\"\n                                    labelPlacement=\"end\"\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                        <FormControl variant=\"outlined\" style={{\n                            \"paddingTop\": \"2vh\",\n                        }}>\n                            <div row>\n                                <OutlinedInput\n                                    placeholder=\"Enter Discount Code\"\n                                    id=\"component-outlined\"\n                                    onChange={({\"target\": {value}}) => {\n                                        setEnteredDiscountCode(value);\n                                    }}\n                                    value={enteredDiscountCode}\n                                    disabled\n                                />\n                                <Button disabled>Apply</Button>\n                            </div>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={5} align=\"right\">\n                        <b>Total</b>\n                    </Grid>\n                    <Grid item xs={1}>\n                        ${getTotalCost()}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nParentPayment.propTypes = {\n    \"computedMatch\": PropTypes.shape({\n        \"params\": PropTypes.shape({\n            \"parentID\": PropTypes.string.isRequired,\n        }).isRequired,\n    }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    \"payments\": state.Payments,\n    \"courses\": state.Course.NewCourseList,\n    \"parents\": state.Users.ParentList,\n    \"students\": state.Users.StudentList,\n    \"enrollments\": state.Enrollments,\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ParentPayment);\n","// React Imports\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport * as registrationActions from \"../../actions/registrationActions\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\n// Local Component Imports\nimport Dashboard from \"../FeatureViews/Dashboard/Dashboard\";\nimport Registration from \"../FeatureViews/Registration/Registration\";\nimport RegistrationForm from \"../Form/Form\";\nimport Scheduler from \"../FeatureViews/Scheduler/Scheduler\";\nimport Accounts from \"../FeatureViews/Accounts/Accounts\";\nimport RegistrationCourse from \"../FeatureViews/Registration/RegistrationCourse\";\nimport CourseCategory from \"../FeatureViews/Registration/CourseCategory\";\nimport LoginPage from \"../Authentication/LoginPage.js\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nimport SessionView from \"../FeatureViews/Scheduler/SessionView\"\n\n\n\nimport ErrorNotFoundPage from \"../ErrorNotFoundPage/ErrorNotFoundPage\";\nimport UserProfile from \"../FeatureViews/Accounts/UserProfile\";\nimport CourseSessionStatus from \"../FeatureViews/Accounts/TabComponents/CourseSessionStatus\";\nimport ParentPayment from \"../Form/ParentPayment\";\n\n\nfunction rootRoutes(props) {\n    props.registrationActions.resetSubmitStatus();\n    return (\n        <Switch>\n            <Route\n                path=\"/login\"\n                render={(passedProps) => <LoginPage setLogin={props.setLogin} {...passedProps} />} />\n\n            {/* Main Feature Views */}\n            <Route\n                exact\n                path=\"/\"\n                render={(passedProps) => <Accounts {...passedProps} />} />\n\n            <Route\n                exact\n                path=\"/registration\"\n                render={(passedProps) => <Registration {...passedProps} />} />\n\n            render={(passedProps) => <Registration {...passedProps} />}/>\n\n            <Route\n                exact\n                path=\"/scheduler\"\n                render={(passedProps) => <Scheduler {...passedProps} />}/>\n\n\n            {/* Accounts */}\n            <Route\n                exact\n                path=\"/accounts/:accountType/:accountID\"\n                render={(passedProps) => <UserProfile {...passedProps} />} />\n            <Route\n                exact\n                path=\"/accounts/parents/:parentID/pay\"\n                render={(passedProps) => <ParentPayment {...passedProps} />}/>\n            <Route\n                exact\n                path=\"/accounts\"\n                render={(passedProps) => <Accounts {...passedProps} />} />\n            <Route\n                exact\n                path=\"/accounts/:accountType/:accountID/:courseID\"\n                render={(passedProps) => <CourseSessionStatus {...passedProps} />}/>\n\n            {/* Registration Routes */}\n            <Route\n                path=\"/registration/form/:type/:id?/:edit?\"\n                render={(passedProps) => <RegistrationForm {...passedProps} />} />\n            <Route\n                path=\"/registration/course/:courseID?/:courseTitle?\"\n                render={(passedProps) => <RegistrationCourse {...passedProps} />} />\n            <Route\n                path=\"/registration/category/:categoryID\"\n                render={(passedProps) => <CourseCategory {...passedProps} />}/>\n            <Route path=\"/PageNotFound\" component={ErrorNotFoundPage}/>\n            <Redirect to=\"/PageNotFound\"/>\n        </Switch>\n    );\n}\n\nrootRoutes.propTypes = {\n    \"setLogin\": PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n    registrationActions: bindActionCreators(registrationActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(rootRoutes);\n","import { createMuiTheme } from '@material-ui/core/styles';\n// import purple from '@material-ui/core/colors/purple';\n\nconst theme = createMuiTheme({\n    palette: {\n        // primary: { main: '#FAFAFA' },\n        primary: { main: '#43B5D9' },\n        secondary: { main: '#a6a6a6' },\n        background: { main: '#FAFAFA'},\n    },\n    typography: {\n        useNextVariants: true\n    },\n    overrides: {\n        MuiButton: { // Name of the component ⚛️ / style sheet\n            text: { // Name of the rule\n                color: 'black;', // Some CSS\n            },\n        },\n        paper:{\n            background:'#FAFAFA'\n        },\n        MuiTabs: {\n          root: {\n\n          },\n        },\n        MuiTab: {\n            root: {\n                border:\"2px solid #DBD7D7\",\n            },\n            \"selected\":{\n                border:\"3px solid #43B5D9\",\n                backgroundColor:\"#EBFAFF\",\n            },\n        },\n        MuiStepIcon:{\n            text:{\n                fill:\"white\",\n            }\n        }\n    },\n\n});\n\nexport default theme;","// React Imports\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as authActions from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport React, {useState} from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\n// Material UI Imports\n// TODO: import each component individually (i.e. '@material-ui/core/AppBar') to reduce bundle size\nimport {AppBar, Drawer, IconButton, Toolbar, Typography} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport AccountsIcon from \"@material-ui/icons/Contacts\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Routes from \"../Routes/rootRoutes\"\nimport CustomTheme from \"../../theme/muiTheme\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\n// Local Component Imports\nimport \"./Navigation.scss\";\nimport MuiThemeProvider from \"@material-ui/core/es/styles/MuiThemeProvider\";\n\nfunction Navigation(props) {\n    const [mobileOpen, setMobileOpen] = useState(false);\n    const [isLogin, setIsLogin] = useState(false);\n\n    function handleDrawerToggle(event) {\n        event.preventDefault();\n        setMobileOpen(!mobileOpen);\n    }\n\n    const NavList = [\n        {name: \"Accounts\", link: \"/accounts\", icon: <AccountsIcon/>},\n        {name: \"Registration\", link: \"/registration\", icon: <AssignmentIcon/>},\n    ];\n\n    const drawer = (\n        <div className=\"DrawerList\">\n            <List className={\"list\"}>\n                {NavList.map((NavItem, index) => (\n                    <ListItem button key={index} component={NavLink} exact={NavItem.name === \"Dashboard\"} to={NavItem.link} className={\"listItem\"}>\n                        <ListItemIcon className={\"icon\"}>{NavItem.icon}</ListItemIcon>\n                        <ListItemText primary={NavItem.name} className={\"text\"}/>\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <MuiThemeProvider theme={CustomTheme}>\n            <div className={\"Navigation\"}>\n                <AppBar color={\"default\"}\n                    position=\"fixed\"\n                    className=\"OmouBar\">\n                    <Toolbar>\n                        <Hidden smUp>\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"Open Drawer\"\n                                onClick={handleDrawerToggle}>\n                                <MenuIcon />\n                            </IconButton>\n                        </Hidden>\n                        <Typography component={NavLink} to=\"/accounts\" className=\"title\">\n                            omou\n                        </Typography>\n                        <div style={{\n                            flex: 1,\n                        }} />\n                        {\n                            props.auth.token\n                                ? <Typography\n                                    className=\"loginToggle\"\n                                    onClick={props.authActions.logout}>\n                                    logout\n                                </Typography>\n                                : <Typography component={NavLink} to=\"/login\" className=\"login\">\n                                    login\n                                </Typography>\n                        }\n                    </Toolbar>\n                </AppBar>\n                {\n                    !isLogin && (\n                        <nav className=\"OmouDrawer\">\n                            <Hidden smUp implementation=\"css\">\n                                <Drawer\n                                    container={props.container}\n                                    variant=\"temporary\"\n                                    open={mobileOpen}\n                                    onClose={handleDrawerToggle}>\n                                    {drawer}\n                                </Drawer>\n                            </Hidden>\n                            <Hidden xsDown implementation=\"css\">\n                                <Drawer\n                                    variant=\"permanent\"\n                                    open>\n                                    {drawer}\n                                </Drawer>\n                            </Hidden>\n                        </nav>\n                    )\n                }\n                <main className=\"OmouMain\">\n                    <Routes setLogin={(status) => {\n                        setIsLogin(status);\n                    }} />\n                </main>\n            </div>\n        </MuiThemeProvider>\n    );\n}\n\nNavigation.propTypes = {\n    auth: PropTypes.shape({}),\n    authActions: PropTypes.any,\n};\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        authActions: bindActionCreators(authActions, dispatch),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Navigation);\n","// React\nimport React from \"react\";\n\n// Redux\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as rootActions from \"./actions/rootActions\";\n\n// Material UI\n// TODO: import each component individually (i.e. '@material-ui/core/AppBar') to reduce bundle size\nimport {CssBaseline} from \"@material-ui/core\";\n\n// Local Component Imports\nimport Navigation from \"./components/Navigation/Navigation\";\nimport \"./App.scss\";\nimport \"./theme/theme.scss\";\n\nconst App = (props) => {\n    props.rootActions.fetchData(\"student\");\n    props.rootActions.fetchData(\"parent\");\n    props.rootActions.fetchData(\"instructor\");\n    return (\n        <div className=\"App\">\n            <CssBaseline />\n            <Navigation />\n        </div>\n    );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n    rootActions: bindActionCreators(rootActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n    \"Authentication\": initAuth(),\n    \"RegistrationForms\": initRegistrationForm(),\n    \"SignUpForm\": initSignUpForm(),\n    \"Course\": {\n        \"CourseList\": [\n            {\n                course_id: 1,\n                course_title: \"6th Grade Math Placement Test Prep\",\n                dates: \"6/22/2018 - 8/17/2019\",\n                instructor_id: 10,\n                days: \"T\",\n                time: \"8:30pm - 2:00pm\",\n                tuition: 450,\n                capacity: 20,\n                grade: 5,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test. \" +\n                    \" The material will cover all material from the fifth grade curriculum as well as some sixth grade content\" +\n                    \" to comprehensively prepare students for the placement exam. The placement exam will vary by school district \" +\n                    \" but it tends to take place early April.\",\n            },\n            {\n                course_id: 2,\n                course_title: \"8th Grade Science\",\n                dates: \"6/22/2018 - 8/17/2019\",\n                instructor_id: 11,\n                days: \"W\",\n                time: \"6:30pm - 8:00pm\",\n                tuition: 500,\n                capacity: 15,\n                grade: 8,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n            },\n            {\n                course_id: 3,\n                course_title: \"Honors Algebra II - Amador\",\n                dates: \"8/21/2018 - 5/22/2019\",\n                instructor_id: 12,\n                days: \"T\",\n                time: \"5:30pm - 7:00pm\",\n                tuition: 1480,\n                capacity: 12,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n            },\n            {\n                course_id: 4,\n                course_title: \"Honors Pre Calculus - Amador\",\n                dates: \"8/21/2018 - 5/22/2019\",\n                instructor_id: 10,\n                days: \"T\",\n                time: \"7:10pm - 8:40pm\",\n                tuition: 1480,\n                capacity: 15,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n            }, {\n                course_id: 5,\n                course_title: \"Honors Chemistry - DVHS\",\n                dates: \"8/20/2018 - 5/21/2019\",\n                instructor_id: 11,\n                days: \"T\",\n                time: \"8:30pm - 2:00pm\",\n                tuition: 450,\n                capacity: 8,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n            },\n            {\n                course_id: 6,\n                course_title: \"Geometry - SRVUSD\",\n                dates: \"8/22/2018 - 5/22/2019\",\n                instructor_id: 13,\n                days: \"W\",\n                time: \"5:30pm - 7:00pm\",\n                tuition: 1440,\n                capacity: 12,\n                grade: 8,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n            }, {\n                course_id: 7,\n                course_title: \"SAT 2 Math 2\",\n                dates: \"3/8/2019 - 5/8/2019\",\n                instructor_id: 11,\n                days: \"F\",\n                time: \"5:00pm - 8:00pm\",\n                tuition: 700,\n                capacity: 15,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n            },\n            {\n                course_id: 8,\n                course_title: \"AP Chemistry\",\n                dates: \"2/23/2019 - 4/27/2019\",\n                instructor_id: 12,\n                days: \"S\",\n                time: \"9:00am - 12:00pm\",\n                tuition: 700,\n                capacity: 15,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n            },\n            {\n                course_id: 9,\n                course_title: \"AP Calc B/C\",\n                dates: \"3/8/2019 - 5/12/2019\",\n                instructor_id: 11,\n                days: \"F\",\n                time: \"5:30pm - 8:30pm\",\n                tuition: 700,\n                capacity: 15,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n            },\n            {\n                course_id: 10,\n                course_title: \"AP Calc A/B\",\n                dates: \"3/9/2019 - 5/11/2019\",\n                instructor_id: 10,\n                days: \"S\",\n                time: \"1:00pm - 4:00pm\",\n                tuition: 700,\n                capacity: 15,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n            },\n        ],\n        \"CourseCategories\": [\n            {\n                id: 1,\n                cat_title: \"AP Courses\",\n            },\n            {\n                id: 2,\n                cat_title: \"Subjects\",\n            },\n            {\n                id: 3,\n                cat_title: \"Middle School\",\n            },\n            {\n                id: 4,\n                cat_title: \"DVHS\",\n            },\n            {\n                id: 5,\n                cat_title: \"AVHS\",\n            },\n            {\n                id: 6,\n                cat_title: \"Test Preparation\",\n            },\n            {\n                id: 7,\n                cat_title: \"SAT\",\n            },\n            {\n                id: 8,\n                cat_title: \"SAT Subject Tests\",\n            },\n            {\n                id: 9,\n                cat_title: \"BYU Online\",\n            },\n        ],\n        \"Subjects\": {\n            1: {\n                title: \"Physics\",\n            },\n            2: {\n                title: \"Algebra\",\n            },\n            3: {\n                title: \"Pre-Algebra\",\n            },\n            4: {\n                title: \"Trigonometry\",\n            },\n            5: {\n                title: \"Astronomy\",\n            },\n            6: {\n                title: \"Life Science\",\n            },\n            7: {\n                title: \"Biology\",\n            },\n            8: {\n                title: \"US History\",\n            },\n            9: {\n                title: \"Global Studies\",\n            },\n            10: {\n                title: \"Statistics\",\n            },\n            11: {\n                title: \"Health\",\n            },\n            12: {\n                title: \"Physical Education\",\n            },\n            13: {\n                title: \"French\",\n            },\n        },\n        \"Tags\": {\n            1: {\n                title: \"AP\",\n            },\n            2: {\n                title: \"Hard\",\n            },\n            3: {\n                title: \"DVHS\",\n            },\n            4: {\n                title: \"AVHS\",\n            },\n        },\n        \"NewCourseList\": {\n            1: {\n                course_id: 1,\n                title: \"6th Grade Math Placement Test Prep\",\n                schedule: {\n                    start_date: \"2020-01-08\",\n                    end_date: \"2020-04-01\",\n                    start_time: \"T10:30\",\n                    end_time: \"T14:00\",\n                    days: [2],\n                },\n                instructor_id: 10,\n                tuition: 450,\n                capacity: 20,\n                grade: 5,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test. \" +\n                    \" The material will cover all material from the fifth grade curriculum as well as some sixth grade content\" +\n                    \" to comprehensively prepare students for the placement exam. The placement exam will vary by school district \" +\n                    \" but it tends to take place early April.\",\n                room_id: 1,\n                type: \"C\",\n                subject: \"Math\",\n                tags: [\"Test Prep\", \"Common Core\", \"All School Districts\"],\n                roster: [23, 99, 64],\n            },\n            2: {\n                course_id: 2,\n                title: \"8th Grade Science\",\n                schedule: {\n                    start_date: \"2020-06-02\",\n                    end_date: \"2020-08-18\",\n                    start_time: \"T18:00\",\n                    end_time: \"T20:00\",\n                    days: [1],\n                },\n                instructor_id: 11,\n                tuition: 500,\n                capacity: 9,\n                grade: 8,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n                room_id: 2,\n                type: \"C\",\n                roster: [23, 99, 64, 24],\n                subject: \"Science\",\n                tags: [\"All School Districts\", \"Physics\", \"Astronomy\",],\n            },\n            3: {\n                course_id: 3,\n                title: \"Honors Algebra II - Amador\",\n                schedule: {\n                    start_date: \"2020-08-04\",\n                    end_date: \"2020-11-10\",\n                    start_time: \"T17:30\",\n                    end_time: \"T19:00\",\n                    days: [1],\n                },\n                instructor_id: 12,\n                tuition: 60, // $60 per session\n                capacity: 1,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n                room_id: 2,\n                type: \"T\",\n                roster: [23],\n                subject: \"Math\",\n                tags: [\"Honors\", \"Algebra II\", \"Amador Valley High School\",],\n            },\n            4: {\n                course_id: 4,\n                title: \"Honors Pre Calculus - Amador\",\n                schedule: {\n                    start_date: \"2020-08-19\",\n                    end_date: \"2020-11-04\",\n                    start_time: \"T19:10\",\n                    end_time: \"T20:40\",\n                    days: [2],\n                },\n                instructor_id: 10,\n                tuition: 935,\n                session_cost: 85,\n                capacity: 1,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n                room_id: 4,\n                type: \"T\",\n                roster: [64],\n                subject: \"Math\",\n                tags: [\"Honors\", \"Amador Valley High School\", \"Pre-Calculus\",],\n            },\n            5: {\n                course_id: 5,\n                title: \"Honors Chemistry - DVHS\",\n                schedule: {\n                    start_date: \"2019-10-09\",\n                    end_date: \"2019-12-18\",\n                    start_time: \"T20:30\",\n                    end_time: \"T14:00\",\n                    days: [2],\n                },\n                instructor_id: 11,\n                tuition: 450,\n                capacity: 8,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n                room_id: 2,\n                type: \"C\",\n                roster: [24, 99, 64],\n                subject: \"Science\",\n                tags: [\"Chemistry\", \"Dougherty Valley High School\", \"Honors\",],\n            },\n            6: {\n                course_id: 6,\n                title: \"Geometry - SRVUSD\",\n                schedule: {\n                    start_date: \"2020-08-07\",\n                    end_date: \"2020-11-13\",\n                    start_time: \"T17:30\",\n                    end_time: \"T19:00\",\n                    days: [4],\n                },\n                instructor_id: 13,\n                tuition: 1440,\n                capacity: 12,\n                grade: 8,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n                room_id: 6,\n                type: \"C\",\n                roster: [23, 99, 64, 24],\n                subject: \"Math\",\n                tags: [\"Geometry\", \"San Ramon Valley Unified School District\",]\n            },\n            7: {\n                course_id: 7,\n                title: \"SAT 2 Math 2\",\n                schedule: {\n                    start_date: \"2020-03-06\",\n                    end_date: \"2020-06-12\",\n                    start_time: \"T17:00\",\n                    end_time: \"T20:00\",\n                    days: [4],\n                },\n                instructor_id: 11,\n                tuition: 1190, // $85 per session\n                capacity: 1,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n                room_id: 1,\n                type: \"T\",\n                roster: [99],\n                subject: \"Math\",\n                tags: [\"SAT 2\", \"Algebra I\", \"Algebra II\", \"Test Prep\"],\n            },\n            8: {\n                course_id: 8,\n                title: \"AP Chemistry\",\n                schedule: {\n                    start_date: \"2020-02-01\",\n                    end_date: \"2020-05-09\",\n                    start_time: \"T09:00\",\n                    end_time: \"T12:00\",\n                    days: [5],\n                },\n                instructor_id: 12,\n                tuition: 700,\n                capacity: 6,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n                room_id: 7,\n                type: \"C\",\n                roster: [23, 99, 24],\n                subject: \"Chemistry\",\n                tags: [\"Science\", \"AP\", \"College Prep\",],\n            },\n            9: {\n                course_id: 9,\n                title: \"AP Calc B/C\",\n                schedule: {\n                    start_date: \"2020-03-04\",\n                    end_date: \"2020-06-10\",\n                    start_time: \"T18:30\",\n                    end_time: \"T20:30\",\n                    days: [2],\n                },\n                instructor_id: 11,\n                tuition: 700,\n                capacity: 5,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n                room_id: 1,\n                type: \"C\",\n                roster: [24, 64],\n                subject: \"Calculus\",\n                tags: [\"Math\", \"AP\", \"College Prep\",],\n            },\n            10: {\n                course_id: 10,\n                title: \"AP Calc A/B\",\n                schedule: {\n                    start_date: \"2020-03-21\",\n                    end_date: \"2020-06-27\",\n                    start_time: \"T13:00\",\n                    end_time: \"T16:00\",\n                    days: [5],\n                },\n                instructor_id: 10,\n                tuition: 700,\n                capacity: 15,\n                grade: 10,\n                description: \"This course is to prepare 5th grade students to pass the 6th grade math placement test.\",\n                room_id: 4,\n                type: \"C\",\n                roster: [23, 99, 64],\n                subject: \"Calculus\",\n                tags: [\"Math\", \"Preparation Class\", \"AP\",],\n            },\n        },\n        \"CourseSessions\": {\n            1: {\n                1: {\n                    session_id: 1,\n                    start: \"2020-01-07T10:30\",\n                    end: \"2020-01-07T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                2: {\n                    session_id: 2,\n                    start: \"2020-01-14T10:30\",\n                    end: \"2020-01-14T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                3: {\n                    session_id: 3,\n                    start: \"2020-01-21T10:30\",\n                    end: \"2020-01-21T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                4: {\n                    session_id: 4,\n                    start: \"2020-01-28T10:30\",\n                    end: \"2020-01-28T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                5: {\n                    session_id: 5,\n                    start: \"2020-02-04T10:30\",\n                    end: \"2020-02-04T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                6: {\n                    session_id: 6,\n                    start: \"2020-02-11T10:30\",\n                    end: \"2020-02-11T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                7: {\n                    session_id: 7,\n                    start: \"2020-02-18T10:30\",\n                    end: \"2020-02-18T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                8: {\n                    session_id: 8,\n                    start: \"2020-02-25T10:30\",\n                    end: \"2020-02-25T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                9: {\n                    session_id: 9,\n                    start: \"2020-02-28T10:30\",\n                    end: \"2020-02-28T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n\n                10: {\n                    session_id: 10,\n                    start: \"2020-03-03T10:30\",\n                    end: \"2020-03-03T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                11: {\n                    session_id: 11,\n                    start: \"2020-03-10T10:30\",\n                    end: \"2020-03-10T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                12: {\n                    session_id: 12,\n                    start: \"2020-03-17T10:30\",\n                    end: \"2020-03-17T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                13: {\n                    session_id: 13,\n                    start: \"2020-03-24T10:30\",\n                    end: \"2020-03-24T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                14: {\n                    session_id: 14,\n                    start: \"2020-03-31T10:30\",\n                    end: \"2020-03-31T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                15: {\n                    session_id: 15,\n                    start: \"2020-04-02T10:30\",\n                    end: \"2020-04-02T14:00\",\n                    course_id: 1,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n\n            },\n            2: {\n                1: {\n                    session_id: 1,\n                    start: \"2020-06-02T18:00\",\n                    end: \"2020-06-02T020:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                2: {\n                    session_id: 2,\n                    start: \"2020-06-09T1800\",\n                    end: \"2020-06-09T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                3: {\n                    session_id: 3,\n                    start: \"2020-06-16T1800\",\n                    end: \"2020-06-16T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                4: {\n                    session_id: 4,\n                    start: \"2020-06-23T1800\",\n                    end: \"2020-06-23T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                5: {\n                    session_id: 5,\n                    start: \"2020-06-30T1800\",\n                    end: \"2020-06-30T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                6: {\n                    session_id: 6,\n                    start: \"2020-07-07T1800\",\n                    end: \"2020-07-07T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                7: {\n                    session_id: 7,\n                    start: \"2020-07-14T1800\",\n                    end: \"2020-07-14T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                8: {\n                    session_id: 8,\n                    start: \"2020-07-21T1800\",\n                    end: \"2020-07-21T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                9: {\n                    session_id: 9,\n                    start: \"2020-07-28T1800\",\n                    end: \"2020-07-28T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                10: {\n                    session_id: 10,\n                    start: \"2020-08-04T1800\",\n                    end: \"2020-08-04T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                11: {\n                    session_id: 11,\n                    start: \"2020-08-11T1800\",\n                    end: \"2020-08-11T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                12: {\n                    session_id: 12,\n                    start: \"2020-08-13T1800\",\n                    end: \"2020-08-13T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                13: {\n                    session_id: 13,\n                    start: \"2020-08-14T1800\",\n                    end: \"2020-08-14T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                14: {\n                    session_id: 14,\n                    start: \"2020-08-15T1800\",\n                    end: \"2020-08-15T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                15: {\n                    session_id: 15,\n                    start: \"2020-08-18T1800\",\n                    end: \"2020-08-18T20:00\",\n                    course_id: 2,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n            },\n            3: {\n                1: {\n                    session_id: 1,\n                    start: \"2020-08-04T17:30\",\n                    end: \"2020-08-04T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                2: {\n                    session_id: 2,\n                    start: \"2020-08-18T17:30\",\n                    end: \"2020-08-18T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                3: {\n                    session_id: 3,\n                    start: \"2020-08-25T17:30\",\n                    end: \"2020-08-25T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                4: {\n                    session_id: 4,\n                    start: \"2020-09-01T17:30\",\n                    end: \"2020-09-01T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                5: {\n                    session_id: 5,\n                    start: \"2020-09-08T17:30\",\n                    end: \"2020-09-08T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                6: {\n                    session_id: 6,\n                    start: \"2020-09-15T17:30\",\n                    end: \"2020-09-15T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                7: {\n                    session_id: 7,\n                    start: \"2020-09-22T17:30\",\n                    end: \"2020-09-22T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                },\n                8: {\n                    session_id: 8,\n                    start: \"2020-09-29T17:30\",\n                    end: \"2020-09-29T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                9: {\n                    session_id: 9,\n                    start: \"2020-10-06T17:30\",\n                    end: \"2020-10-06T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                10: {\n                    session_id: 10,\n                    start: \"2020-10-13T17:30\",\n                    end: \"2020-10-13T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                11: {\n                    session_id: 11,\n                    start: \"2020-10-20T17:30\",\n                    end: \"2020-10-20T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                12: {\n                    session_id: 12,\n                    start: \"2020-10-27T17:30\",\n                    end: \"2020-10-27T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                13: {\n                    session_id: 13,\n                    start: \"2020-11-03T17:30\",\n                    end: \"2020-11-03T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                14: {\n                    session_id: 14,\n                    start: \"2020-11-09T17:30\",\n                    end: \"2020-11-09T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                15: {\n                    session_id: 15,\n                    start: \"2020-11-10T17:30\",\n                    end: \"2020-11-10T19:00\",\n                    course_id: 3,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n            },\n            4: {\n                1: {\n                    session_id: 1,\n                    start: \"2020-08-18T07:00\",\n                    end: \"2020-08-18T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                2: {\n                    session_id: 2,\n                    start: \"2020-08-25T07:00\",\n                    end: \"2020-08-25T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                3: {\n                    session_id: 3,\n                    start: \"2020-09-01T07:00\",\n                    end: \"2020-09-01T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                4: {\n                    session_id: 4,\n                    start: \"2020-09-08T07:00\",\n                    end: \"2020-09-08T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                5: {\n                    session_id: 5,\n                    start: \"2020-09-15T07:00\",\n                    end: \"2020-09-15T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                6: {\n                    session_id: 6,\n                    start: \"2020-09-22T07:00\",\n                    end: \"2020-09-22T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                7: {\n                    session_id: 7,\n                    start: \"2020-09-29T07:00\",\n                    end: \"2020-09-29T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                8: {\n                    session_id: 8,\n                    start: \"2020-10-06T07:00\",\n                    end: \"2020-10-06T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                9: {\n                    session_id: 9,\n                    start: \"2020-10-13T07:00\",\n                    end: \"2020-10-13T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                10: {\n                    session_id: 10,\n                    start: \"2020-10-20T07:00\",\n                    end: \"2020-10-20T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                11: {\n                    session_id: 11,\n                    start: \"2020-10-27T07:00\",\n                    end: \"2020-10-27T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                12: {\n                    session_id: 12,\n                    start: \"2020-11-03T07:00\",\n                    end: \"2020-11-03T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                13: {\n                    session_id: 13,\n                    start: \"2020-11-04T07:00\",\n                    end: \"2020-11-04T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                14: {\n                    session_id: 14,\n                    start: \"2020-11-05T07:00\",\n                    end: \"2020-11-05T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                15: {\n                    session_id: 15,\n                    start: \"2020-11-06T07:00\",\n                    end: \"2020-11-07T08:00\",\n                    course_id: 4,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n            },\n            5: {\n                1: {\n                    session_id: 1,\n                    start: \"2019-10-08T07:00\",\n                    end: \"2019-10-08T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                2: {\n                    session_id: 2,\n                    start: \"2019-10-15T07:00\",\n                    end: \"2019-10-15T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                3: {\n                    session_id: 3,\n                    start: \"2019-10-22T07:00\",\n                    end: \"2019-10-22T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                4: {\n                    session_id: 4,\n                    start: \"2019-10-29T07:00\",\n                    end: \"2019-10-29T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                5: {\n                    session_id: 5,\n                    start: \"2019-11-05T07:00\",\n                    end: \"2019-11-05T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                6: {\n                    session_id: 6,\n                    start: \"2019-11-12T07:00\",\n                    end: \"2019-11-12T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                7: {\n                    session_id: 7,\n                    start: \"2019-11-19T07:00\",\n                    end: \"2019-11-19T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                8: {\n                    session_id: 8,\n                    start: \"2019-11-26T07:00\",\n                    end: \"2019-11-26T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                9: {\n                    session_id: 9,\n                    start: \"2019-12-03T07:00\",\n                    end: \"2019-12-03T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                10: {\n                    session_id: 10,\n                    start: \"2019-12-10T07:00\",\n                    end: \"2019-12-10T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                11: {\n                    session_id: 11,\n                    start: \"2019-12-11T07:00\",\n                    end: \"2019-12-11T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                12: {\n                    session_id: 12,\n                    start: \"2019-12-12T07:00\",\n                    end: \"2019-12-12T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                13: {\n                    session_id: 13,\n                    start: \"2019-12-17T07:00\",\n                    end: \"2019-12-17T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                14: {\n                    session_id: 14,\n                    start: \"2019-12-18T07:00\",\n                    end: \"2019-12-18T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                15: {\n                    session_id: 15,\n                    start: \"2019-12-19T07:00\",\n                    end: \"2019-12-19T08:00\",\n                    course_id: 5,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n            },\n            6: {\n                1: {\n                    session_id: 1,\n                    start: \"2019-08-07T17:00\",\n                    end: \"2019-08-07T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                2: {\n                    session_id: 2,\n                    start: \"2019-08-14T17:00\",\n                    end: \"2019-08-14T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                3: {\n                    session_id: 3,\n                    start: \"2019-08-21T17:00\",\n                    end: \"2019-08-21T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                4: {\n                    session_id: 4,\n                    start: \"2019-08-28T17:00\",\n                    end: \"2019-08-28T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                5: {\n                    session_id: 5,\n                    start: \"2019-09-04T17:00\",\n                    end: \"2019-09-04T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                6: {\n                    session_id: 6,\n                    start: \"2019-09-11T17:00\",\n                    end: \"2019-09-11T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                7: {\n                    session_id: 7,\n                    start: \"2019-09-18T17:00\",\n                    end: \"2019-09-18T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                8: {\n                    session_id: 8,\n                    start: \"2019-09-25T17:00\",\n                    end: \"2019-09-25T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                9: {\n                    session_id: 9,\n                    start: \"2019-10-02T17:00\",\n                    end: \"2019-10-02T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                10: {\n                    session_id: 10,\n                    start: \"2019-10-09T17:00\",\n                    end: \"2019-10-09T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                11: {\n                    session_id: 11,\n                    start: \"2019-10-16T17:00\",\n                    end: \"2019-10-16T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                12: {\n                    session_id: 12,\n                    start: \"2019-10-23T17:00\",\n                    end: \"2019-10-23T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                13: {\n                    session_id: 13,\n                    start: \"2019-10-30T17:00\",\n                    end: \"2019-10-30T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                14: {\n                    session_id: 14,\n                    start: \"2019-11-06T17:00\",\n                    end: \"2019-11-06T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                15: {\n                    session_id: 15,\n                    start: \"2019-11-13T17:00\",\n                    end: \"2019-11-13T19:00\",\n                    course_id: 6,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n            },\n            7: {\n                1: {\n                    session_id: 1,\n                    start: \"2020-03-06T17:30\",\n                    end: \"2020-03-06T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                2: {\n                    session_id: 2,\n                    start: \"2020-03-13T17:30\",\n                    end: \"2020-03-13T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                3: {\n                    session_id: 3,\n                    start: \"2020-03-20T17:30\",\n                    end: \"2020-03-20T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                4: {\n                    session_id: 4,\n                    start: \"2020-03-27T17:30\",\n                    end: \"2020-03-27T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                5: {\n                    session_id: 5,\n                    start: \"2020-04-03T17:30\",\n                    end: \"2020-04-03T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                6: {\n                    session_id: 6,\n                    start: \"2020-04-10T17:30\",\n                    end: \"2020-04-10T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                7: {\n                    session_id: 7,\n                    start: \"2020-04-17T17:30\",\n                    end: \"2020-04-17T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                8: {\n                    session_id: 8,\n                    start: \"2020-04-24T17:30\",\n                    end: \"2020-04-24T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                9: {\n                    session_id: 9,\n                    start: \"2020-05-01T17:30\",\n                    end: \"2020-05-01T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                10: {\n                    session_id: 10,\n                    start: \"2020-05-08T17:30\",\n                    end: \"2020-05-08T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                11: {\n                    session_id: 11,\n                    start: \"2020-05-15T17:30\",\n                    end: \"2020-05-15T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                12: {\n                    session_id: 12,\n                    start: \"2020-05-22T17:30\",\n                    end: \"2020-05-22T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                13: {\n                    session_id: 13,\n                    start: \"2020-05-29T17:30\",\n                    end: \"2020-05-29T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                14: {\n                    session_id: 14,\n                    start: \"2020-06-05T17:30\",\n                    end: \"2020-06-05T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                15: {\n                    session_id: 15,\n                    start: \"2020-06-12T17:30\",\n                    end: \"2020-06-12T19:00\",\n                    course_id: 7,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n            },\n            8: {\n                1: {\n                    session_id: 1,\n                    start: \"2020-02-01T09:00\",\n                    end: \"2020-02-01T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                2: {\n                    session_id: 2,\n                    start: \"2020-02-08T09:00\",\n                    end: \"2020-02-08T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                3: {\n                    session_id: 3,\n                    start: \"2020-02-15T09:00\",\n                    end: \"2020-02-15T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                4: {\n                    session_id: 4,\n                    start: \"2020-02-22T09:00\",\n                    end: \"2020-02-22T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                5: {\n                    session_id: 5,\n                    start: \"2020-02-29T09:00\",\n                    end: \"2020-02-29T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                6: {\n                    session_id: 6,\n                    start: \"2020-03-07T09:00\",\n                    end: \"2020-03-07T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                7: {\n                    session_id: 7,\n                    start: \"2020-03-14T09:00\",\n                    end: \"2020-03-14T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                8: {\n                    session_id: 8,\n                    start: \"2020-03-21T09:00\",\n                    end: \"2020-03-21T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                9: {\n                    session_id: 9,\n                    start: \"2020-03-28T09:00\",\n                    end: \"2020-03-28T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                10: {\n                    session_id: 10,\n                    start: \"2020-04-04T09:00\",\n                    end: \"2020-04-04T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                11: {\n                    session_id: 11,\n                    start: \"2020-04-11T09:00\",\n                    end: \"2020-04-11T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                12: {\n                    session_id: 12,\n                    start: \"2020-04-18T09:00\",\n                    end: \"2020-04-18T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                13: {\n                    session_id: 13,\n                    start: \"2020-04-25T09:00\",\n                    end: \"2020-04-25T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                14: {\n                    session_id: 14,\n                    start: \"2020-05-02T09:00\",\n                    end: \"2020-05-02T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                15: {\n                    session_id: 15,\n                    start: \"2020-05-09T09:00\",\n                    end: \"2020-05-09T12:00\",\n                    course_id: 8,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n            },\n            9: {\n                1: {\n                    session_id: 1,\n                    start: \"2020-03-03T18:30\",\n                    end: \"2020-03-03T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                2: {\n                    session_id: 2,\n                    start: \"2020-03-10T18:30\",\n                    end: \"2020-03-10T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                3: {\n                    session_id: 3,\n                    start: \"2020-03-17T18:30\",\n                    end: \"2020-03-17T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                4: {\n                    session_id: 4,\n                    start: \"2020-03-24T18:30\",\n                    end: \"2020-03-24T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                5: {\n                    session_id: 5,\n                    start: \"2020-04-01T18:30\",\n                    end: \"2020-04-01T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                6: {\n                    session_id: 6,\n                    start: \"2020-04-08T18:30\",\n                    end: \"2020-04-08T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                7: {\n                    session_id: 7,\n                    start: \"2020-04-15T18:30\",\n                    end: \"2020-04-15T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                8: {\n                    session_id: 8,\n                    start: \"2020-04-22T18:30\",\n                    end: \"2020-04-22T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                9: {\n                    session_id: 9,\n                    start: \"2020-04-29T18:30\",\n                    end: \"2020-04-29T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                10: {\n                    session_id: 10,\n                    start: \"2020-05-05T18:30\",\n                    end: \"2020-05-05T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                11: {\n                    session_id: 11,\n                    start: \"2020-05-12T18:30\",\n                    end: \"2020-05-12T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                12: {\n                    session_id: 12,\n                    start: \"2020-05-19T18:30\",\n                    end: \"2020-05-19T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                13: {\n                    session_id: 13,\n                    start: \"2020-05-26T18:30\",\n                    end: \"2020-05-26T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                14: {\n                    session_id: 14,\n                    start: \"2020-06-03T18:30\",\n                    end: \"2020-06-03T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n                15: {\n                    session_id: 15,\n                    start: \"2020-06-10T18:30\",\n                    end: \"2020-06-10T20:30\",\n                    course_id: 9,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n                    status: -1,\n                },\n            },\n            10: {\n                1: {\n                    session_id: 1,\n                    start: \"2020-03-21T13:00\",\n                    end: \"2020-03-21T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                2: {\n                    session_id: 2,\n                    start: \"2020-03-28T13:00\",\n                    end: \"2020-03-28T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                3: {\n                    session_id: 3,\n                    start: \"2020-04-04T13:00\",\n                    end: \"2020-04-04T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                4: {\n                    session_id: 4,\n                    start: \"2020-04-11T13:00\",\n                    end: \"2020-04-11T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                5: {\n                    session_id: 5,\n                    start: \"2020-04-18T13:00\",\n                    end: \"2020-04-18T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                6: {\n                    session_id: 6,\n                    start: \"2020-04-25T13:00\",\n                    end: \"2020-04-25T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                7: {\n                    session_id: 7,\n                    start: \"2020-05-02T13:00\",\n                    end: \"2020-05-02T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                8: {\n                    session_id: 8,\n                    start: \"2020-05-09T13:00\",\n                    end: \"2020-05-09T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                9: {\n                    session_id: 9,\n                    start: \"2020-05-16T13:00\",\n                    end: \"2020-05-16T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                10: {\n                    session_id: 10,\n                    start: \"2020-05-23T13:00\",\n                    end: \"2020-05-23T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                11: {\n                    session_id: 11,\n                    start: \"2020-05-30T13:00\",\n                    end: \"2020-05-30T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                12: {\n                    session_id: 12,\n                    start: \"2020-06-06T13:00\",\n                    end: \"2020-06-06T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                13: {\n                    session_id: 13,\n                    start: \"2020-06-13T13:00\",\n                    end: \"2020-06-13T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                14: {\n                    session_id: 14,\n                    start: \"2020-06-20T13:00\",\n                    end: \"2020-06-20T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n                15: {\n                    session_id: 15,\n                    start: \"2020-06-27T13:00\",\n                    end: \"2020-06-27T16:00\",\n                    course_id: 10,\n                    instructor: \"\", // default to session's default instructor - change if there's a substitute,\n                    room_id: 2,\n\n                },\n            },\n        },\n    },\n    \"Enrollments\": {\n        // userID: enrolled courses : session\n        // payment status:\n        // 1 = paid\n        // 0 = unpaid\n        // -1 = waived\n        23: {\n            1: {\n                student_id: 23,\n                notes: {\n                    \"Current Instructor in School\": \"Mr. Devos\",\n                    \"Textbook Used\": \"HMG Math 6\",\n                    \"Current Grade in Class\": \"\",\n                    \"Current Topic in School / Topic of Interest\": \"Graphing\",\n                    \"Student Strengths\": \"\",\n                    \"Student Weakness\": \"\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            2: {\n                student_id: 23,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Gahl\",\n                    \"Textbook Used\": \"Kipling 8th Grade Physical Science\",\n                    \"Current Grade in Class\": \"B-\",\n                    \"Current Topic in School / Topic of Interest\": \"Note-taking\",\n                    \"Student Strengths\": \"computational problems\",\n                    \"Student Weakness\": \"\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            3: {\n                student_id: 23,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Ogle\",\n                    \"Textbook Used\": \"Common Core Algebra II\",\n                    \"Current Grade in Class\": \"B\",\n                    \"Current Topic in School / Topic of Interest\": \"conics sections\",\n                    \"Student Strengths\": \"computational problems\",\n                    \"Student Weakness\": \"word problems\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: -1,\n                    6: -1,\n                    7: 1,\n                    8: 1,\n                    9: 0,\n                    10: 0,\n                    11: 0,\n                    12: 0,\n                    13: 0,\n                    14: 0,\n                    15: 0,\n                },\n            },\n            6: {\n                student_id: 23,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Ogle\",\n                    \"Textbook Used\": \"Common Core Geometry\",\n                    \"Current Grade in Class\": \"A\",\n                    \"Current Topic in School / Topic of Interest\": \"triangle proofs\",\n                    \"Student Strengths\": \"computational problems\",\n                    \"Student Weakness\": \"word problems\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            8: {\n                student_id: 23,\n                notes: {\n                    \"Current Instructor in School\": \"Mr. Dennis\",\n                    \"Textbook Used\": \"Fundamental Chemistry\",\n                    \"Current Grade in Class\": \"B+\",\n                    \"Current Topic in School / Topic of Interest\": \"Hess's Law\",\n                    \"Student Strengths\": \"\",\n                    \"Student Weakness\": \"\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            10: {\n                student_id: 23,\n                notes: {\n                    \"Current Instructor in School\": \"Mr. Linke\",\n                    \"Textbook Used\": \"Fundamental Calculus\",\n                    \"Current Grade in Class\": \"B\",\n                    \"Current Topic in School / Topic of Interest\": \"L'Hopital's Rule\",\n                    \"Student Strengths\": \"\",\n                    \"Student Weakness\": \"\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n        },\n        24: {\n            2: {\n                student_id: 24,\n                notes: {\n                    \"Current Instructor in School\": \"Mr. Dolan\",\n                    \"Textbook Used\": \"Kipling 8th Grade Physical Science\",\n                    \"Current Grade in Class\": \"B\",\n                    \"Current Topic in School / Topic of Interest\": \"Physics mechanics\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            5: {\n                student_id: 24,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Pattock\",\n                    \"Textbook Used\": \"Chemistry by HGM\",\n                    \"Current Grade in Class\": \"A\",\n                    \"Current Topic in School / Topic of Interest\": \"titration\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 0,\n                    2: 0,\n                    3: 0,\n                    4: 0,\n                    5: 0,\n                    6: 0,\n                    7: 0,\n                    8: 0,\n                    9: 0,\n                    10: 0,\n                    11: 0,\n                    12: 0,\n                    13: 0,\n                    14: 0,\n                    15: 0,\n                },\n            },\n            6: {\n                student_id: 24,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Kumar\",\n                    \"Textbook Used\": \"Common Core Geometry\",\n                    \"Current Grade in Class\": \"A\",\n                    \"Current Topic in School / Topic of Interest\": \"Proofs\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            8: {\n                student_id: 24,\n                notes: {\n                    \"Current Instructor in School\": \"Mr. Dennis\",\n                    \"Textbook Used\": \"Fundamental Chemistry\",\n                    \"Current Grade in Class\": \"A\",\n                    \"Current Topic in School / Topic of Interest\": \"titration\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            9: {\n                student_id: 24,\n                notes: {\n                    \"Current Instructor in School\": \"Mr. Dennis\",\n                    \"Textbook Used\": \"Foundational Calculus\",\n                    \"Current Grade in Class\": \"B-\",\n                    \"Current Topic in School / Topic of Interest\": \"Integration by parts\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n        },\n        99: {\n            1: {\n                student_id: 99,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Davis\",\n                    \"Textbook Used\": \"Holt Math 6\",\n                    \"Current Grade in Class\": \"\",\n                    \"Current Topic in School / Topic of Interest\": \"Adding fractions\",\n                    \"Student Strengths\": \"\",\n                    \"Student Weakness\": \"\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 0,\n                    2: 0,\n                    3: 0,\n                    4: 0,\n                    5: 0,\n                    6: 0,\n                    7: 0,\n                    8: 0,\n                    9: 0,\n                    10: 0,\n                    11: 0,\n                    12: 0,\n                    13: 0,\n                    14: 0,\n                    15: 0,\n                },\n            },\n            2: {\n                student_id: 99,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Devine\",\n                    \"Textbook Used\": \"Kipling 8th Grade Physical Science\",\n                    \"Current Grade in Class\": \"A-\",\n                    \"Current Topic in School / Topic of Interest\": \"Physics mechanics\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            5: {\n                student_id: 99,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Pattock\",\n                    \"Textbook Used\": \"Chemistry by HGM\",\n                    \"Current Grade in Class\": \"A-\",\n                    \"Current Topic in School / Topic of Interest\": \"Nobel Gas Law\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            6: {\n                student_id: 99,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Kumar\",\n                    \"Textbook Used\": \"Common Core Geometry\",\n                    \"Current Grade in Class\": \"B-\",\n                    \"Current Topic in School / Topic of Interest\": \"Circle proofs\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            7: {\n                student_id: 99,\n                notes: {\n                    \"Current Instructor in School\": \"\",\n                    \"Textbook Used\": \"\",\n                    \"Current Grade in Class\": \"\",\n                    \"Current Topic in School / Topic of Interest\": \"\",\n                    \"Student Strengths\": \"\",\n                    \"Student Weakness\": \"\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 0,\n                    12: 0,\n                    13: 0,\n                    14: 0,\n                    15: 0,\n                },\n            },\n            8: {\n                student_id: 99,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Melby\",\n                    \"Textbook Used\": \"Basic College Chemistry\",\n                    \"Current Grade in Class\": \"\",\n                    \"Current Topic in School / Topic of Interest\": \"\",\n                    \"Student Strengths\": \"\",\n                    \"Student Weakness\": \"\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            10: {\n                student_id: 99,\n                notes: {\n                    \"Current Instructor in School\": \"Mr. Tran\",\n                    \"Textbook Used\": \"Fundamental Calculus\",\n                    \"Current Grade in Class\": \"\",\n                    \"Current Topic in School / Topic of Interest\": \"\",\n                    \"Student Strengths\": \"\",\n                    \"Student Weakness\": \"\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n        },\n        64: {\n            1: {\n                student_id: 64,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Davis\",\n                    \"Textbook Used\": \"Holt Math 6\",\n                    \"Current Grade in Class\": \"C\",\n                    \"Current Topic in School / Topic of Interest\": \"Adding fractions, ratios, word problems\",\n                    \"Student Strengths\": \"\",\n                    \"Student Weakness\": \"\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            2: {\n                student_id: 64,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Devine\",\n                    \"Textbook Used\": \"Kipling 8th Grade Physical Science\",\n                    \"Current Grade in Class\": \"C+\",\n                    \"Current Topic in School / Topic of Interest\": \"Physics mechanics\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            4: {\n                student_id: 64,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Dixon\",\n                    \"Textbook Used\": \"Introduction to Calculus\",\n                    \"Current Grade in Class\": \"B\",\n                    \"Current Topic in School / Topic of Interest\": \"Limits\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"conceptual ideas\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: -1,\n                    4: 1,\n                    5: 0,\n                    6: 0,\n                    7: 0,\n                    8: 0,\n                    9: 0,\n                    10: 0,\n                    11: 0,\n                    12: 0,\n                    13: 0,\n                    14: 0,\n                    15: 0,\n                },\n            },\n            5: {\n                student_id: 64,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Pattock\",\n                    \"Textbook Used\": \"Chemistry by HGM\",\n                    \"Current Grade in Class\": \"C+\",\n                    \"Current Topic in School / Topic of Interest\": \"Nobel Gas Law\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            6: {\n                student_id: 64,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Kumar\",\n                    \"Textbook Used\": \"Common Core Geometry\",\n                    \"Current Grade in Class\": \"C+\",\n                    \"Current Topic in School / Topic of Interest\": \"Trigonometry\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            9: {\n                student_id: 64,\n                notes: {\n                    \"Current Instructor in School\": \"Mrs. Melby\",\n                    \"Textbook Used\": \"Foundational Calculus\",\n                    \"Current Grade in Class\": \"C+\",\n                    \"Current Topic in School / Topic of Interest\": \"Derivatives\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n            10: {\n                student_id: 64,\n                notes: {\n                    \"Current Instructor in School\": \"Mr. Tran\",\n                    \"Textbook Used\": \"Foundational Calculus\",\n                    \"Current Grade in Class\": \"C-\",\n                    \"Current Topic in School / Topic of Interest\": \"Derivatives\",\n                    \"Student Strengths\": \"reading\",\n                    \"Student Weakness\": \"math\",\n                    general: \"\",\n                },\n                session_payment_status: {\n                    1: 1,\n                    2: 1,\n                    3: 1,\n                    4: 1,\n                    5: 1,\n                    6: 1,\n                    7: 1,\n                    8: 1,\n                    9: 1,\n                    10: 1,\n                    11: 1,\n                    12: 1,\n                    13: 1,\n                    14: 1,\n                    15: 1,\n                },\n            },\n        },\n        10: {\n            1: {\n                notes: {\n                    1: {\n                        body: \"print stuff for next class\",\n                        timestamp: \"2020-2-3T08:12\",\n                        complete: false,\n                        important: true,\n                        active: true,\n                    },\n                },\n            },\n            4: {\n                notes: {}\n            },\n            10: {\n                notes: {}\n            },\n        },\n        11: {\n            2: {\n                notes: {},\n            },\n            5: {\n                notes: {},\n            },\n            7: {\n                notes: {},\n            },\n            9: {\n                notes: {},\n            },\n        },\n        12: {\n            3: {\n                notes: {},\n            },\n            8: {\n                notes: {},\n            },\n        },\n    },\n    \"Payments\": {\n        //Payment ID = studentID + courseID + SubPaymentID\n        //23 = studentID: 1 = course 1: 1/2 = payment\n        23: {\n            1: {\n                1: {\n                    method: \"Credit Card\",\n                    amount: 250,\n                    date: \"2019-12-23\",\n                    discount: {\n                        code: \"SIBDISC2019\",\n                        session_amount: 1,\n                    },\n                },\n                2: {\n                    method: \"Credit Card\",\n                    amount: 200,\n                    date: \"2019-12-31\",\n                    discount: {\n                        code: \"SIBDISC2019\",\n                        session_amount: 1,\n                    },\n                },\n            },\n            2: {\n                1: {\n                    method: \"Check\",\n                    amount: 500,\n                    date: \"2020-05-13\",\n                    discount: {\n                        code: \"SIBDISC2019\",\n                        session_amount: 1,\n                    },\n                },\n            },\n            3: {\n                1: {\n                    method: \"Credit Card\",\n                    amount: 360,\n                    date: \"2020-08-3\",\n                    discount: {\n                        code: \"SIBDISC2019\",\n                        session_amount: 1,\n                    },\n                }\n            },\n            6: {\n                1: {\n                    method: \"Credit Card\",\n                    amount: 1000,\n                    date: \"2020-08-01\",\n                    discount: {\n                        code: \"SIBDISC2019\",\n                        session_amount: 1,\n                    },\n                },\n                2: {\n                    method: \"Credit Card\",\n                    amount: 440,\n                    date: \"2020-08-07\",\n                    discount: {\n                        code: \"SIBDISC2019\",\n                        session_amount: 1,\n                    },\n                },\n            },\n            8: {\n                1: {\n                    method: \"Check\",\n                    amount: 100,\n                    date: \"2020-01-16\",\n                    discount: {\n                        code: \"SIBDISC2019\",\n                        session_amount: 1,\n                    },\n                },\n                2: {\n                    method: \"Credit Card\",\n                    amount: 200,\n                    date: \"2020-01-23\",\n                    discount: {\n                        code: \"SIBDISC2019\",\n                        session_amount: 1,\n                    },\n                },\n                3: {\n                    method: \"Credit Card\",\n                    amount: 400,\n                    date: \"2020-01-31\",\n                    discount: {\n                        code: \"SIBDISC2019\",\n                        session_amount: 1,\n                    },\n                },\n            },\n            10: {\n                1: {\n                    method: \"Cash\",\n                    amount: 700,\n                    date: \"2020-03-21\",\n                    discount: {\n                        code: \"SIBDISC2019\",\n                        session_amount: 1,\n                    },\n                },\n            },\n        },\n        24: {\n            2: {\n                1: {\n                    method: \"Credit Card\",\n                    amount: 500,\n                    date: \"2020-06-01\",\n                },\n            },\n            5: {},\n            6: {\n                1: {\n                    method: \"Check\",\n                    amount: 1000,\n                    date: \"2019-07-10\",\n                },\n                2: {\n                    method: \"Check\",\n                    amount: 440,\n                    date: \"2019-08-5\",\n                }\n            },\n            8: {\n                1: {\n                    method: \"Cash\",\n                    amount: 100,\n                    date: \"2020-01-29\",\n                },\n                2: {\n                    method: \"Cash\",\n                    amount: 600,\n                    date: \"2020-02-01\",\n                }\n            },\n            9: {\n                1: {\n                    method: \"Credit Card\",\n                    amount: 700,\n                    date: \"2020-03-03\",\n                }\n            },\n        },\n        99: {\n            1: {\n                1: {\n                    method: \"Check\",\n                    amount: 450,\n                    date: \"2020-01-07\",\n                }\n            },\n            2: {\n                1: {\n                    method: \"Check\",\n                    amount: 500,\n                    date: \"2020-06-02\",\n                },\n            },\n            5: {\n                1: {\n                    method: \"Check\",\n                    amount: 450,\n                    date: \"2019-10-18\",\n                },\n            },\n            6: {\n                1: {\n                    method: \"Cash\",\n                    amount: 440,\n                    date: \"2020-07-01\",\n                },\n                2: {\n                    method: \"Check\",\n                    amount: 1000,\n                    date: \"2020-08-07\",\n                },\n            },\n            7: {\n                1: {\n                    method: \"Check\",\n                    amount: 850,\n                    date: \"2020-03-01\",\n                },\n            },\n            8: {\n                1: {\n                    method: \"Check\",\n                    amount: 700,\n                    date: \"2020-02-1\",\n                }\n            },\n            10: {\n                1: {\n                    method: \"Check\",\n                    amount: 700,\n                    date: \"2010-03-01\",\n                },\n            },\n        },\n        64: {\n            1: {\n                1: {\n                    method: \"Cash\",\n                    amount: 450,\n                    date: \"2020-01-07\"\n                },\n            },\n            2: {\n                1: {\n                    method: \"Check\",\n                    amount: 500,\n                    date: \"2020-06-01\",\n                }\n            },\n            4: {\n                1: {\n                    method: \"Check\",\n                    amount: 255,\n                    date: \"2020-08-01\",\n                }\n            },\n            5: {\n                1: {\n                    method: \"Check\",\n                    amount: 450,\n                    date: \"2019-10-05\",\n                }\n            },\n            6: {\n                1: {\n                    date: \"2020-08-03\",\n                    amount: 1440,\n                    method: \"Credit Card\",\n                }\n            },\n            9: {\n                1: {\n                    date: \"2020-03-02\",\n                    method: \"Check\",\n                    amount: 700,\n                },\n            },\n            10: {\n                1: {\n                    amount: 700,\n                    method: \"Credit Card\",\n                    date: \"2020-02-24\",\n                }\n            }\n        },\n    },\n    \"Users\": {\n        \"StudentList\": {\n            23: {\n                user_id: 23,\n                gender: \"M\",\n                address: \"1111 Dale Ave\",\n                city: \"Angle City\",\n                phone_number: \"9250108111\",\n                state: \"CA\",\n                zipcode: \"94040\",\n                age: 14,\n                updated_at: \"2019-06-02T01:57:49.068Z\",\n                \"created_at\": \"2019-06-02T01:57:49.068Z\",\n                name: \"Danny Long\",\n                first_name: \"Danny\",\n                last_name: \"Long\",\n                email: \"dannylong@omou.com\",\n                parent_id: 78,\n                role: \"student\",\n                balance: 0,\n                birthday: \"9/29/2004\",\n                grade: 5,\n                school: \"Crystal River College\",\n                notes: {\n                    1: {\n                        timestamp: \"2020-01-02T12:05\",\n                        body: \"wants to take bio\",\n                        important: false,\n                        complete: false,\n                        active: true,\n                    },\n                    2: {\n                        timestamp: \"2020-01-10T13:11\",\n                        body: \"sister is interested in taking 7th grade english\",\n                        important: true,\n                        complete: false,\n                        active: true,\n                    },\n                },\n            },\n            24: {\n                user_id: 24,\n                gender: \"M\",\n                address: \"3120 Apple St.\",\n                city: \"Gotham\",\n                phone_number: \"7770108428\",\n                state: \"CA\",\n                zipcode: \"93240\",\n                age: 15,\n                updated_at: \"2019-06-02T01:00:49.068Z\",\n                \"created_at\": \"2019-06-02T01:00:49.068Z\",\n                name: \"Jim Plano\",\n                first_name: \"Jim\",\n                last_name: \"Plano\",\n                email: \"planojim@yahoo.com\",\n                parent_id: 79,\n                role: \"student\",\n                balance: 0,\n                birthday: \"12/28/2004\",\n                grade: 8,\n                school: \"Stonewall High School\",\n                notes: {\n                    1: {\n                        timestamp: \"2020-01-13T17:33\",\n                        body: \"Needs PSAT practice problems\",\n                        complete: false,\n                        important: true,\n                        active: true,\n                    },\n                },\n            },\n            99: {\n                user_id: 99,\n                gender: \"F\",\n                address: \"1111 Candy Circle\",\n                city: \"Grim City\",\n                phone_number: \"9250108111\",\n                state: \"CA\",\n                zipcode: \"94040\",\n                age: 16,\n                updated_at: \"2019-06-02T02:30:49.068Z\",\n                \"created_at\": \"2019-06-02T02:15:49.068Z\",\n                name: \"Hansel Kid\",\n                first_name: \"Hansel\",\n                last_name: \"Kid\",\n                email: \"hanselkid@gmail.com\",\n                parent_id: 80,\n                role: \"student\",\n                balance: 0,\n                birthday: \"3/11/2005\",\n                grade: 3,\n                school: \"Saint Helena Technical School\",\n                notes: {\n                    1: {\n                        timestamp: \"2020-01-12T15:21\",\n                        body: \"grade bio worksheet\",\n                        important: true,\n                        active: true,\n                        complete: false,\n                    },\n                },\n            },\n            64: {\n                user_id: 64,\n                gender: \"F\",\n                address: \"3120 Apple St.\",\n                city: \"Gotham\",\n                phone_number: \"7770108428\",\n                state: \"CA\",\n                zipcode: \"93240\",\n                age: 17,\n                updated_at: \"2019-06-02T01:00:49.068Z\",\n                \"created_at\": \"2019-06-02T01:00:49.068Z\",\n                name: \"Batkid Wayne\",\n                first_name: \"Batkid\",\n                last_name: \"Wayne\",\n                email: \"batkid@wayne.com\",\n                parent_id: 81,\n                role: \"student\",\n                balance: 0,\n                birthday: \"4/1/2005\",\n                grade: 10,\n                school: \"Eastside Conservatory\",\n                notes: {\n                },\n            },\n        },\n        \"ParentList\": {\n            78: {\n                user_id: 78,\n                gender: \"F\",\n                address: \"1111 Dale Ave\",\n                city: \"Angle City\",\n                phone_number: \"9250108111\",\n                state: \"CA\",\n                zipcode: \"94040\",\n                updated_at: \"2019-06-02T01:57:49.068Z\",\n                \"created_at\": \"2019-06-02T01:57:49.068Z\",\n                relationship: \"Mother\",\n                name: \"Gale Long\",\n                first_name: \"Gale\",\n                last_name: \"Long\",\n                email: \"gale.long@omou.com\",\n                role: \"parent\",\n                birthday: \"12/10/1960\",\n                notes: {},\n                student_ids: [23],\n            },\n            79: {\n                user_id: 79,\n                gender: \"M\",\n                address: \"3120 Apple St.\",\n                city: \"Gotham\",\n                phone_number: \"7770108428\",\n                state: \"CA\",\n                zipcode: \"93240\",\n                updated_at: \"2019-06-02T01:00:49.068Z\",\n                \"created_at\": \"2019-06-02T01:00:49.068Z\",\n                relationship: \"Father\",\n                name: \"Ranger Plano\",\n                first_name: \"Ranger\",\n                last_name: \"Plano\",\n                email: \"ranger.plano@omou.com\",\n                role: \"parent\",\n                birthday: \"1/19/1963\",\n                notes: {},\n                student_ids: [24, 99, 64],\n            },\n            80: {\n                user_id: 80,\n                gender: \"F\",\n                address: \"1111 Candy Circle\",\n                city: \"Grim City\",\n                phone_number: \"9250108111\",\n                state: \"CA\",\n                zipcode: \"94040\",\n                updated_at: \"2019-06-02T02:30:49.068Z\",\n                \"created_at\": \"2019-06-02T02:15:49.068Z\",\n                relationship: \"Mother\",\n                name: \"Gretta Kid\",\n                first_name: \"Gretta\",\n                last_name: \"Kid\",\n                email: \"grettaKidd@omou.com\",\n                role: \"parent\",\n                birthday: \"8/23/1965\",\n                notes: {},\n                student_ids: [99],\n            },\n            81: {\n                user_id: 81,\n                gender: \"F\",\n                address: \"3120 Apple St.\",\n                city: \"Gotham\",\n                phone_number: \"7770108428\",\n                state: \"CA\",\n                zipcode: \"93240\",\n                updated_at: \"2019-06-02T01:00:49.068Z\",\n                \"created_at\": \"2019-06-02T01:00:49.068Z\",\n                name: \"Robin Wayne\",\n                first_name: \"Robin\",\n                last_name: \"Wayne\",\n                relationship: \"Mother\",\n                email: \"robinwayne@omou.com\",\n                role: 'parent',\n                birthday: \"5/10/1966\",\n                notes: {},\n                student_ids: [64],\n            },\n        },\n        \"InstructorList\": {\n            10: {\n                user_id: 10,\n                name: \"Daniel Huang\",\n                email: \"daniel.huang@gmail.com\",\n                role: 'instructor',\n                phone_number: \"1234458989\",\n                background: {\n                    bio: \"Daniel graduated from UCLA as an Economics major in 2018. He now works full time as a \" +\n                        \"Cyber Security Consultant. Daniel grew up in Pleasanton and went to high school at \" +\n                        \"Amador Valley High School. He is skilled in math and sciences.\",\n                    experience: 2,\n                    subjects: [\"Middle School Biology\", \"AP Calculus\"],\n                    languages: [\"English\", \"Mandarin\"],\n                },\n                birthday: \"3/13/1974\",\n                schedule: {\n                    work_hours: {\n                        1: {\n                            start: \"T17:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        2: {\n                            start: \"T17:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        3: {\n                            start: \"T18:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        4: {\n                            start: \"T00:00\",\n                            end: \"T00:00\",\n                            title: \"\",\n                        },\n                        5: {\n                            start: \"T16:00\",\n                            end: \"T21:00\",\n                            title: \"\",\n                        },\n                        6: {\n                            start: \"T09:00\",\n                            end: \"T12:00\",\n                            title: \"\",\n                        },\n                    },\n                    time_off: {\n                        1: {\n                            start: \"2020-01-14T00:00\",\n                            end: \"2020-01-21T00:00\",\n                            title: \"Daniel Time Off\",\n                        },\n                        2: {\n                            start: \"2020-03-22T00:00\",\n                            end: \"2020-03-22T00:00\",\n                            title: \"Daniel Time Off\",\n                        },\n                    },\n                },\n                notes: {\n                    1: {\n                        timestamp: \"2020-01-02T13:00\",\n                        body: \"Needs past AP CS multiple choice exams\",\n                        complete: false,\n                        important: true,\n                        active: true,\n                    },\n                    2: {\n                        timestamp: \"2020-01-10T15:02\",\n                        body: \"Needs x things copied for his 2pm class on tuesdays\",\n                        complete: false,\n                        important: true,\n                        active: true,\n                    },\n                },\n            },\n            11: {\n                user_id: 11,\n                name: \"Jerry Li\",\n                email: \"jerrylinew@gmail.com\",\n                role: 'instructor',\n                phone_number: \"1234458923\",\n                background: {\n                    bio: \"Jerry graduated from UCLA as an Computer Science major in 2018. He now works full time as a \" +\n                        \"Data Engineer at Robinhood. Jerry grew up in Pleasanton and went to high school at \" +\n                        \"Amador Valley High School. He is skilled in math and sciences.\",\n                    experience: 2,\n                    subjects: [\"Middle School Competitive Math\", \"AP Calculus AB and BC\"],\n                    languages: [\"English\", \"Mandarin\"],\n                },\n                birthday: \"9/24/1974\",\n                schedule: {\n                    work_hours: {\n                        1: {\n                            start: \"T18:00\",\n                            end: \"T21:00\",\n                            title: \"\",\n                        },\n                        2: {\n                            start: \"T17:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        3: {\n                            start: \"T18:00\",\n                            end: \"T21:00\",\n                            title: \"\",\n                        },\n                        4: {\n                            start: \"T17:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        5: {\n                            start: \"T16:00\",\n                            end: \"T21:00\",\n                            title: \"\",\n                        },\n                        6: {\n                            start: \"T09:00\",\n                            end: \"T15:00\",\n                            title: \"\",\n                        },\n                    },\n                    time_off: {\n                        1: {\n                            start: \"2020-02-10T00:00\",\n                            end: \"2020-02-21T00:00\",\n                            title: \"Jerry Time Off\",\n                        },\n                    },\n                },\n                notes: {\n                    1: {\n                        timestamp: \"2020-01-07T13:32\",\n                        body: \"Print January Timesheet for Jerry\",\n                        complete: false,\n                        important: true,\n                        active: true,\n                    },\n                },\n            },\n            12: {\n                user_id: 12,\n                name: \"Albert Deng\",\n                email: \"albert@omou.com\",\n                role: 'instructor',\n                phone_number: \"1234538989\",\n                background: {\n                    bio: \"Albert graduated from UCLA as an Economics major in 2016. He now works full time as a \" +\n                        \"Consultant at PwC. Albert grew up in San Jose and went to high school at \" +\n                        \"Lynbrook High School. He is skilled in math and sciences.\",\n                    experience: 2,\n                    subjects: [\"Middle School Physics\", \"AP Calculus\", \"AP Statistics\"],\n                    languages: [\"English\", \"Mandarin\"],\n                },\n                birthday: \"10/28/1974\",\n                schedule: {\n                    work_hours: {\n                        1: {\n                            start: \"T17:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        2: {\n                            start: \"T17:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        3: {\n                            start: \"T18:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        4: {\n                            start: \"T17:00\",\n                            end: \"T22:00\",\n                            title: \"\",\n                        },\n                        5: {\n                            start: \"T16:00\",\n                            end: \"T21:00\",\n                            title: \"\",\n                        },\n                        6: {\n                            start: \"T09:00\",\n                            end: \"T17:00\",\n                            title: \"\",\n                        },\n                    },\n                    time_off: {},\n                },\n                notes: {\n                    1: {\n                        timestamp: \"2020-01-04T17:12\",\n                        body: \"Remind Albert to fill out timesheet\",\n                        complete: true,\n                        active: true,\n                        important: true,\n                    },\n                    2: {\n                        timestamp: \"2020-01-04T17:16\",\n                        body: \"Print worksheets for Albert's bio 1x1\",\n                        complete: false,\n                        active: true,\n                        important: true,\n                    },\n                },\n            },\n            13: {\n                user_id: 13,\n                name: \"Katie Ho\",\n                email: \"katie@omou.com\",\n                role: 'instructor',\n                phone_number: \"1299458989\",\n                background: {\n                    bio: \"Katie graduated from UCLA as an Economics major in 2017. She now works full time as a \" +\n                        \"Category Specialist at Walmart. Katie grew up in Arizon and went to high school at \" +\n                        \"XXX. She is skilled in math and sciences.\",\n                    experience: 2,\n                    subjects: [\"Middle School Math\", \"AP Calculus\"],\n                    languages: [\"English\", \"Mandarin\"],\n                },\n                birthday: \"10/3/1975\",\n                schedule: {\n                    work_hours: {\n                        1: {\n                            start: \"T16:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        2: {\n                            start: \"T17:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        3: {\n                            start: \"T16:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        4: {\n                            start: \"T17:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        5: {\n                            start: \"T16:00\",\n                            end: \"T20:00\",\n                            title: \"\",\n                        },\n                        6: {\n                            start: \"T11:00\",\n                            end: \"T16:00\",\n                            title: \"\",\n                        },\n                    },\n                    time_off: {\n                        1: {\n                            start: \"2020-01-05T00:00\",\n                            end: \"2020-01-21T00:00\",\n                            title: \"Katie Time Off\",\n                        },\n                    },\n                },\n                notes: {\n                    1: {\n                        timestamp: \"2020-01-09T18:11\",\n                        body: \"Katie can't teach on Saturdays after the 22nd\",\n                        complete: false,\n                        active: true,\n                        important: false,\n                    },\n                },\n            },\n        },\n        \"ReceptionistList\": {\n            101: {\n                user_id: 101,\n                name: \"Ryan Liou\",\n                phone_number: \"1234567899\",\n                email: \"ryan.liou@gmail.com\",\n                role: 'receptionist',\n                birthday: \"11/5/1985\",\n                action_log: {\n                    1: {\n                        date: \"6/22/2018\",\n                        time: \"2:00PM\",\n                        description: \"Unregistered English 7 sessions with Danny Hong\",\n                    },\n                    2: {\n                        date: \"6/10/2018\",\n                        time: \"5:00PM\",\n                        description: \"Registered AP Calc tutoring with Daniel Huang\",\n                    },\n                    3: {\n                        date: \"6/2/2018\",\n                        time: \"5:00PM\",\n                        description: \"Registered AP Calc tutoring with Daniel Huang\",\n                    },\n                    4: {\n                        date: \"5/24/2018\",\n                        time: \"5:00PM\",\n                        description: \"Registered AP Calc tutoring with Daniel Huang\",\n                    },\n                },\n            },\n            130: {\n                user_id: 130,\n                name: \"Lian Ryou\",\n                phone_number: \"9921351863\",\n                email: \"lianryou@gmail.com\",\n                role: 'receptionist',\n                birthday: \"10/8/1965\",\n                action_log: {\n                    1: {\n                        date: \"6/26/2018\",\n                        time: \"2:00PM\",\n                        description: \"Unregistered English 7 sessions with Danny Hong\",\n                    },\n                    2: {\n                        date: \"6/10/2018\",\n                        time: \"4:00PM\",\n                        description: \"Registered AP Calc tutoring with Daniel Huang\",\n                    },\n                    3: {\n                        date: \"4/9/2018\",\n                        time: \"3:00PM\",\n                        description: \"Registered AP Calc tutoring with Daniel Huang\",\n                    },\n                    4: {\n                        date: \"3/24/2018\",\n                        time: \"8:00PM\",\n                        description: \"Registered AP Calc tutoring with Daniel Huang\",\n                    },\n                },\n            },\n        },\n    },\n    \"CalenderData\": {\n        \"events_in_view\": [\n            {\n                id: 1,\n                title: \"6th Grade Math Placement Test Prep\",\n                start: \"2019-08-28T07:00\",\n                end: \"2019-08-28T08:00\",\n                editable: true,\n                subject: \"math\",\n                instructor_id: 10,\n                course: \"C\",\n            },\n            {\n                id: 2,\n                title: \"Math\",\n                start: \"2019-08-28T08:00\",\n                end: \"2019-08-28T10:00\",\n                editable: true,\n                subject: \"math\",\n                instructor_id: 11,\n                course: \"T\",\n            },\n            {\n                id: 3,\n                title: \"English\",\n                start: \"2019-08-28T10:30\",\n                end: \"2019-08-28T12:00\",\n                editable: true,\n                subject: \"english\",\n                instructor_id: 12,\n                course: \"T\",\n\n            },\n            {\n                id: 4,\n                title: \"Social Studies\",\n                start: \"2019-08-28T13:00\",\n                end: \"2019-08-28T15:00\",\n                editable: true,\n                subject: \"social\",\n                instructor_id: 10,\n                course: \"T\",\n            }, {\n                id: 5,\n                title: \"Something\",\n                start: \"2019-08-28T15:30\",\n                end: \"2019-08-28T17:00\",\n                editable: true,\n                subject: \"test\",\n                instructor_id: 11,\n                course: \"T\",\n            }, {\n                id: 6,\n                title: \"This one class\",\n                start: \"2019-0-28T17:00\",\n                end: \"2019-08-28T18:00\",\n                editable: true,\n                subject: \"test\",\n                instructor_id: 11,\n                course: \"T\",\n            },\n\n        ],\n    },\n};\n\nfunction initAuth() {\n    const token = localStorage.getItem(\"authToken\") || null;\n    sessionStorage.setItem(\"authToken\", token);\n    return {\n        token,\n        \"failedLogin\": false,\n    };\n}\n\nfunction initRegistrationForm() {\n    const studentInfoSection = {\n        \"Student Information\": [\n            {\n                field: \"Current Instructor in School\",\n                name: \"Current Instructor in School\",\n                type: \"short text\",\n                conditional: false,\n                required: false,\n                full: true,\n                field_limit: 1,\n            },\n            {\n                field: \"Textbook Used\",\n                name: \"Textbook Used\",\n                type: \"short text\",\n                conditional: false,\n                required: false,\n                full: true,\n                field_limit: 1,\n            },\n            {\n                field: \"Current Grade in Class\",\n                name: \"Current Grade in Class\",\n                type: \"short text\",\n                conditional: false,\n                required: false,\n                full: false,\n                field_limit: 1,\n            },\n            {\n                field: \"Current Topic in School / Topic of Interest\",\n                name: \"Current Topic in School / Topic of Interest\",\n                type: \"short text\",\n                conditional: false,\n                required: false,\n                full: true,\n                field_limit: 1,\n            },\n            {\n                field: \"Student Strengths\",\n                name: \"Student Strengths\",\n                type: \"short text\",\n                conditional: false,\n                required: false,\n                full: true,\n                field_limit: 1,\n            },\n            {\n                field: \"Student Weaknesses\",\n                name: \"Student Weaknesses\",\n                type: \"short text\",\n                conditional: false,\n                required: false,\n                full: true,\n                field_limit: 1,\n            },\n        ],\n    };\n    return {\n        registration_form: {\n            student: {\n                form_type: \"student\",\n                section_titles: [\"Basic Information\", \"Parent Information\"],\n                \"Basic Information\": [\n                    {\n                        field: \"Student First Name\",\n                        name: \"Student First Name\",\n                        type: \"short text\",\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Student Last Name\",\n                        name: \"Student Last Name\",\n                        type: \"short text\",\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Gender\",\n                        name: \"Gender\",\n                        type: \"select\",\n                        options: [\"Do not disclose\", \"Male\", \"Female\"],\n                        required: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Grade\",\n                        name: \"Grade\",\n                        type: \"number\",\n                        required: true,\n                        full: false,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Age\",\n                        name: \"Age\",\n                        type: \"number\",\n                        required: false,\n                        full: false,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"School\",\n                        name: \"School\",\n                        type: \"short text\",\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Student Email\",\n                        name: \"Student Email\",\n                        type: \"email\",\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Student Phone Number\",\n                        name: \"Student Phone Number\",\n                        type: \"phone number\",\n                        required: false,\n                        full: true,\n                        field_limit: 1,\n                    },\n                ],\n                \"Parent Information\": [\n                    {\n                        field: \"Select Parent\",\n                        name: \"Select Parent\",\n                        type: \"select parent\",\n                        field_limit: 1,\n                        required: false,\n                        full: false,\n                    },\n                    {\n                        field: \"Parent First Name\",\n                        name: \"Parent First Name\",\n                        type: \"short text\",\n                        field_limit: 1,\n                        required: true,\n                        full: true,\n                    },\n                    {\n                        field: \"Parent Last Name\",\n                        name: \"Parent Last Name\",\n                        type: \"short text\",\n                        field_limit: 1,\n                        required: true,\n                        full: true,\n                    },\n                    {\n                        field: \"Relationship to Student\",\n                        name: \"Relationship to Student\",\n                        type: \"select\",\n                        required: true,\n                        field_limit: 1,\n                        options: [\"Mother\", \"Father\", \"Guardian\", \"Other\"],\n                    },\n                    {\n                        field: \"Gender\",\n                        name: \"Gender\",\n                        type: \"select\",\n                        options: [\"Do not disclose\", \"Male\", \"Female\"],\n                        required: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Parent Email\",\n                        name: \"Parent Email\",\n                        type: \"email\",\n                        field_limit: 1,\n                        required: true,\n                        full: true,\n                    },\n                    {\n                        field: \"Parent Phone Number\",\n                        name: \"Phone Number\",\n                        type: \"phone number\",\n                        field_limit: 1,\n                        required: true,\n                        full: true,\n                    },\n                    {\n                        field: \"Address\",\n                        name: \"Address\",\n                        type: \"short text\",\n                        full: false,\n                        required: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"City\",\n                        name: \"City\",\n                        type: \"short text\",\n                        full: false,\n                        required: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"State\",\n                        name: \"State\",\n                        type: \"short text\",\n                        suggestions: [\n                            { label: \"AL\" }, { label: \"AK\" }, { label: \"AZ\" }, { label: \"AR\" }, { label: \"CA\" }, { label: \"CO\" },\n                            { label: \"CT\" }, { label: \"DE\" }, { label: \"FL\" }, { label: \"GA\" }, { label: \"HI\" }, { label: \"ID\" },\n                            { label: \"IL\" }, { label: \"IN\" }, { label: \"IA\" }, { label: \"KS\" },\n                            { label: \"KY\" }, { label: \"KY\" }, { label: \"LA\" }, { label: \"ME\" }, { label: \"MD\" }, { label: \"MA\" }, { label: \"MI\" },\n                            { label: \"MS\" }, { label: \"MO\" }, { label: \"MT\" }, { label: \"NE\" }, { label: \"NV\" }, { label: \"NH\" }, { label: \"NJ\" },\n                            { label: \"NM\" }, { label: \"NY\" }, { label: \"NC\" }, { label: \"ND\" },\n                            { label: \"OH\" }, { label: \"OK\" }, { label: \"OR\" }, { label: \"PA\" }, { label: \"RI\" }, { label: \"SC\" }, { label: \"SD\" },\n                            { label: \"TN\" }, { label: \"TX\" }, { label: \"UT\" }, { label: \"VT\" }, { label: \"VA\" }, { label: \"WA\" }, { label: \"WV\" }, { label: \"WI\" },\n                            { label: \"WY\" },\n                        ].map((suggestion) => ({\n                            value: suggestion.label,\n                            label: suggestion.label,\n                        })),\n                        full: false,\n                        required: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Zip Code\",\n                        name: \"Zip Code\",\n                        type: \"string\",\n                        full: false,\n                        required: true,\n                        field_limit: 1,\n                    },\n                ],\n            },\n            tutoring: {\n                form_type: \"tutoring\",\n                section_titles: [\"Tutoring Session Type\", \"Student(s)\", \"Student Information\", \"Tutor Selection\", \"Schedule\", \"Payment\"],\n                \"Tutoring Session Type\": [\n                    {\n                        field: \"Select tutoring type\",\n                        type: \"select\",\n                        conditional: true,\n                        options: [\"Private Tutoring\", \"Small Group\"],\n                        required: true,\n                        full: false,\n                        name: \"Select tutoring type\",\n                        field_limit: 1,\n                    },\n                ],\n                \"Student(s)\": {\n                    \"Private Tutoring\": [\n                        {\n                            field: \"Student\",\n                            name: \"Student\",\n                            type: \"student\",\n                            conditional: false,\n                            required: true,\n                            full: false,\n                            field_limit: 1,\n                        },\n                    ],\n                    \"Small Group\": [\n                        {\n                            field: \"Student\",\n                            name: \"Student\",\n                            type: \"student\",\n                            conditional: false,\n                            required: true,\n                            full: false,\n                            field_limit: 5,\n                        },\n                        {\n                            field: \"Student\",\n                            name: \"Student 2\",\n                            type: \"student\",\n                            conditional: false,\n                            required: true,\n                            full: false,\n                            field_limit: 5,\n                        },\n                    ],\n                },\n                ...studentInfoSection,\n                \"Tutor Selection\": [\n                    {\n                        field: \"Instructor\",\n                        name: \"Instructor\",\n                        type: \"instructor\",\n                        conditional: false,\n                        required: false,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Course / Subject\",\n                        name: \"Course / Subject\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 2,\n                    },\n                ],\n                \"Schedule\": [\n                    {\n                        field: \"Day\",\n                        name: \"Day\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: false,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Number of Sessions\",\n                        name: \"Number of Sessions\",\n                        type: \"number\",\n                        conditional: false,\n                        required: true,\n                        full: false,\n                        field_limit: 1,\n                    },\n                ],\n                \"Payment\": [\n                    {\n                        field: \"Session Price\",\n                        name: \"Amount\",\n                        type: \"select\",\n                        options: [\"High School\", \"Middle School\", \"Elementary School\", \"Test\"],\n                        conditional: false,\n                        required: true,\n                        full: false,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Payment Method\",\n                        name: \"Payment Method\",\n                        type: \"select\",\n                        options: [\"Credit Card\", \"Check\", \"Cash\", \"Account Balance\"],\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Discount Code 1\",\n                        name: \"Discount Code\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: false,\n                        full: false,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Discount Code 2\",\n                        name: \"Discount Code\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: false,\n                        full: false,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Discount Code 3\",\n                        name: \"Discount Code\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: false,\n                        full: false,\n                        field_limit: 1,\n                    },\n                ],\n            },\n            course: {\n                form_type: \"course\",\n                section_titles: [\"Student\", \"Student Information\", \"Course Selection\", \"Payment\"],\n                \"Student\": [\n                    {\n                        field: \"Student\",\n                        name: \"Student\",\n                        type: \"student\",\n                        conditional: false,\n                        required: true,\n                        full: false,\n                        field_limit: 5,\n                    },\n                ],\n                ...studentInfoSection,\n                \"Course Selection\": [\n                    {\n                        field: \"Course\",\n                        name: \"Course\",\n                        type: \"course\",\n                        conditional: false,\n                        required: false,\n                        full: true,\n                        field_limit: 5,\n                    },\n                ],\n                \"Payment\": [\n                    {\n                        field: \"Payment Method\",\n                        name: \"Payment Method\",\n                        type: \"select\",\n                        options: [\"Credit Card\", \"Check\", \"Cash\", \"Account Balance\"],\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Discount Code 1\",\n                        name: \"Discount Code\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: false,\n                        full: false,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Discount Code 2\",\n                        name: \"Discount Code\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: false,\n                        full: false,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Discount Code 3\",\n                        name: \"Discount Code\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: false,\n                        full: false,\n                        field_limit: 1,\n                    },\n                ],\n            },\n            instructor: {\n                form_type: \"instructor\",\n                section_titles: [\"Basic Information\", \"Education\", \"Experience\"],\n                \"Basic Information\": [\n                    {\n                        field: \"First Name\",\n                        name: \"First Name\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Last Name\",\n                        name: \"Last Name\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"E-Mail\",\n                        name: \"E-Mail\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Phone Number\",\n                        name: \"Phone Number\",\n                        type: \"phone number\",\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Gender\",\n                        name: \"Gender\",\n                        type: \"select\",\n                        options:\n                            [\"Do not disclose\", \"Male\", \"Female\"],\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Address\",\n                        name: \"Address\",\n                        type: \"address\",\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"City\",\n                        name: \"City\",\n                        type: \"short text\",\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Zip Code\",\n                        name: \"Zip Code\",\n                        type: \"zipcode\",\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"State\",\n                        name: \"State\",\n                        type: \"select\",\n                        options: [\n                            \"Please select a State\", \"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\",\n                            \"CT\", \"DE\", \"FL\", \"GA\", \"HI\", \"ID\",\n                            \"IL\", \"IN\", \"IA\", \"KS\",\n                            \"KY\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\",\n                            \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\",\n                            \"NM\", \"NY\", \"NC\", \"ND\",\n                            \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\",\n                            \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\",\n                            \"WY\",\n                        ],\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Date of Birth (MM/DD/YYYY)\",\n                        name: \"Date of Birth\",\n                        type: \"birthday\",\n                        conditional: false,\n                        required: true,\n                        full: true,\n                        field_limit: 1,\n                    },\n                ],\n                \"Education\": [\n                    {\n                        field: \"College\",\n                        name: \"College\",\n                        type: \"short text\",\n                        full: true,\n                        required: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Degree(s)\",\n                        name: \"Degree(s)\",\n                        type: \"short text\",\n                        full: true,\n                        required: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Minor(s)\",\n                        name: \"Minor(s)\",\n                        type: \"short text\",\n                        full: true,\n                        required: false,\n                        field_limit: 1,\n                    },\n                ],\n                \"Experience\": [\n                    {\n                        field: \"Subject(s) Tutor Can Teach\",\n                        name: \"Subject(s) Tutor Can Teach\",\n                        type: \"string\",\n                        full: true,\n                        required: true,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Specialties\",\n                        name: \"Specialties\",\n                        type: \"string\",\n                        full: true,\n                        required: false,\n                        field_limit: 1,\n                    },\n                    {\n                        field: \"Background\",\n                        name: \"Background\",\n                        type: \"string\",\n                        full: true,\n                        required: false,\n                        field_limit: 1,\n                        multiline: true,\n                    },\n                    {\n                        field: \"Notes\",\n                        name: \"Notes\",\n                        type: \"string\",\n                        full: true,\n                        required: false,\n                        field_limit: 1,\n                        multiline: true,\n                    },\n                ],\n            },\n        },\n        submitStatus: null,\n    };\n}\n\nfunction initSignUpForm() {\n    return {\n\n    };\n}\n","import initialState from './initialState';\nimport * as actions from \"./../actions/actionTypes\"\n\nexport default function registration(state = initialState.RegistrationForms, { payload, type }) {\n    let newState = JSON.parse(JSON.stringify(state));\n    switch (type) {\n        case actions.ADD_STUDENT_FIELD:\n            newState = addAStudentField(state);\n            return newState;\n        case actions.ADD_COURSE_FIELD:\n            newState = addACourseField(state);\n            return newState;\n        case actions.ADD_FIELD:\n            newState = addField(state, payload);\n            return newState;\n        case actions.REMOVE_FIELD:\n            let path = payload[0];\n            let removeFieldIndex = payload[1];\n            let conditional = payload[2];\n            if(conditional){\n                path.push(conditional);\n            }\n            newState = removeField(state, path, removeFieldIndex, conditional);\n            return newState;\n        case actions.POST_STUDENT_SUCCESSFUL:\n            console.log(\"POSTED STUDENT\", payload);\n            return successSubmit(state);\n        case actions.POST_STUDENT_FAILED:\n            console.error(\"FAILED TO POST STUDENT\", payload);\n            return failedSubmit(state);\n        case actions.POST_PARENT_SUCCESSFUL:\n            console.log(\"POSTED PARENT\", payload);\n            return successSubmit(state);\n        case actions.POST_PARENT_FAILED:\n            console.error(\"FAILED TO POST PARENT\", payload);\n            return failedSubmit(state);\n        case actions.POST_INSTRUCTOR_SUCCESSFUL:\n            console.log(\"POSTED INSTRUCTOR\", payload);\n            return successSubmit(state);\n        case actions.POST_INSTRUCTOR_FAILED:\n            console.error(\"FAILED TO POST INSTRUCTOR\", payload);\n            return failedSubmit(state);\n        case actions.SUBMIT_INITIATED:\n            console.log(\"STARTED SUBMIT\");\n            return onSubmit(state);\n        case actions.RESET_SUBMIT_STATUS:\n            return onSubmit(state);\n        default:\n            return state;\n    }\n}\n\nfunction addAStudentField(prevState) {\n    let SmallGroupList = prevState.registration_form.tutoring[\"Student(s)\"][\"Small Group\"];\n    let NewStudentField = {\n        ...SmallGroupList[0],\n        field: \"Student \" + (SmallGroupList.length + 1).toString() + \" Name\",\n        required: false,\n    };\n    SmallGroupList.push(NewStudentField);\n    prevState.registration_form.tutoring[\"Student(s)\"][\"Small Group\"] = SmallGroupList;\n    return prevState;\n}\n\nfunction addACourseField(prevState) {\n    let NewState = prevState;\n    let CourseFieldList = prevState.registration_form.course[\"Course Selection\"];\n    let NewCourseField = {\n        ...CourseFieldList[0],\n        field: \"Course \" + (CourseFieldList.length + 1).toString() + \" Name\",\n        required: false,\n    }\n    CourseFieldList.push(NewCourseField);\n    NewState.registration_form.course[\"Course Selection\"] = CourseFieldList;\n    return NewState;\n}\n\nconst addField = (prevState, path) => {\n    let NewState = prevState;\n    let fieldIndex = path.pop();\n    let SectionFieldList = getSectionFieldList(path, prevState.registration_form);\n    let fieldName = SectionFieldList[fieldIndex].field;\n    const numFieldType = SectionFieldList.reduce((total, {field}) => total + (field === fieldName), 1);\n    let NewField = {\n        ...SectionFieldList[fieldIndex],\n        name: `${fieldName} ${numFieldType}`,\n        required: false,\n    };\n    SectionFieldList.push(NewField);\n    setSectionFieldList(path, SectionFieldList, prevState.registration_form);\n    return NewState;\n};\n\nfunction removeField(prevState, path, fieldIndex, conditional) {\n    let NewState = prevState;\n    let SectionFieldList =\n        getSectionFieldList(JSON.parse(JSON.stringify(path)), prevState.registration_form);\n\n    if (SectionFieldList.length <= 1) {\n        return prevState;\n    }\n\n    SectionFieldList = SectionFieldList.slice(0, fieldIndex).concat(SectionFieldList.slice(fieldIndex + 1));\n\n    let fieldCounts = {};\n\n    SectionFieldList = SectionFieldList.map((field, i) => {\n        if (!fieldCounts.hasOwnProperty(field.field)) {\n            fieldCounts[field.field] = 1;\n            return {\n                ...field,\n                \"name\": field.field,\n            };\n        }\n\n        fieldCounts[field.field]++;\n        return {\n            ...field,\n            \"name\": `${field.field} ${fieldCounts[field.field]}`,\n        };\n    });\n\n    if (conditional) {\n        NewState[\"registration_form\"][path[0]][path[1]][conditional] = SectionFieldList;\n    } else {\n        NewState[\"registration_form\"][path[0]][path[1]] = SectionFieldList;\n    }\n    return NewState;\n}\n\nfunction getSectionFieldList(path, formList) {\n    if (Array.isArray(path)) {\n        if (path.length === 0) {\n            return formList;\n        }\n        return getSectionFieldList(path, formList[path.shift()])\n    }\n    Error(\"Path variable not an array\");\n}\n\nfunction setSectionFieldList(path, formList, form) {\n    if (Array.isArray(path)) {\n        if (path.length === 0) {\n            form = formList;\n            return;\n        }\n        let firstPathStep = path.shift();\n        return setSectionFieldList(path, formList, form[firstPathStep])\n    }\n    Error(\"Path variable not an array\");\n}\n\nconst onSubmit = (state) => ({\n    ...state,\n    \"submitStatus\": null,\n});\n\nconst successSubmit = (state) => ({\n    ...state,\n    \"submitStatus\": \"success\",\n});\n\nconst failedSubmit = (state) => ({\n    ...state,\n    \"submitStatus\": \"fail\",\n});\n","import * as actions from \"./../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function auth(state = initialState.Authentication, {payload, type}) {\n    switch (type) {\n        case actions.SUCCESSFUL_LOGIN:\n            return onSuccess(state, payload);\n        case actions.FAILED_LOGIN:\n            return onFail(state);\n        case actions.LOGOUT:\n            return onLogout(state);\n        case actions.RESET_ATTEMPT:\n            return resetStatus(state);\n        default:\n            return state;\n    }\n}\n\nconst onSuccess = (state, {data, saveLogin}) => {\n    if (saveLogin) {\n        localStorage.setItem(\"authToken\", data.token);\n    }\n    sessionStorage.setItem(\"authToken\", data.token);\n    return {\n        ...state,\n        \"token\": data.token,\n        \"failedLogin\": false,\n    };\n};\n\nconst onFail = (state) => ({\n    ...state,\n    \"failedLogin\": true,\n});\n\nconst onLogout = (state) => {\n    sessionStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"authToken\");\n    return {\n        ...state,\n        \"token\": null,\n    };\n};\n\nconst resetStatus = (state) => ({\n    ...state,\n    \"failedLogin\": false,\n});\n","import initialState from \"./initialState\";\nimport * as actions from \"./../actions/actionTypes\";\n\nexport default function users(state = initialState.Users, {payload, type}) {\n    switch (type) {\n        case actions.FETCH_STUDENTS_SUCCESSFUL:\n            console.log(\"FETCHED STUDENTS\", payload);\n            return addStudents(state, payload);\n        case actions.FETCH_STUDENTS_FAILED:\n            console.error(\"FAILED TO FETCH STUDENTS\", payload);\n            return state;\n        case actions.FETCH_PARENTS_SUCCESSFUL:\n            console.log(\"FETCHED PARENTS\", payload);\n            return addParents(state, payload);\n        case actions.FETCH_PARENTS_FAILED:\n            console.error(\"FAILED TO FETCH PARENTS\", payload);\n            return state;\n        case actions.FETCH_INSTRUCTORS_SUCCESSFUL:\n            console.log(\"FETCHED INSTRUCTORS\", payload);\n            return addInstructors(state, payload);\n        case actions.FETCH_INSTRUCTORS_FAILED:\n            console.error(\"FAILED TO FETCH INSTRUCTORS\", payload);\n            return state;\n        case actions.FETCH_COURSES_SUCCESSFUL:\n            console.log(\"FETCHED COURSES\", payload);\n            return state;\n        case actions.FETCH_COURSES_FAILED:\n            console.error(\"FAILED TO FETCH COURSES\", payload);\n            return state;\n        case actions.FETCH_CATEGORIES_SUCCESSFUL:\n            console.log(\"FETCHED STUDENTS\", payload);\n            return state;\n        case actions.FETCH_CATEGORIES_FAILED:\n            console.error(\"FAILED TO FETCH CATEGORIES\", payload);\n            return state;\n        default:\n            return state;\n    }\n}\n\nconst parseRelationship = {\n    \"MOTHER\": \"Mother\",\n    \"FATHER\": \"Father\",\n    \"GUARDIAN\": \"Guardian\",\n    \"OTHER\": \"Other\",\n};\n\nconst parseBirthday = (date) => {\n    const [year, month, day] = date.split(\"-\");\n    return `${month}/${day}/${year}`;\n};\n\nconst addStudents = (state, students) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    students.forEach((student) => {\n        newState.StudentList[student.user.id] = {\n            \"user_id\": student.user.id,\n            \"gender\": student.gender,\n            \"birth_date\": parseBirthday(student.birth_date),\n            \"address\": student.address,\n            \"city\": student.city,\n            \"phone_number\": student.phone_number,\n            \"state\": student.state,\n            \"zipcode\": student.zipcode,\n            \"grade\": student.grade,\n            \"age\": student.age,\n            \"school\": student.school,\n            \"first_name\": student.user.first_name,\n            \"last_name\": student.user.last_name,\n            \"name\": `${student.user.first_name} ${student.user.last_name}`,\n            \"email\": student.user.email,\n            \"parent_id\": student.parent,\n            // below is not from database\n            \"role\": \"student\",\n            \"balance\": 0,\n            \"notes\": {},\n        };\n    });\n    return newState;\n};\n\nconst addParents = (state, parents) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    parents.forEach((parent) => {\n        newState.ParentList[parent.user.id] = {\n            \"user_id\": parent.user.id,\n            \"gender\": parent.gender,\n            \"birth_date\": parseBirthday(parent.birth_date),\n            \"address\": parent.address,\n            \"city\": parent.city,\n            \"phone_number\": parent.phone_number,\n            \"state\": parent.state,\n            \"zipcode\": parent.zipcode,\n            \"relationship\": parseRelationship[parent.relationship],\n            \"first_name\": parent.user.first_name,\n            \"last_name\": parent.user.last_name,\n            \"name\": `${parent.user.first_name} ${parent.user.last_name}`,\n            \"email\": parent.user.email,\n            // below is not from database\n            \"role\": \"parent\",\n            \"notes\": {},\n        };\n    });\n    return newState;\n};\n\nconst addInstructors = (state, instructors) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    instructors.forEach((instructor) => {\n        newState.InstructorList[instructor.user.id] = {\n            \"user_id\": instructor.user.id,\n            \"gender\": instructor.gender,\n            \"birth_date\": parseBirthday(instructor.birth_date),\n            \"address\": instructor.address,\n            \"city\": instructor.city,\n            \"phone_number\": instructor.phone_number,\n            \"state\": instructor.state,\n            \"zipcode\": instructor.zipcode,\n            \"age\": instructor.age,\n            \"first_name\": instructor.user.first_name,\n            \"last_name\": instructor.user.last_name,\n            \"name\": `${instructor.user.first_name} ${instructor.user.last_name}`,\n            \"email\": instructor.user.email,\n            // below is not from database\n            \"role\": \"instructor\",\n            \"background\": {\n                \"bio\": \"\",\n                \"experience\": 0,\n                \"subjects\": [],\n                \"languages\": [],\n            },\n            schedule: {\n                work_hours: {\n                    1: {\n                        start: \"T17:00\",\n                        end: \"T20:00\",\n                        title: \"\",\n                    },\n                    2: {\n                        start: \"T17:00\",\n                        end: \"T20:00\",\n                        title: \"\",\n                    },\n                    3: {\n                        start: \"T18:00\",\n                        end: \"T20:00\",\n                        title: \"\",\n                    },\n                    4: {\n                        start: \"T00:00\",\n                        end: \"T00:00\",\n                        title: \"\",\n                    },\n                    5: {\n                        start: \"T16:00\",\n                        end: \"T21:00\",\n                        title: \"\",\n                    },\n                    6: {\n                        start: \"T09:00\",\n                        end: \"T12:00\",\n                        title: \"\",\n                    },\n                },\n                time_off: {\n                    1: {\n                        start: \"2020-01-14T00:00\",\n                        end: \"2020-01-21T00:00\",\n                        title: \"Daniel Time Off\",\n                    },\n                    2: {\n                        start: \"2020-03-22T00:00\",\n                        end: \"2020-03-22T00:00\",\n                        title: \"Daniel Time Off\",\n                    },\n                },\n            },\n            \"notes\": {},\n        };\n    });\n    return newState;\n};\n","import {combineReducers} from \"redux\";\nimport Registration from \"./registrationReducer\";\nimport auth from \"./authReducer\";\nimport Course from \"./courseReducer\";\nimport Users from \"./usersReducer\";\nimport Calender from \"./calenderReducer\";\nimport Enrollments from \"./enrollmentReducer\";\nimport Payments from \"./paymentsReducer\";\n\nconst rootReducer = combineReducers({\n    Registration,\n    auth,\n    Course,\n    Users,\n    Calender,\n    Enrollments,\n    Payments,\n});\n\nexport default rootReducer;\n","import initialState from './initialState';\nimport * as actions from \"./../actions/actionTypes\"\n\nexport default function course(state = initialState.Course, {payload, type}) {\n    let newState;\n    switch (type) {\n        case actions.FETCH_COURSES_SUCCESSFUL:\n            console.log('FETCH_COURSES Action');\n            return state;\n        default:\n            return state;\n    }\n}","import initialState from './initialState';\nimport * as actions from \"../actions/actionTypes\"\n\nexport default function calender(state = initialState.CalenderData, { payload, type, }) {\n    let newState = state;\n\n    switch (type) {\n        case actions.ADD_EVENT:\n            newState.events_in_view.push(payload);\n            return newState;\n\n        case actions.DELETE_EVENT:\n            const removeIndex = newState.events_in_view.map((item) => { return item.id; }).indexOf(payload.id);\n            newState.events_in_view.splice(removeIndex, 1)\n            return newState;\n\n\n        case actions.DELETE_ALL_EVENTS:\n            return state;\n\n\n        case actions.FILTER_EVENT:\n\n\n            const filter_key = payload.key\n            const filter_value = payload.value\n\n\n            // Search by subject\n            newState.events_in_view.filter((allCourse) => {\n                return allCourse[filter_key] === filter_value\n            })\n                .map((finalResult) => {\n                    return {\n                        ...finalResult\n                    }\n                })\n\n\n            return newState;\n\n        default:\n            return newState;\n    }\n}","import initialState from './initialState';\nimport * as actions from \"./../actions/actionTypes\"\n\nexport default function course(state = initialState.Enrollments, {payload, type}) {\n    let newState;\n    switch (type) {\n        case actions.FETCH_COURSES_SUCCESSFUL:\n            console.log('FETCH_COURSES Action');\n            return state;\n        default:\n            return state;\n    }\n}","import initialState from './initialState';\nimport * as actions from \"./../actions/actionTypes\"\n\nexport default function course(state = initialState.Payments, {payload, type}) {\n    let newState;\n    switch (type) {\n        case actions.FETCH_COURSES_SUCCESSFUL:\n            console.log('FETCH_COURSES Action');\n            return state;\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Provider from \"react-redux/es/components/Provider\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/rootReducer.js';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}