{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport deepmerge from 'deepmerge'; // < 1kb payload overhead when lodash/merge is > 3kb.\n\nimport isPlainObject from 'is-plain-object';\nimport warning from 'warning';\nimport createBreakpoints from './createBreakpoints';\nimport createMixins from './createMixins';\nimport createPalette from './createPalette';\nimport createTypography from './createTypography';\nimport shadows from './shadows';\nimport shape from './shape';\nimport defaultSpacing from './spacing';\nimport transitions from './transitions';\nimport zIndex from './zIndex';\n\nfunction createMuiTheme(options = {}) {\n  const _options$breakpoints = options.breakpoints,\n        breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints,\n        _options$mixins = options.mixins,\n        mixinsInput = _options$mixins === void 0 ? {} : _options$mixins,\n        _options$palette = options.palette,\n        paletteInput = _options$palette === void 0 ? {} : _options$palette,\n        shadowsInput = options.shadows,\n        _options$spacing = options.spacing,\n        spacingInput = _options$spacing === void 0 ? {} : _options$spacing,\n        _options$typography = options.typography,\n        typographyInput = _options$typography === void 0 ? {} : _options$typography,\n        other = _objectWithoutPropertiesLoose(options, [\"breakpoints\", \"mixins\", \"palette\", \"shadows\", \"spacing\", \"typography\"]);\n\n  const palette = createPalette(paletteInput);\n  const breakpoints = createBreakpoints(breakpointsInput);\n\n  const spacing = _extends({}, defaultSpacing, spacingInput);\n\n  const muiTheme = _extends({\n    breakpoints,\n    direction: 'ltr',\n    mixins: createMixins(breakpoints, spacing, mixinsInput),\n    overrides: {},\n    // Inject custom styles\n    palette,\n    props: {},\n    // Inject custom properties\n    shadows: shadowsInput || shadows,\n    typography: createTypography(palette, typographyInput)\n  }, deepmerge({\n    shape,\n    spacing,\n    transitions,\n    zIndex\n  }, other, {\n    isMergeableObject: isPlainObject\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    const statesWarning = ['disabled', 'focused', 'selected', 'checked'];\n\n    const traverse = (node, parentKey, depth = 1) => {\n      let key; // eslint-disable-next-line guard-for-in, no-restricted-syntax\n\n      for (key in node) {\n        const child = node[key];\n\n        if (depth === 1) {\n          if (key.indexOf('Mui') === 0 && child) {\n            traverse(child, key, depth + 1);\n          }\n        } else if (statesWarning.indexOf(key) !== -1 && Object.keys(child).length > 0) {\n          process.env.NODE_ENV !== \"production\" ? warning(false, [\"Material-UI: the `\".concat(parentKey, \"` component increases \") + \"the CSS specificity of the `\".concat(key, \"` internal state.\"), 'You can not override it like this: ', JSON.stringify(node, null, 2), '', 'Instead, you need to use the $ruleName syntax:', JSON.stringify({\n            [\"&$\".concat(key)]: child\n          }, null, 2), '', 'https://material-ui.com/customization/overrides#internal-states'].join('\\n')) : void 0;\n        }\n      }\n    };\n\n    traverse(other.overrides);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(muiTheme.shadows.length === 25, 'Material-UI: the shadows array provided to createMuiTheme should support 25 elevations.') : void 0;\n  return muiTheme;\n}\n\nexport default createMuiTheme;","map":null,"metadata":{},"sourceType":"module"}