{"ast":null,"code":"var _jsxFileName = \"/Users/4e65696c/Documents/GitHub/front-end/src/components/BackButton.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport BackArrow from \"@material-ui/icons/ArrowBack\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { Typography } from \"@material-ui/core\";\n\nclass BackButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: false\n    };\n  }\n\n  handleClick() {\n    if (this.props.warn) {\n      this.setState({\n        alert: true\n      });\n    } else {\n      this.goBack();\n    }\n  }\n\n  hideWarning() {\n    this.setState({\n      alert: false\n    });\n  }\n\n  goBack() {\n    // only call user defined function from parent component if defined\n    this.props.onBack && this.props.onBack();\n    this.props.history.goBack();\n  }\n\n  saveForm() {//enter future code to save form\n  }\n\n  confirmAction(actionName) {\n    //actionName is a string\n    switch (actionName) {\n      case \"saveForm\":\n        this.saveForm();\n        break;\n\n      default:\n        console.warn(\"Unhandled backbutton action \".concat(actionName));\n    }\n\n    this.goBack();\n  }\n\n  denyAction(actionName) {\n    // switch(actionName){\n    //future switch statement for denyAction functions\n    // }\n    this.goBack();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      className: \"control course button\",\n      onClick: this.handleClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(BackArrow, {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Back\")), React.createElement(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: this.state.alert,\n      onClick: this.hideWarning.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"exit-popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      id: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.props.alertMessage || \"Are you sure you want to leave unsaved changes?\"), React.createElement(Button, {\n      onClick: e => {\n        e.preventDefault();\n        this.denyAction.bind(this)(this.props.denyAction);\n      },\n      color: \"secondary\",\n      className: \"button secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.alertDenyText || \"No, leave me here\"), React.createElement(Button, {\n      onClick: e => {\n        e.preventDefault();\n        this.confirmAction.bind(this)(this.props.confirmAction);\n      },\n      color: \"primary\",\n      className: \"button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.props.alertConfirmText || \"Yes, take me back\"))));\n  }\n\n}\n\nBackButton.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  alertConfirmText: PropTypes.string,\n  onBack: PropTypes.func,\n  alertMessage: PropTypes.string,\n  warn: PropTypes.bool,\n  alertDenyText: PropTypes.string,\n  alertConfirmAction: PropTypes.string,\n  alertDenyAction: PropTypes.string\n};\nexport default withRouter(BackButton);","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/src/components/BackButton.js"],"names":["React","Component","withRouter","PropTypes","BackArrow","Modal","Button","Typography","BackButton","constructor","props","state","alert","handleClick","warn","setState","goBack","hideWarning","onBack","history","saveForm","confirmAction","actionName","console","denyAction","render","bind","alertMessage","e","preventDefault","alertDenyText","alertConfirmText","propTypes","shape","func","isRequired","string","bool","alertConfirmAction","alertDenyAction"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport BackArrow from \"@material-ui/icons/ArrowBack\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { Typography } from \"@material-ui/core\";\n\nclass BackButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            alert: false,\n        };\n    }\n\n    handleClick() {\n        if (this.props.warn) {\n            this.setState({\n                alert: true,\n            });\n        } else {\n            this.goBack();\n        }\n    }\n\n    hideWarning() {\n        this.setState({\n            alert: false,\n        });\n    }\n\n    goBack() {\n        // only call user defined function from parent component if defined\n        this.props.onBack && this.props.onBack();\n        this.props.history.goBack();\n    }\n\n    saveForm() {\n        //enter future code to save form\n    }\n\n    confirmAction(actionName) {\n        //actionName is a string\n        switch (actionName) {\n            case \"saveForm\":\n                this.saveForm();\n                break;\n            default:\n                console.warn(`Unhandled backbutton action ${actionName}`)\n        }\n        this.goBack();\n    }\n\n    denyAction(actionName) {\n        // switch(actionName){\n        //future switch statement for denyAction functions\n        // }\n        this.goBack();\n    }\n\n    render() {\n        return (\n            <>\n                <Button className=\"control course button\"\n                    onClick={this.handleClick.bind(this)}\n                >\n                    <BackArrow className=\"icon\" />\n                    <span className=\"label\">Back</span>\n                </Button>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.alert}\n                    onClick={this.hideWarning.bind(this)}>\n                    <div className=\"exit-popup\">\n                        <Typography variant=\"h6\" id=\"modal-title\">\n                            {this.props.alertMessage || \"Are you sure you want to leave unsaved changes?\"}\n                        </Typography>\n                        <Button\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.denyAction.bind(this)(this.props.denyAction)\n                            }}\n                            color=\"secondary\"\n                            className=\"button secondary\">\n                            {this.props.alertDenyText || \"No, leave me here\"}\n                        </Button>\n                        <Button\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.confirmAction.bind(this)(this.props.confirmAction)\n                            }}\n                            color=\"primary\"\n                            className=\"button primary\">\n                            {this.props.alertConfirmText || \"Yes, take me back\"}\n                        </Button>\n                    </div>\n                </Modal>\n            </>\n        );\n    }\n}\n\nBackButton.propTypes = {\n    history: PropTypes.shape({\n        goBack: PropTypes.func.isRequired,\n    }).isRequired,\n    alertConfirmText: PropTypes.string,\n    onBack: PropTypes.func,\n    alertMessage: PropTypes.string,\n    warn: PropTypes.bool,\n    alertDenyText: PropTypes.string,\n    alertConfirmAction: PropTypes.string,\n    alertDenyAction: PropTypes.string,\n};\n\nexport default withRouter(BackButton);\n"]},"metadata":{},"sourceType":"module"}