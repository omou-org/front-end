{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/Notes.js\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { withRouter } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/CheckCircleOutlined\";\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n      alert: false\n    };\n  }\n\n  componentWillMount() {\n    //TODO: notes in descending order\n    this.setState(() => {\n      let notes = Object.keys(this.props.user_notes).map(noteID => {\n        return this.props.user_notes[noteID];\n      });\n      return {\n        notes: notes\n      };\n    });\n  }\n\n  hideWarning() {\n    this.setState({\n      alert: false\n    });\n  }\n\n  confirmAction(actionName) {\n    //actionName is a string\n    switch (actionName) {\n      case \"saveForm\":\n        this.saveForm();\n        break;\n\n      default:\n        console.warn(\"Unhandled backbutton action \".concat(actionName));\n    }\n\n    this.goBack();\n  }\n\n  denyAction(actionName) {\n    // switch(actionName){\n    //future switch statement for denyAction functions\n    // }\n    this.goBack();\n  }\n\n  goBack() {\n    // only call user defined function from parent component if defined\n    this.props.onBack && this.props.onBack();\n    this.props.history.goBack();\n  }\n\n  handleClick() {\n    if (this.props.warn) {\n      this.setState({\n        alert: true\n      });\n    } else {\n      this.goBack();\n    }\n  }\n\n  renderPopUp() {\n    return React.createElement(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: this.state.alert,\n      onClick: this.hideWarning.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"exit-popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      id: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.props.alertMessage || \"Are you sure you want to leave unsaved changes?\"), React.createElement(Button, {\n      onClick: e => {\n        e.preventDefault();\n        this.denyAction.bind(this)(this.props.denyAction);\n      },\n      color: \"secondary\",\n      className: \"button secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.alertDenyText || \"No, leave me here\"), React.createElement(Button, {\n      onClick: e => {\n        e.preventDefault();\n        this.confirmAction.bind(this)(this.props.confirmAction);\n      },\n      color: \"primary\",\n      className: \"button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.alertConfirmText || \"Yes, take me back\")));\n  }\n\n  render() {\n    console.log(this.state.notes);\n    let iconStyle = {\n      fontSize: \"16px\",\n      align: \"right\"\n    };\n\n    let numericDateString = date => {\n      let DateObject = new Date(date),\n          numericOptions = {\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      };\n      return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n    };\n\n    return React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addNote\",\n      onClick: () => {\n        this.renderPopUp();\n      },\n      style: {\n        \"cursor\": \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), \"Add Note\"))), this.state.notes.map((note, i) => {\n      return React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"body\",\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, note.body), React.createElement(Typography, {\n        className: \"date\",\n        style: {\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, numericDateString(note.timestamp).replace(\",\", \"ãƒ»\")), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(DoneIcon, {\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))));\n    })));\n  }\n\n}\n\nNotes.propTypes = {\n  user_notes: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default withRouter(mapStateToProps, mapDispatchToProps)(Notes);","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/Notes.js"],"names":["connect","PropTypes","React","Component","Grid","withRouter","Typography","Paper","Modal","Button","EditIcon","DoneIcon","AddIcon","Notes","constructor","props","state","notes","alert","componentWillMount","setState","Object","keys","user_notes","map","noteID","hideWarning","confirmAction","actionName","saveForm","console","warn","goBack","denyAction","onBack","history","handleClick","renderPopUp","bind","alertMessage","e","preventDefault","alertDenyText","alertConfirmText","render","log","iconStyle","fontSize","align","numericDateString","date","DateObject","Date","numericOptions","month","day","hour","minute","toLocaleTimeString","note","i","body","fontWeight","timestamp","replace","propTypes","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { withRouter } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/CheckCircleOutlined\";\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\n\nclass Notes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: [],\n            alert: false,\n        };\n    }\n\n    componentWillMount() {\n        //TODO: notes in descending order\n        this.setState(() => {\n            let notes = Object.keys(this.props.user_notes).map((noteID) => {\n                return this.props.user_notes[noteID];\n            });\n            return {\n                notes: notes,\n            }\n        });\n    }\n\n    hideWarning() {\n        this.setState({\n            alert: false,\n        });\n    }\n\n    confirmAction(actionName) {\n        //actionName is a string\n        switch (actionName) {\n            case \"saveForm\":\n                this.saveForm();\n                break;\n            default:\n                console.warn(`Unhandled backbutton action ${actionName}`)\n        }\n        this.goBack();\n    }\n\n    denyAction(actionName) {\n        // switch(actionName){\n        //future switch statement for denyAction functions\n        // }\n        this.goBack();\n    }\n\n    goBack() {\n        // only call user defined function from parent component if defined\n        this.props.onBack && this.props.onBack();\n        this.props.history.goBack();\n    }\n\n    handleClick() {\n        if (this.props.warn) {\n            this.setState({\n                alert: true,\n            });\n        } else {\n            this.goBack();\n        }\n    }\n\n    renderPopUp(){\n        return(\n             <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.alert}\n                    onClick={this.hideWarning.bind(this)}>\n                    <div className=\"exit-popup\">\n                        <Typography variant=\"h6\" id=\"modal-title\">\n                            {this.props.alertMessage || \"Are you sure you want to leave unsaved changes?\"}\n                        </Typography>\n                        <Button\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.denyAction.bind(this)(this.props.denyAction)\n                            }}\n                            color=\"secondary\"\n                            className=\"button secondary\">\n                            {this.props.alertDenyText || \"No, leave me here\"}\n                        </Button>\n                        <Button\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.confirmAction.bind(this)(this.props.confirmAction)\n                            }}\n                            color=\"primary\"\n                            className=\"button primary\">\n                            {this.props.alertConfirmText || \"Yes, take me back\"}\n                        </Button>\n                    </div>\n                </Modal>);\n    }\n\n    render() {\n        console.log(this.state.notes);\n        let iconStyle = {\n            fontSize: \"16px\",\n            align: \"right\"\n        }\n        let numericDateString = (date) => {\n            let DateObject = new Date(date),\n                numericOptions = {\n                    month: \"numeric\",\n                    day: \"numeric\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                };\n            return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n        };\n        return (<Grid item md={12}>\n            <Grid container spacing={16}>\n                <Grid item md={3}>\n                    <div className=\"addNote\"\n                    onClick={() => {\n                        this.renderPopUp();\n                    }}\n                    style={{\n                        \"cursor\": \"pointer\",\n                    }}>\n                        <Typography className=\"center\">\n                            <AddIcon/>\n                            <br/>\n                            Add Note\n                        </Typography>\n                    </div>\n                </Grid>\n                {this.state.notes.map((note, i) => {\n                    return <Grid item xs={3} key={i}>\n                        <Paper className={\"note\"}>\n                            <Typography className={\"body\"} align={'left'}>\n                                {note.body}\n                            </Typography>\n                            <Typography className={\"date\"} style={{ fontWeight: \"500\" }}>\n                                {numericDateString(note.timestamp).replace(\",\", \"ãƒ»\")}\n                            </Typography>\n                            <div className={\"actions\"}>\n                                <EditIcon style={iconStyle} />\n                                <DoneIcon style={iconStyle} />\n                            </div>\n                        </Paper>\n                    </Grid>\n                })}\n            </Grid>\n        </Grid>)\n    }\n\n}\n\nNotes.propTypes = {\n    user_notes: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default withRouter(\n    mapStateToProps,\n    mapDispatchToProps\n)(Notes);"]},"metadata":{},"sourceType":"module"}