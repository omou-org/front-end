{"ast":null,"code":"var _jsxFileName = \"/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/components/FeatureViews/Scheduler/SessionView.js\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as calenderActions from '../../../actions/calenderActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport BackButton from \"../../BackButton.js\";\nimport SessionActions from \"./SessionActions\";\nimport '../../../theme/theme.scss';\nimport './scheduler.scss';\nimport { NavLink } from \"react-router-dom\"; // import TimeSelector from \"../../Form/TimeSelector\";\n//Material UI Imports\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Divider, LinearProgress, Typography, ListItem, RadioGroup } from \"@material-ui/core\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport NewCourse from \"@material-ui/icons/CalendarToday\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport UpdateTeacher from \"@material-ui/icons/PersonAdd\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayRounded\";\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from \"@material-ui/core/Button\";\n\nclass SessionView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.formatDate = (start, end) => {\n      const DayConverter = {\n        1: \"Monday\",\n        2: \"Tuesday\",\n        3: \"Wednesday\",\n        4: \"Thursday\",\n        5: \"Friday\",\n        6: \"Saturday\"\n      };\n      const MonthConverter = {\n        0: \"January\",\n        1: \"February\",\n        2: \"March\",\n        3: \"April\",\n        4: \"May\",\n        5: \"June\",\n        6: \"July\",\n        7: \"August\",\n        8: \"September\",\n        9: \"October\",\n        10: \"November\",\n        11: \"December\"\n      };\n      const date = new Date(start);\n      const dateNumber = date.getDate();\n      const dayOfWeek = date.getDay();\n      const startMonth = date.getMonth(); // Gets days\n\n      let Days = DayConverter[dayOfWeek]; //Gets months\n\n      const Month = MonthConverter[startMonth]; //Start times and end times variable \n\n      let startTime = start.slice(11);\n      let endTime = end.slice(11); // Converts 24hr to 12 hr time \n\n      this.timeConverter = time => {\n        let Hour = +time.substr(0, 2);\n        let to12HourTime = Hour % 12 || 12;\n        let ampm = Hour < 12 ? \"a\" : \"p\";\n        time = to12HourTime + time.substr(2, 3) + ampm;\n        return time;\n      };\n\n      let finalTime = \"\".concat(Days, \", \").concat(Month, \" \").concat(dateNumber, \" at \").concat(this.timeConverter(startTime), \" - \").concat(this.timeConverter(endTime));\n      return finalTime;\n    };\n\n    this.state = {\n      open: false,\n      current: \"current\",\n      all: \"all\"\n    };\n  }\n\n  componentWillMount() {\n    this.setState(() => {\n      const computedMatches = this.props.computedMatch.params.course_id;\n      const sessionMatches = this.props.computedMatch.params.session_id;\n      let sessionData = this.props.courseSessions[computedMatches][sessionMatches];\n      let courseData = this.props.courses[computedMatches];\n      const instructor = this.props.instructors[courseData.instructor_id];\n      return {\n        sessionData,\n        courseData,\n        instructor\n      };\n    });\n  } // Formatting the date in the view\n\n\n  render() {\n    return React.createElement(Grid, {\n      className: 'main-session-view',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: 'paper',\n      mt: \"2em\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      className: 'session-button',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(BackButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      className: 'session-view',\n      ml: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: 'session-view-title',\n      align: 'left',\n      variant: 'h3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.courseData.title)), React.createElement(Grid, {\n      container: true,\n      className: \"session-view-details\",\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      style: {\n        \"paddingTop\": \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Subject\"), React.createElement(Typography, {\n      varient: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.courseData.subject)), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      lg: 3,\n      style: {\n        \"paddingTop\": \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Date & Time\"), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.formatDate(this.state.sessionData.start, this.state.sessionData.end))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        \"paddingTop\": \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Teacher\"), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.state.instructor.name)), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      style: {\n        \"paddingTop\": \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Typography, {\n      variant: \"body1\",\n      style: {\n        width: \"75%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.state.courseData.description)))), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      className: \"session-detail-action-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Button, {\n      to: \"/\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Edit Session\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleOpen,\n      variant: \"outlined\",\n      color: \"secondary\",\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Delete\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Button, {\n      component: NavLink,\n      to: \"/scheduler\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Return to scheduling\")))), React.createElement(Dialog, {\n      maxWidth: 'xs',\n      fullWidth: true,\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      className: \"session-view-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(RadioGroup, {\n      \"aria-label\": \"delete\",\n      name: \"delete\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      value: \"current\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }),\n      label: \"This Session\",\n      labelPlacement: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"all\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }),\n      label: \"All Sessions\",\n      labelPlacement: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Apply\"))));\n  }\n\n}\n\nSessionView.propTypes = {\n  sessionView: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n  return {\n    courses: state.Course[\"NewCourseList\"],\n    courseCategories: state.Course[\"CourseCategories\"],\n    students: state.Users[\"StudentList\"],\n    instructors: state.Users[\"InstructorList\"],\n    courseSessions: state.Course[\"CourseSessions\"]\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    calenderActions: bindActionCreators(calenderActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionView);","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/components/FeatureViews/Scheduler/SessionView.js"],"names":["connect","bindActionCreators","calenderActions","PropTypes","React","Component","BackButton","SessionActions","NavLink","Grid","Paper","Divider","LinearProgress","Typography","ListItem","RadioGroup","FormControlLabel","Radio","FormControl","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","NewCourse","AssignmentIcon","UpdateTeacher","EditIcon","CalendarIcon","List","ListItemText","Button","SessionView","constructor","props","handleOpen","setState","open","handleClose","formatDate","start","end","DayConverter","MonthConverter","date","Date","dateNumber","getDate","dayOfWeek","getDay","startMonth","getMonth","Days","Month","startTime","slice","endTime","timeConverter","time","Hour","substr","to12HourTime","ampm","finalTime","state","current","all","componentWillMount","computedMatches","computedMatch","params","course_id","sessionMatches","session_id","sessionData","courseSessions","courseData","courses","instructor","instructors","instructor_id","render","title","subject","name","width","description","handleChange","propTypes","sessionView","string","mapStateToProps","Course","courseCategories","students","Users","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as calenderActions from '../../../actions/calenderActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport BackButton from \"../../BackButton.js\";\nimport SessionActions from \"./SessionActions\";\nimport '../../../theme/theme.scss';\nimport './scheduler.scss'\nimport { NavLink } from \"react-router-dom\";\n// import TimeSelector from \"../../Form/TimeSelector\";\n\n//Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { Divider, LinearProgress, Typography, ListItem, RadioGroup } from \"@material-ui/core\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport FormControl from \"@material-ui/core/FormControl\"\n\n\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nimport NewCourse from \"@material-ui/icons/CalendarToday\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport UpdateTeacher from \"@material-ui/icons/PersonAdd\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayRounded\";\n\nimport List from '@material-ui/core/List'\nimport ListItemText from '@material-ui/core/ListItemText'\n\n\nimport Button from \"@material-ui/core/Button\";\n\nclass SessionView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            current: \"current\",\n            all: \"all\",\n\n        }\n    }\n\n\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n\n\n    componentWillMount() {\n\n        this.setState(() => {\n\n            const computedMatches = this.props.computedMatch.params.course_id\n            const sessionMatches = this.props.computedMatch.params.session_id\n\n            let sessionData = this.props.courseSessions[computedMatches][sessionMatches]\n            let courseData = this.props.courses[computedMatches]\n            const instructor = this.props.instructors[courseData.instructor_id];\n\n            return {\n                sessionData,\n                courseData,\n                instructor,\n            }\n        })\n    }\n\n\n\n    // Formatting the date in the view\n    formatDate = (start, end) => {\n        const DayConverter = {\n            1: \"Monday\",\n            2: \"Tuesday\",\n            3: \"Wednesday\",\n            4: \"Thursday\",\n            5: \"Friday\",\n            6: \"Saturday\",\n        };\n        const MonthConverter = {\n            0: \"January\",\n            1: \"February\",\n            2: \"March\",\n            3: \"April\",\n            4: \"May\",\n            5: \"June\",\n            6: \"July\",\n            7: \"August\",\n            8: \"September\",\n            9: \"October\",\n            10: \"November\",\n            11: \"December\"\n        }\n\n        const date = new Date(start)\n        const dateNumber = date.getDate()\n        const dayOfWeek = date.getDay()\n        const startMonth = date.getMonth()\n        // Gets days\n        let Days = DayConverter[dayOfWeek]\n\n        //Gets months\n        const Month = MonthConverter[startMonth]\n\n        //Start times and end times variable \n        let startTime = start.slice(11)\n        let endTime = end.slice(11)\n\n        // Converts 24hr to 12 hr time \n        this.timeConverter = (time) => {\n\n            let Hour = +time.substr(0, 2);\n            let to12HourTime = (Hour % 12) || 12;\n            let ampm = Hour < 12 ? \"a\" : \"p\";\n            time = to12HourTime + time.substr(2, 3) + ampm;\n            return time\n\n        }\n\n        let finalTime = `${Days}, ${Month} ${dateNumber} at ${this.timeConverter(startTime)} - ${this.timeConverter(endTime)}`\n\n        return finalTime\n\n    }\n\n\n    render() {\n\n        return (\n\n            <Grid className={'main-session-view'}>\n                <Paper className={'paper'} mt={\"2em\"} >\n                    <Grid item className={'session-button'}>\n                        <BackButton />\n                    </Grid>\n                    <Divider />\n\n                    <Grid container className={'session-view'} ml={10}>\n                        <Grid item xs={12}>\n                            <Typography\n                                className={'session-view-title'}\n                                align={'left'}\n                                variant={'h3'}>\n                                {this.state.courseData.title}\n                            </Typography>\n                        </Grid>\n                        <Grid\n                            container\n                            className={\"session-view-details\"}\n                            align={'left'} >\n                            <Grid\n                                item xs={4}\n                                style={{ \"paddingTop\": \"1%\" }}>\n                                <Typography\n                                    variant=\"h5\">\n                                    Subject\n                                    </Typography>\n                                <Typography\n                                    varient=\"body1\">\n                                    {this.state.courseData.subject}\n                                </Typography>\n                            </Grid>\n                            <Grid\n                                item xs={6}\n                                lg={3}\n                                style={{ \"paddingTop\": \"1%\" }}>\n                                <Typography\n                                    variant=\"h5\">\n                                    Date & Time\n                                 </Typography>\n                                <Typography\n                                    variant=\"body1\">\n                                    {this.formatDate(this.state.sessionData.start, this.state.sessionData.end)}\n                                </Typography>\n                            </Grid>\n                            <Grid\n                                item xs={12}\n                                style={{ \"paddingTop\": \"1%\" }}>\n                                <Typography\n                                    variant=\"h5\">\n                                    Teacher\n                                    </Typography>\n                                <Typography\n                                    variant=\"body1\">\n                                    {this.state.instructor.name}\n                                </Typography>\n                            </Grid>\n                            <Grid\n                                item xs={10}\n                                style={{ \"paddingTop\": \"1%\" }}>\n                                <Typography\n                                    variant=\"h5\">\n                                    Description\n                                     </Typography>\n                                <Typography\n                                    variant=\"body1\"\n                                    style={{ width: \"75%\" }} >\n                                    {this.state.courseData.description}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container\n                        direction=\"row\"\n                        justify=\"flex-end\"\n                        className=\"session-detail-action-control\"\n                    >\n                        <Grid item>\n                            <Button\n                                to=\"/\"\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className=\"button\">\n                                Edit Session\n                            </Button>\n                        </Grid>\n                        <Grid item >\n                            <Button\n                                onClick={this.handleOpen}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className=\"button\">\n                                Delete\n                            </Button>\n                        </Grid>\n                        <Grid item >\n                            <Button\n                                component={NavLink} to=\"/scheduler\"\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className=\"button\">\n                                Return to scheduling\n                            </Button>\n                        </Grid>\n                    </Grid>\n\n                </Paper>\n\n\n\n                <Dialog\n                    maxWidth={'xs'}\n                    fullWidth={true}\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    className=\"session-view-modal\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Delete</DialogTitle>\n                    <Divider />\n                    <DialogContent>\n                        <RadioGroup\n                            aria-label=\"delete\"\n                            name=\"delete\"\n                            onChange={this.handleChange}\n                        >\n                            <FormControlLabel\n                                value=\"current\"\n                                control={<Radio color=\"primary\" />}\n                                label=\"This Session\"\n                                labelPlacement=\"end\"\n                            />\n                            <FormControlLabel\n                                value=\"all\"\n                                control={<Radio color=\"primary\" />}\n                                label=\"All Sessions\"\n                                labelPlacement=\"end\"\n                            />\n                        </RadioGroup>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            onClick={this.handleClose}\n                            color=\"primary\">\n                            Cancel\n                            </Button>\n                        <Button\n                            onClick={this.handleClose}\n                            color=\"primary\">\n                            Apply\n                            </Button>\n                    </DialogActions>\n                </Dialog>\n            </Grid>\n\n        )\n\n    }\n}\n\nSessionView.propTypes = {\n    sessionView: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course[\"NewCourseList\"],\n        courseCategories: state.Course[\"CourseCategories\"],\n        students: state.Users[\"StudentList\"],\n        instructors: state.Users[\"InstructorList\"],\n        courseSessions: state.Course[\"CourseSessions\"],\n\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        calenderActions: bindActionCreators(calenderActions, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SessionView);"]},"metadata":{},"sourceType":"module"}