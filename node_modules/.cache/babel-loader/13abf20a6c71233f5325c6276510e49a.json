{"ast":null,"code":"import _objectSpread from \"/Users/js/Desktop/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Scheduler/Scheduler.js\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes, { bool } from 'prop-types';\nimport React, { Component } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listViewPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\nimport * as calenderActions from '../../../actions/calenderActions'; // Material-Ui dependencies\n\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftOutlinedIcon from '@material-ui/icons/ChevronLeftOutlined';\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\nimport Paper from \"@material-ui/core/Paper\";\nimport DateRangeOutlinedIcon from '@material-ui/icons/DateRangeOutlined';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport SearchIcon from '@material-ui/icons/Search'; // Tool tip dependencies \n\nimport tippy from 'tippy.js';\nimport 'tippy.js/themes/google.css';\nimport './scheduler.scss';\n\nclass Scheduler extends Component {\n  constructor(props) {\n    super(props);\n    this.calendarComponentRef = React.createRef();\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.changeView = value => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.changeView(value);\n      let date = this.currentDate();\n      this.setState({\n        viewValue: value,\n        currentDate: date\n      });\n    };\n\n    this.goToNext = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.next();\n      let date = this.currentDate();\n      this.setState({\n        currentDate: date\n      });\n    };\n\n    this.goToPrev = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.prev();\n      let date = this.currentDate();\n      this.setState({\n        currentDate: date\n      });\n    };\n\n    this.today = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.today();\n      this.currentDate();\n    };\n\n    this.currentDate = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      const date = calendarApi.view.title;\n      return date;\n    };\n\n    this.changeViewToResource = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.changeView('resourceTimeline');\n      this.currentDate();\n      this.setState({\n        resourceIcon: true,\n        calendarIcon: false,\n        calendarResources: this.getRoomResources()\n      });\n    };\n\n    this.changeViewToCalendar = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.changeView('dayGridMonth');\n      this.currentDate();\n      this.setState({\n        calendarIcon: true,\n        resourceIcon: false\n      });\n    };\n\n    this.getEvents = () => {\n      let courseKeys = Object.keys(this.props.sessions);\n      let instructorKeys = Object.keys(this.props.instructors); // creates an array from courseKeys [0,1,2,3,...,10]\n\n      let sessionsInViewList = courseKeys.map(courseKey => {\n        // course will get each session and map with courseKey\n        let course = this.props.sessions[courseKey]; // gets the keys to each session that was mapped \n\n        let courseSessionKeys = Object.keys(course); // creates an array that maps through courseSessionKey \n\n        let courseSessions = courseSessionKeys.map(sessionKey => {\n          // sessions = sessions from initial state\n          // courseKey is the key value from inital state\n          // sessionKey is the variable named inside the map, this is mapping over each coursekey\n          // session is the matched pairs of course and session objects \n          let session = this.props.sessions[courseKey][sessionKey];\n          session[\"title\"] = this.props.courses[session.course_id].title;\n          session[\"description\"] = this.props.courses[session.course_id].description;\n          session['type'] = this.props.courses[session.course_id].type;\n          session['resourceId'] = this.props.courses[session.course_id].room_id;\n          return session;\n        });\n        return courseSessions;\n      });\n      let sessionsInView = [];\n      sessionsInViewList.forEach(sessionsList => {\n        sessionsInView = sessionsInView.concat(sessionsList);\n      });\n      let sessionsInViewWithUrl = sessionsInView.map(el => {\n        const newSessions = Object.assign({}, el);\n        newSessions.url = \"http:/scheduler/view-session/\".concat(newSessions.course_id, \"/\").concat(newSessions.session_id);\n        return newSessions;\n      });\n      return sessionsInViewWithUrl;\n    };\n\n    this.handleFilterChange = name => event => {\n      console.log(event);\n      this.setState(_objectSpread({}, this.state, {\n        [name]: event.target.value\n      }));\n      this.filterEvent(event.target.value);\n    };\n\n    this.filterEvent = type => {\n      // Grabs the array of objects to filter \n      const items = this.getEvents();\n      const newEvents = items.filter(item => item.type == type);\n      this.setState(prevState => ({\n        calendarEvents: prevState.calendarEvents = newEvents\n      }));\n    };\n\n    this.handleResourceFilterChange = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        [name]: event.target.value\n      }));\n\n      if (event.target.value === \"R\") {\n        let rooms = this.getRoomResources();\n        this.setState(prevState => ({\n          calendarResources: rooms\n        }));\n        console.log(rooms);\n      } else {\n        let instructors = this.getInstructorResources();\n        console.log(instructors);\n        this.setState(prevState => ({\n          calendarResources: instructors\n        }));\n      }\n    };\n\n    this.getRoomResources = () => {\n      let courses = Object.values(this.props.courses);\n      let resourceList = courses.map(course => {\n        return {\n          \"id\": course.course_id,\n          \"title\": \"Room \".concat(course.room_id)\n        };\n      });\n      return resourceList;\n    };\n\n    this.getInstructorResources = () => {\n      let instructor = Object.values(this.props.instructors);\n      let instructorList = instructor.map(inst => {\n        console.log(inst);\n        return {\n          \"id\": inst.user_id,\n          'title': inst.name\n        };\n      });\n      return instructorList;\n    };\n\n    this.state = {\n      calendarWeekends: true,\n      calendarResources: [],\n      calendarEvents: [],\n      currentDate: \"\",\n      viewValue: '',\n      filterValue: \"C\",\n      resourceFilterValue: \"R\",\n      calendarIcon: true,\n      resourceIcon: false\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      calendarEvents: this.getEvents()\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentDate: this.currentDate()\n    });\n  } // The eventRender function handles the tooltip\n\n\n  handleToolTip(info) {\n    function truncate(string) {\n      let numberOfCharRemoved = 88;\n      if (string.length > numberOfCharRemoved) return string.substring(0, numberOfCharRemoved) + '...';else return string;\n    }\n\n    ;\n    new tippy(info.el, {\n      content: \"\\n            <div class=\\\"toolTip\\\">\\n            <div class='title'><h3> \".concat(info.event.title, \" </h3></div>\\n            <div class=\\\"container\\\">\\n            <div class='clock'><span class='clock_icon'>  \").concat(new Date(info.event.start).toDateString().slice(0, 10), \"</span></div>   \\n            <span> \\n            \").concat(info.event.extendedProps.type, \"\\n            </span>\\n            <div class='pin_icon'><span class=''>Room # \").concat(info.event.extendedProps.room_id, \"</span></div> \\n            <div class='teacher_icon'><span class=''>\").concat(info.event.extendedProps.instructor ? info.event.extendedProps.instructor : \"No teacher Yet\", \"</span></div> \\n            <div class='discription_icon'><span class='description-text'>\").concat(truncate(info.event.extendedProps.description), \"</span></div> \\n            </div>\\n        </div>\\n            \"),\n      theme: \"light\",\n      placement: 'right',\n      interactive: true\n    });\n  } // Full Calendar API used to change calendar views \n\n\n  render() {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"demo-app-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h3\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Scheduler\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      className: \"scheduler-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: this.state.calendarIcon ? \"primary\" : \"\",\n      onClick: this.changeViewToCalendar,\n      className: 'calendar-icon',\n      \"aria-label\": \"next-month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(DateRangeOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: this.state.resourceIcon ? \"primary\" : \"\",\n      onClick: this.changeViewToResource,\n      className: 'resource-icon',\n      \"aria-label\": \"next-month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(ViewListIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.goToNext,\n      className: 'next-month',\n      \"aria-label\": \"next-month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      md: 1,\n      lg: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, this.state.calendarIcon ? React.createElement(FormControl, {\n      className: 'filter-select',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"filter-class-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), React.createElement(Select, {\n      native: true,\n      value: this.state.filterValue,\n      onChange: this.handleFilterChange('filterValue'),\n      inputProps: {\n        name: 'filterValue',\n        id: 'filter-class-type'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Class\"), React.createElement(\"option\", {\n      value: \"T\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Tutor\"))) : React.createElement(FormControl, {\n      className: 'filter-select',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"filter-resource-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), React.createElement(Select, {\n      native: true,\n      value: this.state.resourceFilterValue,\n      onChange: this.handleResourceFilterChange('resourceFilterValue'),\n      inputProps: {\n        name: 'resourceFilterValue',\n        id: 'filter-resource-type'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"R\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Room\"), React.createElement(\"option\", {\n      value: \"I\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Instructors\")))), React.createElement(Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.goToPrev,\n      className: 'prev-month',\n      \"aria-label\": \"prev-month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(ChevronLeftOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: 'h6',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"  \", this.state.currentDate, \" \")), React.createElement(Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.goToNext,\n      className: 'next-month',\n      \"aria-label\": \"next-month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(ChevronRightOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      md: 2,\n      lg: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: 'change-view',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"change-view-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), React.createElement(Select, {\n      native: true,\n      value: this.state.viewValue,\n      onChange: event => this.changeView(event.target.value),\n      inputProps: {\n        name: 'viewValue',\n        id: 'change-view-select'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"timeGridDay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"option\", {\n      value: \"dayGridWeek\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Week\"), React.createElement(\"option\", {\n      value: \"dayGridMonth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"Month\")))), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.changeViewToCalendar();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"Calendar\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.changeViewToResource();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \"Resource\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }), React.createElement(FullCalendar, {\n      defaultView: \"timeGridDay\",\n      header: false,\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listViewPlugin, resourceTimelinePlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      displayEventTime: true,\n      eventColor: \"none\",\n      eventSources: [{\n        events: this.state.calendarEvents,\n        color: '#6FB87B'\n      }],\n      timeZone: 'local',\n      eventMouseEnter: this.handleToolTip,\n      eventLimit: 4,\n      nowIndicator: true,\n      resourceOrder: 'title',\n      resourceAreaWidth: '20%',\n      resources: this.state.calendarResources,\n      schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nScheduler.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    courses: state.Course.NewCourseList,\n    sessions: state.Course.CourseSessions,\n    instructors: state.Users.InstructorList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    calenderActions: bindActionCreators(calenderActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Scheduler);","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Scheduler/Scheduler.js"],"names":["connect","bindActionCreators","PropTypes","bool","React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","listViewPlugin","interactionPlugin","resourceTimelinePlugin","calenderActions","Button","makeStyles","Typography","Grid","FormControl","Select","InputLabel","IconButton","ChevronLeftOutlinedIcon","ChevronRightOutlinedIcon","Paper","DateRangeOutlinedIcon","ViewListIcon","SearchIcon","tippy","Scheduler","constructor","props","calendarComponentRef","createRef","toggleWeekends","setState","calendarWeekends","state","changeView","value","calendarApi","current","getApi","date","currentDate","viewValue","goToNext","next","goToPrev","prev","today","view","title","changeViewToResource","resourceIcon","calendarIcon","calendarResources","getRoomResources","changeViewToCalendar","getEvents","courseKeys","Object","keys","sessions","instructorKeys","instructors","sessionsInViewList","map","courseKey","course","courseSessionKeys","courseSessions","sessionKey","session","courses","course_id","description","type","room_id","sessionsInView","forEach","sessionsList","concat","sessionsInViewWithUrl","el","newSessions","assign","url","session_id","handleFilterChange","name","event","console","log","target","filterEvent","items","newEvents","filter","item","prevState","calendarEvents","handleResourceFilterChange","rooms","getInstructorResources","values","resourceList","instructor","instructorList","inst","user_id","filterValue","resourceFilterValue","componentWillMount","componentDidMount","handleToolTip","info","truncate","string","numberOfCharRemoved","length","substring","content","Date","start","toDateString","slice","extendedProps","theme","placement","interactive","render","id","events","color","propTypes","mapStateToProps","Course","NewCourseList","CourseSessions","Users","InstructorList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes, { bool } from 'prop-types';\nimport React, { Component } from 'react';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listViewPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction'\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\n\nimport * as calenderActions from '../../../actions/calenderActions';\n\n// Material-Ui dependencies\n\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ChevronLeftOutlinedIcon from '@material-ui/icons/ChevronLeftOutlined';\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\nimport Paper from \"@material-ui/core/Paper\";\nimport DateRangeOutlinedIcon from '@material-ui/icons/DateRangeOutlined';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport SearchIcon from '@material-ui/icons/Search';\n\n// Tool tip dependencies \nimport tippy from 'tippy.js'\nimport 'tippy.js/themes/google.css'\nimport './scheduler.scss'\n\n\n\n\nclass Scheduler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            calendarWeekends: true,\n            calendarResources: [],\n            calendarEvents: [],\n            currentDate: \"\",\n            viewValue: '',\n            filterValue: \"C\",\n            resourceFilterValue: \"R\",\n            calendarIcon: true,\n            resourceIcon: false,\n\n        };\n\n    }\n\n    calendarComponentRef = React.createRef();\n\n    componentWillMount() {\n        this.setState({\n            calendarEvents: this.getEvents(),\n        })\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            currentDate: this.currentDate()\n        })\n\n    }\n\n    // The eventRender function handles the tooltip\n    handleToolTip(info) {\n        function truncate(string) {\n            let numberOfCharRemoved = 88\n            if (string.length > numberOfCharRemoved)\n                return string.substring(0, numberOfCharRemoved) + '...';\n            else\n                return string;\n        };\n\n\n\n        new tippy(info.el, {\n            content: `\n            <div class=\"toolTip\">\n            <div class='title'><h3> ${info.event.title} </h3></div>\n            <div class=\"container\">\n            <div class='clock'><span class='clock_icon'>  ${ new Date(info.event.start).toDateString().slice(0, 10)}</span></div>   \n            <span> \n            ${info.event.extendedProps.type}\n            </span>\n            <div class='pin_icon'><span class=''>Room # ${info.event.extendedProps.room_id}</span></div> \n            <div class='teacher_icon'><span class=''>${info.event.extendedProps.instructor ? info.event.extendedProps.instructor : \"No teacher Yet\"}</span></div> \n            <div class='discription_icon'><span class='description-text'>${truncate(info.event.extendedProps.description)}</span></div> \n            </div>\n        </div>\n            `,\n            theme: \"light\",\n            placement: 'right',\n            interactive: true,\n        })\n    }\n\n\n    // Full Calendar API used to change calendar views \n    toggleWeekends = () => {\n        this.setState({ // update a property\n            calendarWeekends: !this.state.calendarWeekends\n        })\n    };\n\n    // Change from day,week, and month views\n    changeView = (value) => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.changeView(value)\n        let date = this.currentDate()\n        this.setState({\n            viewValue: value,\n            currentDate: date\n        })\n    }\n\n    goToNext = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n\n        calendarApi.next()\n        let date = this.currentDate();\n        this.setState({\n            currentDate: date\n        })\n    }\n\n    goToPrev = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.prev()\n        let date = this.currentDate();\n        this.setState({\n            currentDate: date\n        })\n    }\n\n    today = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.today()\n        this.currentDate()\n    }\n\n    currentDate = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        const date = calendarApi.view.title\n        return date\n    }\n\n    // This function changes the resouce view when click as well as change the color of the icon \n    changeViewToResource = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.changeView('resourceTimeline');\n        this.currentDate()\n        this.setState({\n            resourceIcon: true,\n            calendarIcon: false,\n            calendarResources: this.getRoomResources(),\n        })\n\n    }\n\n    changeViewToCalendar = () => {\n        let calendarApi = this.calendarComponentRef.current.getApi()\n        calendarApi.changeView('dayGridMonth');\n        this.currentDate()\n        this.setState({\n            calendarIcon: true,\n            resourceIcon: false\n        })\n    }\n\n    // Function to parse the inital state into data that full calendar could\n    getEvents = () => {\n        let courseKeys = Object.keys(this.props.sessions);\n        let instructorKeys = Object.keys(this.props.instructors)\n\n\n        // creates an array from courseKeys [0,1,2,3,...,10]\n        let sessionsInViewList = courseKeys.map((courseKey) => {\n            // course will get each session and map with courseKey\n            let course = this.props.sessions[courseKey];\n            // gets the keys to each session that was mapped \n            let courseSessionKeys = Object.keys(course);\n            // creates an array that maps through courseSessionKey \n            let courseSessions = courseSessionKeys.map((sessionKey) => {\n                // sessions = sessions from initial state\n                // courseKey is the key value from inital state\n                // sessionKey is the variable named inside the map, this is mapping over each coursekey\n                // session is the matched pairs of course and session objects \n                let session = this.props.sessions[courseKey][sessionKey];\n\n                session[\"title\"] = this.props.courses[session.course_id].title;\n                session[\"description\"] = this.props.courses[session.course_id].description;\n                session['type'] = this.props.courses[session.course_id].type;\n                session['resourceId'] = this.props.courses[session.course_id].room_id;\n\n                return session;\n\n            })\n            return courseSessions;\n        })\n\n        let sessionsInView = [];\n        sessionsInViewList.forEach((sessionsList) => {\n            sessionsInView = sessionsInView.concat(sessionsList);\n        })\n\n        let sessionsInViewWithUrl = sessionsInView.map((el) => {\n            const newSessions = Object.assign({}, el);\n            newSessions.url = `http:/scheduler/view-session/${newSessions.course_id}/${newSessions.session_id}`\n            return newSessions\n        })\n\n        return sessionsInViewWithUrl\n\n    }\n    // This function is used in material-ui for the eventhandler\n    handleFilterChange = (name) => event => {\n        console.log(event)\n        this.setState({\n            ...this.state,\n            [name]: event.target.value\n        })\n        this.filterEvent(event.target.value)\n    }\n\n    // This will filter out event based on type\n    filterEvent = (type) => {\n        // Grabs the array of objects to filter \n        const items = this.getEvents();\n        const newEvents = items.filter(item => item.type == type);\n        this.setState(prevState => (\n            {\n                calendarEvents: prevState.calendarEvents = newEvents\n            }))\n    }\n\n    handleResourceFilterChange = (name) => event => {\n        this.setState({\n            ...this.state,\n            [name]: event.target.value\n        })\n        if (event.target.value === \"R\") {\n            let rooms = this.getRoomResources()\n            this.setState(prevState => (\n                {\n                    calendarResources: rooms\n                }\n            ))\n            console.log(rooms)\n        } else {\n            let instructors = this.getInstructorResources()\n            console.log(instructors)\n            this.setState(prevState => (\n                {\n                    calendarResources: instructors\n                }\n            ))\n        }\n    }\n\n\n    // gets the values of course object \n    getRoomResources = () => {\n        let courses = Object.values(this.props.courses);\n        let resourceList = courses.map((course) => {\n            return {\n                \"id\": course.course_id,\n                \"title\": `Room ${course.room_id}`,\n\n            }\n        });\n\n        return resourceList\n    }\n\n    // gets values of instructors and places them in the resource col\n    getInstructorResources = () => {\n        let instructor = Object.values(this.props.instructors)\n        let instructorList = instructor.map((inst) => {\n            console.log(inst)\n            return {\n                \"id\": inst.user_id,\n                'title': inst.name\n            }\n\n        })\n\n        return instructorList\n    }\n\n\n\n\n    render() {\n        return (\n            <Grid >\n                <Paper className=\"paper\">\n                    <div className='demo-app-calendar'>\n                        <Typography variant=\"h3\" align=\"left\">Scheduler</Typography>\n                        <br />\n                        <Grid container\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            className=\"scheduler-header\"\n                        >\n                            <Grid item  >\n                                <IconButton color={this.state.calendarIcon ? \"primary\" : \"\"} onClick={this.changeViewToCalendar} className={'calendar-icon'} aria-label='next-month'>\n                                    <DateRangeOutlinedIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item  >\n                                <IconButton color={this.state.resourceIcon ? \"primary\" : \"\"} onClick={this.changeViewToResource} className={'resource-icon'} aria-label='next-month'>\n                                    <ViewListIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item  >\n                                <IconButton onClick={this.goToNext} className={'next-month'} aria-label='next-month'>\n                                    <SearchIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item md={1} lg={1}>\n                                {(this.state.calendarIcon) ?\n                                    <FormControl className={'filter-select'}>\n                                        <InputLabel htmlFor=\"filter-class-type\"></InputLabel>\n\n                                        <Select\n                                            native\n                                            value={this.state.filterValue}\n                                            onChange={this.handleFilterChange('filterValue')}\n                                            inputProps={{\n                                                name: 'filterValue',\n                                                id: 'filter-class-type',\n                                            }}\n                                        >\n                                            <option value={\"C\"}>Class</option>\n                                            <option value={\"T\"}>Tutor</option>\n                                        </Select>\n                                    </FormControl>\n                                    :\n                                    <FormControl className={'filter-select'}>\n                                        <InputLabel htmlFor=\"filter-resource-type\"></InputLabel>\n\n                                        <Select\n                                            native\n                                            value={this.state.resourceFilterValue}\n                                            onChange={this.handleResourceFilterChange('resourceFilterValue')}\n                                            inputProps={{\n                                                name: 'resourceFilterValue',\n                                                id: 'filter-resource-type',\n                                            }}\n                                        >\n                                            <option value={\"R\"}>Room</option>\n                                            <option value={\"I\"}>Instructors</option>\n                                        </Select>\n                                    </FormControl>\n                                }\n\n                            </Grid>\n                            <Grid item lg={1} md={1}>\n                                <IconButton onClick={this.goToPrev} className={'prev-month'} aria-label=\"prev-month\">\n                                    <ChevronLeftOutlinedIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item lg={3} md={2}>\n                                <Typography variant={'h6'}>  {this.state.currentDate} </Typography>\n                            </Grid>\n                            <Grid item lg={1} md={1} >\n                                <IconButton onClick={this.goToNext} className={'next-month'} aria-label='next-month'>\n                                    <ChevronRightOutlinedIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item md={2} lg={1}>\n                                <FormControl className={'change-view'}>\n                                    <InputLabel htmlFor=\"change-view-select\"></InputLabel>\n                                    <Select\n                                        native\n                                        value={this.state.viewValue}\n                                        onChange={(event) => this.changeView(event.target.value)}\n                                        inputProps={{\n                                            name: 'viewValue',\n                                            id: 'change-view-select'\n                                        }}\n                                    >\n                                        <option value={\"timeGridDay\"}>Day</option>\n                                        <option value={\"dayGridWeek\"}>Week</option>\n                                        <option value={\"dayGridMonth\"}>Month</option>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={() => { this.changeViewToCalendar() }}\n                                >Calendar</Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={() => { this.changeViewToResource() }}\n                                >Resource</Button>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <FullCalendar\n                            defaultView=\"timeGridDay\"\n                            header={false}\n                            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listViewPlugin, resourceTimelinePlugin]}\n                            ref={this.calendarComponentRef}\n                            weekends={this.state.calendarWeekends}\n                            displayEventTime={true}\n                            eventColor={\"none\"}\n                            eventSources={[\n                                { events: this.state.calendarEvents, color: '#6FB87B' }\n                            ]}\n\n                            timeZone={'local'}\n                            eventMouseEnter={this.handleToolTip}\n                            eventLimit={4}\n                            nowIndicator={true}\n                            resourceOrder={'title'}\n                            resourceAreaWidth={'20%'}\n                            resources={this.state.calendarResources}\n                            schedulerLicenseKey={'GPL-My-Project-Is-Open-Source'}\n                        />\n                    </div>\n                </Paper >\n            </Grid >\n        )\n    }\n}\n\nScheduler.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course.NewCourseList,\n        sessions: state.Course.CourseSessions,\n        instructors: state.Users.InstructorList\n\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        calenderActions: bindActionCreators(calenderActions, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Scheduler);\n"]},"metadata":{},"sourceType":"module"}