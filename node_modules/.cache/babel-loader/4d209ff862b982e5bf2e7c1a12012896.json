{"ast":null,"code":"var _jsxFileName = \"/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/components/FeatureViews/Accounts/TabComponents/Bio.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from '@material-ui/core/Typography';\n\nclass Bio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(Card, {\n      className: \"Bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Bio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      class: \"bioHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(Typography, {\n      className: \"bioBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.props.background.bio))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"BioBackground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Bio2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: \"rowPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: \"bioDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Experience:\"), React.createElement(Grid, {\n      className: \"chipPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      label: this.props.background.experience + \" years at Summit\",\n      className: \"bioChip\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      className: \"rowPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: \"bioDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Subjects offered:\"), this.props.background.subjects.map(subjects => {\n      return React.createElement(Grid, {\n        className: \"chipPadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Chip, {\n        label: subjects,\n        className: \"bioChip\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    })), React.createElement(Grid, {\n      container: true,\n      className: \"rowPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: \"bioDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Language:\"), this.props.background.languages.map(languages => {\n      return React.createElement(Grid, {\n        className: \"chipPadding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Chip, {\n        label: languages,\n        className: \"bioChip\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    })))))))));\n  }\n\n}\n\nBio.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bio);","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/components/FeatureViews/Accounts/TabComponents/Bio.js"],"names":["connect","React","Component","Grid","Card","Chip","Typography","Bio","constructor","props","state","render","background","bio","experience","subjects","map","languages","propTypes","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from '@material-ui/core/Typography';\n\nclass Bio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        return (\n            <Card className={\"Bio\"}>\n                <Grid item xs={12}>\n                    <Grid container>\n                        <Grid item xs={6} >\n                            <div className=\"Bio\">\n                                <Typography class=\"bioHeader\">\n                                    Bio\n                                    </Typography>\n                                <Typography className=\"bioBody\">\n                                    {this.props.background.bio}\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className=\"BioBackground\">\n                                <div className=\"Bio2\">\n                                    <Grid>\n                                        <Grid container className=\"rowPadding\">\n                                            <Grid className=\"bioDescription\">\n                                                Experience:\n                                        </Grid>\n                                            <Grid className=\"chipPadding\">\n                                                <Chip\n                                                    label={this.props.background.experience + \" years at Summit\"}\n                                                    className=\"bioChip\"\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container className=\"rowPadding\">\n                                            <Grid className=\"bioDescription\">\n                                                Subjects offered:\n                                        </Grid>\n                                            {this.props.background.subjects.map((subjects) => {\n                                                return (\n                                                    <Grid className=\"chipPadding\">\n                                                        <Chip\n                                                            label={subjects} className=\"bioChip\"\n                                                            variant=\"outlined\"\n                                                        />\n                                                    </Grid>)\n                                            })}\n                                        </Grid>\n                                        <Grid container className=\"rowPadding\">\n                                            <Grid className=\"bioDescription\">\n                                                Language:\n                                        </Grid>\n                                            {this.props.background.languages.map((languages) => {\n                                                return (\n                                                    <Grid className=\"chipPadding\">\n                                                        <Chip \n                                                            label={languages}\n                                                            className=\"bioChip\"\n                                                            variant=\"outlined\"\n                                                        />\n                                                    </Grid>)\n                                            })}\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Card>)\n    }\n\n}\n\nBio.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Bio);"]},"metadata":{},"sourceType":"module"}