{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport axios from \"axios\";\nexport const login = (email, password, savePassword) => async dispatch => {\n  // request starting\n  dispatch({\n    \"type\": types.LOGIN_STARTED\n  });\n\n  try {\n    const response = await axios.post(\"/auth_token/\", {\n      \"username\": email,\n      password\n    }, {\n      \"baseURL\": \"http://localhost:8000\"\n    }); // succesful request\n\n    dispatch({\n      \"type\": types.LOGIN_SUCCESSFUL,\n      \"payload\": {\n        response,\n        savePassword\n      }\n    });\n  } catch (error) {\n    // failed request\n    dispatch({\n      \"type\": types.LOGIN_FAILED,\n      \"payload\": error\n    });\n  }\n};\nexport const logout = () => ({\n  \"type\": types.LOGOUT\n});\nexport const resetAttemptStatus = () => ({\n  \"type\": types.RESET_ATTEMPT\n});","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/actions/authActions.js"],"names":["types","axios","login","email","password","savePassword","dispatch","LOGIN_STARTED","response","post","LOGIN_SUCCESSFUL","error","LOGIN_FAILED","logout","LOGOUT","resetAttemptStatus","RESET_ATTEMPT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,YAAlB,KAAmC,MAAOC,QAAP,IAAoB;AACxE;AACAA,EAAAA,QAAQ,CAAC;AAAC,YAAQN,KAAK,CAACO;AAAf,GAAD,CAAR;;AAEA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CACvBQ,IADkB,CACb,cADa,EACG;AAClB,kBAAYN,KADM;AAElBC,MAAAA;AAFkB,KADH,EAIhB;AACC,iBAAW;AADZ,KAJgB,CAAvB,CADA,CAQA;;AACAE,IAAAA,QAAQ,CAAC;AACL,cAAQN,KAAK,CAACU,gBADT;AAEL,iBAAW;AACPF,QAAAA,QADO;AAEPH,QAAAA;AAFO;AAFN,KAAD,CAAR;AAOH,GAhBD,CAgBE,OAAOM,KAAP,EAAc;AACZ;AACAL,IAAAA,QAAQ,CAAC;AACL,cAAQN,KAAK,CAACY,YADT;AAEL,iBAAWD;AAFN,KAAD,CAAR;AAIH;AACJ,CA3BM;AA6BP,OAAO,MAAME,MAAM,GAAG,OAAO;AAAC,UAAQb,KAAK,CAACc;AAAf,CAAP,CAAf;AAEP,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AAAC,UAAQf,KAAK,CAACgB;AAAf,CAAP,CAA3B","sourcesContent":["import * as types from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const login = (email, password, savePassword) => async (dispatch) => {\n    // request starting\n    dispatch({\"type\": types.LOGIN_STARTED});\n\n    try {\n        const response = await axios\n            .post(\"/auth_token/\", {\n                \"username\": email,\n                password,\n            }, {\n                \"baseURL\": \"http://localhost:8000\",\n            });\n        // succesful request\n        dispatch({\n            \"type\": types.LOGIN_SUCCESSFUL,\n            \"payload\": {\n                response,\n                savePassword,\n            },\n        });\n    } catch (error) {\n        // failed request\n        dispatch({\n            \"type\": types.LOGIN_FAILED,\n            \"payload\": error,\n        });\n    }\n};\n\nexport const logout = () => ({\"type\": types.LOGOUT});\n\nexport const resetAttemptStatus = () => ({\"type\": types.RESET_ATTEMPT});\n"]},"metadata":{},"sourceType":"module"}