{"ast":null,"code":"import _objectSpread from \"/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport initialState from './initialState';\nimport * as actions from \"../actions/actionTypes\";\nexport default function calender(state = initialState.CalenderData, {\n  payload,\n  type\n}) {\n  let newState = state;\n\n  switch (type) {\n    case actions.ADD_EVENT:\n      newState.events_in_view.push(payload);\n      return newState;\n\n    case actions.DELETE_EVENT:\n      const removeIndex = newState.events_in_view.map(item => {\n        return item.id;\n      }).indexOf(payload.id);\n      newState.events_in_view.splice(removeIndex, 1);\n      return newState;\n\n    case actions.DELETE_ALL_EVENTS:\n      return state;\n\n    case actions.FILTER_EVENT:\n      const filter_key = payload.key;\n      const filter_value = payload.value; // Search by subject\n\n      newState.events_in_view.filter(allCourse => {\n        return allCourse[filter_key] === filter_value;\n      }).map(finalResult => {\n        return _objectSpread({}, finalResult);\n      });\n      return newState;\n\n    default:\n      return newState;\n  }\n}","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/reducers/calenderReducer.js"],"names":["initialState","actions","calender","state","CalenderData","payload","type","newState","ADD_EVENT","events_in_view","push","DELETE_EVENT","removeIndex","map","item","id","indexOf","splice","DELETE_ALL_EVENTS","FILTER_EVENT","filter_key","key","filter_value","value","filter","allCourse","finalResult"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAK,GAAGH,YAAY,CAACI,YAAvC,EAAqD;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAArD,EAAyE;AACpF,MAAIC,QAAQ,GAAGJ,KAAf;;AAEA,UAAQG,IAAR;AACI,SAAKL,OAAO,CAACO,SAAb;AACID,MAAAA,QAAQ,CAACE,cAAT,CAAwBC,IAAxB,CAA6BL,OAA7B;AACA,aAAOE,QAAP;;AAEJ,SAAKN,OAAO,CAACU,YAAb;AACI,YAAMC,WAAW,GAAGL,QAAQ,CAACE,cAAT,CAAwBI,GAAxB,CAA6BC,IAAD,IAAU;AAAE,eAAOA,IAAI,CAACC,EAAZ;AAAiB,OAAzD,EAA2DC,OAA3D,CAAmEX,OAAO,CAACU,EAA3E,CAApB;AACAR,MAAAA,QAAQ,CAACE,cAAT,CAAwBQ,MAAxB,CAA+BL,WAA/B,EAA4C,CAA5C;AACA,aAAOL,QAAP;;AAGJ,SAAKN,OAAO,CAACiB,iBAAb;AACI,aAAOf,KAAP;;AAGJ,SAAKF,OAAO,CAACkB,YAAb;AAGI,YAAMC,UAAU,GAAGf,OAAO,CAACgB,GAA3B;AACA,YAAMC,YAAY,GAAGjB,OAAO,CAACkB,KAA7B,CAJJ,CAOI;;AACAhB,MAAAA,QAAQ,CAACE,cAAT,CAAwBe,MAAxB,CAAgCC,SAAD,IAAe;AAC1C,eAAOA,SAAS,CAACL,UAAD,CAAT,KAA0BE,YAAjC;AACH,OAFD,EAGKT,GAHL,CAGUa,WAAD,IAAiB;AAClB,iCACOA,WADP;AAGH,OAPL;AAUA,aAAOnB,QAAP;;AAEJ;AACI,aAAOA,QAAP;AApCR;AAsCH","sourcesContent":["import initialState from './initialState';\nimport * as actions from \"../actions/actionTypes\"\n\nexport default function calender(state = initialState.CalenderData, { payload, type, }) {\n    let newState = state;\n\n    switch (type) {\n        case actions.ADD_EVENT:\n            newState.events_in_view.push(payload);\n            return newState;\n\n        case actions.DELETE_EVENT:\n            const removeIndex = newState.events_in_view.map((item) => { return item.id; }).indexOf(payload.id);\n            newState.events_in_view.splice(removeIndex, 1)\n            return newState;\n\n\n        case actions.DELETE_ALL_EVENTS:\n            return state;\n\n\n        case actions.FILTER_EVENT:\n\n\n            const filter_key = payload.key\n            const filter_value = payload.value\n\n\n            // Search by subject\n            newState.events_in_view.filter((allCourse) => {\n                return allCourse[filter_key] === filter_value\n            })\n                .map((finalResult) => {\n                    return {\n                        ...finalResult\n                    }\n                })\n\n\n            return newState;\n\n        default:\n            return newState;\n    }\n}"]},"metadata":{},"sourceType":"module"}