{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport axios from \"axios\";\nexport const login = (email, password, saveLogin) => dispatch => axios.post(\"http://localhost:8000/auth_token/\", {\n  username: email,\n  password\n}).then(({\n  data\n}) => {\n  dispatch({\n    type: types.SUCCESSFUL_LOGIN,\n    payload: {\n      saveLogin,\n      data\n    }\n  });\n}).catch(error => {\n  dispatch({\n    type: types.FAILED_LOGIN,\n    payload: error\n  });\n});\nexport const logout = () => ({\n  type: types.LOGOUT\n});\nexport const resetAttemptStatus = () => ({\n  type: types.RESET_ATTEMPT\n});","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/actions/authActions.js"],"names":["types","axios","login","email","password","saveLogin","dispatch","post","username","then","data","type","SUCCESSFUL_LOGIN","payload","catch","error","FAILED_LOGIN","logout","LOGOUT","resetAttemptStatus","RESET_ATTEMPT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,SAAlB,KAChBC,QAAD,IAAcL,KAAK,CAACM,IAAN,CAAW,mCAAX,EAAgD;AAC1DC,EAAAA,QAAQ,EAAEL,KADgD;AAE1DC,EAAAA;AAF0D,CAAhD,EAITK,IAJS,CAIJ,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACdJ,EAAAA,QAAQ,CAAC;AACLK,IAAAA,IAAI,EAAEX,KAAK,CAACY,gBADP;AAELC,IAAAA,OAAO,EAAE;AACLR,MAAAA,SADK;AAELK,MAAAA;AAFK;AAFJ,GAAD,CAAR;AAOH,CAZS,EAaTI,KAbS,CAaFC,KAAD,IAAW;AACdT,EAAAA,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAEX,KAAK,CAACgB,YAAb;AAA2BH,IAAAA,OAAO,EAAEE;AAApC,GAAD,CAAR;AACH,CAfS,CADX;AAkBP,OAAO,MAAME,MAAM,GAAG,OAAO;AAACN,EAAAA,IAAI,EAAEX,KAAK,CAACkB;AAAb,CAAP,CAAf;AAEP,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AAACR,EAAAA,IAAI,EAAEX,KAAK,CAACoB;AAAb,CAAP,CAA3B","sourcesContent":["import * as types from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const login = (email, password, saveLogin) =>\n    (dispatch) => axios.post(\"http://localhost:8000/auth_token/\", {\n        username: email,\n        password,\n    })\n        .then(({data}) => {\n            dispatch({\n                type: types.SUCCESSFUL_LOGIN,\n                payload: {\n                    saveLogin,\n                    data,\n                },\n            });\n        })\n        .catch((error) => {\n            dispatch({type: types.FAILED_LOGIN, payload: error});\n        });\n\nexport const logout = () => ({type: types.LOGOUT});\n\nexport const resetAttemptStatus = () => ({type: types.RESET_ATTEMPT});\n"]},"metadata":{},"sourceType":"module"}