{"ast":null,"code":"import _slicedToArray from \"/Users/4e65696c/Documents/GitHub/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as types from \"./actionTypes\";\nimport { submitParentAndStudent, postData, patchData } from \"./rootActions\";\nconst parseGender = {\n  \"Male\": \"M\",\n  \"Female\": \"F\",\n  \"Do not disclose\": \"U\"\n};\n\nconst parseBirthday = date => {\n  const _date$split = date.split(\"/\"),\n        _date$split2 = _slicedToArray(_date$split, 3),\n        month = _date$split2[0],\n        day = _date$split2[1],\n        year = _date$split2[2];\n\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n};\n\nexport const getRegistrationForm = () => ({\n  type: types.ALERT,\n  payload: \"alert stuff\"\n});\nexport const addStudentField = () => ({\n  type: types.ADD_STUDENT_FIELD,\n  payload: \"\"\n});\nexport const addCourseField = () => ({\n  type: types.ADD_COURSE_FIELD,\n  payload: \"\"\n});\nexport const addField = path => ({\n  type: types.ADD_FIELD,\n  payload: path\n});\nexport const removeField = (path, fieldIndex, conditional) => ({\n  type: types.REMOVE_FIELD,\n  payload: [path, fieldIndex, conditional]\n});\nexport const submitForm = (state, id) => {\n  switch (state.form) {\n    case \"student\":\n      {\n        const student = {\n          \"user\": {\n            \"first_name\": state[\"Basic Information\"][\"Student First Name\"],\n            \"last_name\": state[\"Basic Information\"][\"Student Last Name\"],\n            \"email\": state[\"Basic Information\"][\"Student Email\"],\n            \"password\": \"password123\"\n          },\n          \"gender\": parseGender[state[\"Basic Information\"][\"Gender\"]],\n          \"address\": state[\"Parent Information\"][\"Address\"],\n          \"city\": state[\"Parent Information\"][\"City\"],\n          \"phone_number\": state[\"Basic Information\"][\"Student Phone Number\"] || null,\n          \"state\": state[\"Parent Information\"][\"State\"],\n          \"zipcode\": state[\"Parent Information\"][\"Zip Code\"],\n          \"grade\": state[\"Basic Information\"][\"Grade\"],\n          \"age\": state[\"Basic Information\"][\"Age\"],\n          \"school\": state[\"Basic Information\"][\"School\"],\n          \"birth_date\": \"2019-01-01\"\n        };\n        const parent = {\n          \"user\": {\n            \"email\": state[\"Parent Information\"][\"Parent Email\"],\n            \"password\": \"password123\",\n            \"first_name\": state[\"Parent Information\"][\"Parent First Name\"],\n            \"last_name\": state[\"Parent Information\"][\"Parent Last Name\"]\n          },\n          \"gender\": parseGender[state[\"Parent Information\"][\"Gender\"]],\n          \"address\": state[\"Parent Information\"][\"Address\"],\n          \"city\": state[\"Parent Information\"][\"City\"],\n          \"state\": state[\"Parent Information\"][\"State\"],\n          \"phone_number\": state[\"Parent Information\"][\"Phone Number\"] || null,\n          \"zipcode\": state[\"Parent Information\"][\"Zip Code\"],\n          \"relationship\": state[\"Parent Information\"][\"Relationship to Student\"].toUpperCase(),\n          \"birth_date\": \"2019-01-01\"\n        };\n        const selectedParent = state[\"Parent Information\"][\"Select Parent\"];\n        return submitParentAndStudent(parent, student, selectedParent ? selectedParent.value : null, id);\n      }\n\n    case \"instructor\":\n      {\n        const instructor = {\n          \"user\": {\n            \"email\": state[\"Basic Information\"][\"E-Mail\"],\n            \"password\": \"password123\",\n            \"first_name\": state[\"Basic Information\"][\"First Name\"],\n            \"last_name\": state[\"Basic Information\"][\"Last Name\"]\n          },\n          \"gender\": parseGender[state[\"Basic Information\"][\"Gender\"]],\n          \"address\": state[\"Basic Information\"][\"Address\"],\n          \"city\": state[\"Basic Information\"][\"City\"],\n          \"state\": \"CA\",\n          \"phone_number\": state[\"Basic Information\"][\"Phone Number\"],\n          \"zipcode\": state[\"Basic Information\"][\"Zip Code\"],\n          \"age\": 21,\n          \"birth_date\": parseBirthday(state[\"Basic Information\"][\"Date of Birth\"])\n        };\n\n        if (id) {\n          return patchData(\"instructor\", instructor, id);\n        } else {\n          return postData(\"instructor\", instructor);\n        }\n      }\n\n    default:\n      console.error(\"Invalid form type \".concat(state.form));\n  }\n};\nexport const resetSubmitStatus = () => ({\n  type: types.RESET_SUBMIT_STATUS,\n  payload: null\n});","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/src/actions/registrationActions.js"],"names":["types","submitParentAndStudent","postData","patchData","parseGender","parseBirthday","date","split","month","day","year","getRegistrationForm","type","ALERT","payload","addStudentField","ADD_STUDENT_FIELD","addCourseField","ADD_COURSE_FIELD","addField","path","ADD_FIELD","removeField","fieldIndex","conditional","REMOVE_FIELD","submitForm","state","id","form","student","parent","toUpperCase","selectedParent","value","instructor","console","error","resetSubmitStatus","RESET_SUBMIT_STATUS"],"mappings":"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","sourcesContent":["import * as types from \"./actionTypes\";\nimport {submitParentAndStudent, postData, patchData} from \"./rootActions\";\n\nconst parseGender = {\n    \"Male\": \"M\",\n    \"Female\": \"F\",\n    \"Do not disclose\": \"U\",\n};\n\nconst parseBirthday = (date) => {\n    const [month, day, year] = date.split(\"/\");\n    return `${year}-${month}-${day}`;\n};\n\nexport const getRegistrationForm = () =>\n    ({type: types.ALERT, payload: \"alert stuff\"});\n\nexport const addStudentField = () =>\n    ({type: types.ADD_STUDENT_FIELD, payload: \"\"});\n\nexport const addCourseField = () =>\n    ({type: types.ADD_COURSE_FIELD, payload: \"\"});\n\nexport const addField = (path) =>\n    ({type: types.ADD_FIELD, payload: path});\n\nexport const removeField = (path, fieldIndex, conditional) =>\n    ({type: types.REMOVE_FIELD, payload: [path, fieldIndex, conditional]});\n\nexport const submitForm = (state, id) => {\n    switch (state.form) {\n        case \"student\": {\n            const student = {\n                \"user\": {\n                    \"first_name\":\n                        state[\"Basic Information\"][\"Student First Name\"],\n                    \"last_name\":\n                        state[\"Basic Information\"][\"Student Last Name\"],\n                    \"email\": state[\"Basic Information\"][\"Student Email\"],\n                    \"password\": \"password123\",\n                },\n                \"gender\":\n                    parseGender[state[\"Basic Information\"][\"Gender\"]],\n                \"address\": state[\"Parent Information\"][\"Address\"],\n                \"city\": state[\"Parent Information\"][\"City\"],\n                \"phone_number\":\n                    state[\"Basic Information\"][\"Student Phone Number\"] ||\n                    null,\n                \"state\": state[\"Parent Information\"][\"State\"],\n                \"zipcode\": state[\"Parent Information\"][\"Zip Code\"],\n                \"grade\": state[\"Basic Information\"][\"Grade\"],\n                \"age\": state[\"Basic Information\"][\"Age\"],\n                \"school\": state[\"Basic Information\"][\"School\"],\n                \"birth_date\": \"2019-01-01\",\n            };\n            const parent = {\n                \"user\": {\n                    \"email\": state[\"Parent Information\"][\"Parent Email\"],\n                    \"password\": \"password123\",\n                    \"first_name\":\n                        state[\"Parent Information\"][\"Parent First Name\"],\n                    \"last_name\":\n                        state[\"Parent Information\"][\"Parent Last Name\"],\n                },\n                \"gender\":\n                    parseGender[state[\"Parent Information\"][\"Gender\"]],\n                \"address\": state[\"Parent Information\"][\"Address\"],\n                \"city\": state[\"Parent Information\"][\"City\"],\n                \"state\": state[\"Parent Information\"][\"State\"],\n                \"phone_number\":\n                    state[\"Parent Information\"][\"Phone Number\"] ||\n                    null,\n                \"zipcode\": state[\"Parent Information\"][\"Zip Code\"],\n                \"relationship\":\n                    state[\"Parent Information\"][\"Relationship to Student\"]\n                        .toUpperCase(),\n                \"birth_date\": \"2019-01-01\",\n            };\n            const selectedParent = state[\"Parent Information\"][\"Select Parent\"];\n            return submitParentAndStudent(parent, student,\n                selectedParent ? selectedParent.value : null, id);\n        }\n        case \"instructor\": {\n            const instructor = {\n                \"user\": {\n                    \"email\": state[\"Basic Information\"][\"E-Mail\"],\n                    \"password\": \"password123\",\n                    \"first_name\": state[\"Basic Information\"][\"First Name\"],\n                    \"last_name\": state[\"Basic Information\"][\"Last Name\"],\n                },\n                \"gender\": parseGender[state[\"Basic Information\"][\"Gender\"]],\n                \"address\": state[\"Basic Information\"][\"Address\"],\n                \"city\": state[\"Basic Information\"][\"City\"],\n                \"state\": \"CA\",\n                \"phone_number\": state[\"Basic Information\"][\"Phone Number\"],\n                \"zipcode\": state[\"Basic Information\"][\"Zip Code\"],\n                \"age\": 21,\n                \"birth_date\": parseBirthday(state[\"Basic Information\"][\"Date of Birth\"]),\n            };\n            if (id) {\n                return patchData(\"instructor\", instructor, id);\n            } else {\n                return postData(\"instructor\", instructor);\n            }\n        }\n        default:\n            console.error(`Invalid form type ${state.form}`);\n    }\n};\n\nexport const resetSubmitStatus = () =>\n    ({type: types.RESET_SUBMIT_STATUS, payload: null});\n"]},"metadata":{},"sourceType":"module"}