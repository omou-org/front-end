{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/CourseViewer.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\n\nclass CourseViewer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCourses = () => {\n      let today = new Date();\n\n      let filterCourseByDate = endDate => {\n        let inputEndDate = new Date(endDate); // if we're rendering current courses then check if the end date for the course is later than today\n        // else if we're rendering past courses, then check if the end date for the course is later than today\n\n        return this.props.current ? inputEndDate > today : inputEndDate < today;\n      };\n\n      let userCourseList;\n\n      switch (this.props.user_role) {\n        case \"instructor\":\n          // only keep course if instructor is associated with the course\n          userCourseList = Object.keys(this.props.courses).filter(courseID => {\n            let course = this.props.courses[courseID];\n            return filterCourseByDate(course.schedule.end_date) && course.instructor_id === this.props.user_id;\n          });\n          break;\n\n        case \"student\":\n          // only keep course if the student is on the roster\n          userCourseList = Object.keys(this.props.courses).filter(courseID => {\n            let course = this.props.courses[courseID];\n            return filterCourseByDate(course.schedule.end_date) && course.roster.includes(this.props.user_id);\n          });\n          break;\n\n        default:\n          console.warn(\"Unhandled user role \".concat(this.props.user_role));\n      }\n\n      return userCourseList;\n    };\n\n    this.state = {\n      userCourseIDList: []\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      current: this.props.current,\n      userRole: this.props.user_role,\n      userID: this.props.user_id,\n      userEnrollments: this.props.enrollments[this.props.user_id]\n    });\n  }\n\n  goToRoute(route) {\n    this.props.history.push(this.props.match.url + route);\n  }\n\n  courseDataParser(course) {\n    let DayConverter = {\n      1: \"Monday\",\n      2: \"Tuesday\",\n      3: \"Wednesday\",\n      4: \"Thursday\",\n      5: \"Friday\",\n      6: \"Saturday\"\n    };\n    let Days = course.schedule.days.map(day => {\n      return DayConverter[day];\n    });\n    let timeOptions = {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n    let dateOptions = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    let startDate = new Date(course.schedule.start_date + course.schedule.start_time),\n        endDate = new Date(course.schedule.end_date + course.schedule.end_time),\n        startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n        endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions);\n    startDate = startDate.toLocaleDateString(\"en-US\", dateOptions);\n    endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n    return {\n      Days: Days,\n      startTime: startTime,\n      endTime: endTime,\n      startDate: startDate,\n      endDate: endDate\n    };\n  }\n\n  numPaidCourses(courseID) {\n    let courseEnrollment = this.state.userEnrollments[courseID],\n        enrollmentPayments = Object.values(courseEnrollment.session_payment_status),\n        numPaidEnrollments = 0;\n    enrollmentPayments.forEach(paymentStatus => {\n      if (paymentStatus === 1) {\n        numPaidEnrollments++;\n      }\n    });\n    return numPaidEnrollments;\n  }\n\n  render() {\n    this.setCourses();\n\n    let paymentStatus = numPaidCourses => {\n      if (numPaidCourses > 3) {\n        return \"good\";\n      } else if (numPaidCourses <= 3 && numPaidCourses > 0) {\n        return \"warning\";\n      } else if (numPaidCourses <= 0) {\n        return \"bad\";\n      }\n    };\n\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: 'accounts-table-heading',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Session\")), React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Dates\")), React.createElement(Grid, {\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Class Day(s)\")), React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Time\")), React.createElement(Grid, {\n      item: true,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Status\")))), React.createElement(Grid, {\n      container: true,\n      spacing: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.setCourses().length !== 0 ? this.setCourses().map(courseID => {\n      let course = this.props.courses[courseID];\n\n      let _this$courseDataParse = this.courseDataParser(course),\n          Days = _this$courseDataParse.Days,\n          startDate = _this$courseDataParse.startDate,\n          endDate = _this$courseDataParse.endDate,\n          startTime = _this$courseDataParse.startTime,\n          endTime = _this$courseDataParse.endTime;\n\n      return React.createElement(Grid, {\n        item: true,\n        md: 12,\n        className: 'accounts-table-row',\n        onClick: e => {\n          e.preventDefault();\n          this.goToRoute(\"/\".concat(courseID));\n        },\n        key: courseID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        square: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, course.title)), React.createElement(Grid, {\n        item: true,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, startDate, \" - \", endDate)), React.createElement(Grid, {\n        item: true,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, Days)), React.createElement(Grid, {\n        item: true,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, startTime, \" - \", endTime)), React.createElement(Grid, {\n        item: true,\n        md: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sessions-left-chip \".concat(paymentStatus(this.numPaidCourses(courseID))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.numPaidCourses(courseID))))));\n    }) : React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: 'info',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        fontWeight: 700\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"No Courses Yet!\")))));\n  }\n\n}\n\nCourseViewer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    usersList: state.Users,\n    courses: state.Course.NewCourseList,\n    enrollments: state.Enrollments\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CourseViewer));","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/CourseViewer.js"],"names":["connect","React","Component","withRouter","Grid","Typography","Paper","CourseViewer","constructor","props","setCourses","today","Date","filterCourseByDate","endDate","inputEndDate","current","userCourseList","user_role","Object","keys","courses","filter","courseID","course","schedule","end_date","instructor_id","user_id","roster","includes","console","warn","state","userCourseIDList","componentWillMount","setState","userRole","userID","userEnrollments","enrollments","goToRoute","route","history","push","match","url","courseDataParser","DayConverter","Days","days","map","day","timeOptions","hour","minute","dateOptions","year","month","startDate","start_date","start_time","end_time","startTime","toLocaleTimeString","endTime","toLocaleDateString","numPaidCourses","courseEnrollment","enrollmentPayments","values","session_payment_status","numPaidEnrollments","forEach","paymentStatus","render","color","fontWeight","length","e","preventDefault","title","propTypes","mapStateToProps","usersList","Users","Course","NewCourseList","Enrollments","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {connect} from 'react-redux';\nimport React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\n\nclass CourseViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userCourseIDList: [],\n        };\n    }\n\n    componentWillMount() {\n        this.setState({\n            current: this.props.current,\n            userRole: this.props.user_role,\n            userID: this.props.user_id,\n            userEnrollments: this.props.enrollments[this.props.user_id],\n        });\n    }\n\n    goToRoute(route){\n        this.props.history.push(this.props.match.url+route);\n    }\n\n    setCourses = () => {\n        let today = new Date();\n        let filterCourseByDate = (endDate) => {\n            let inputEndDate = new Date(endDate);\n            // if we're rendering current courses then check if the end date for the course is later than today\n            // else if we're rendering past courses, then check if the end date for the course is later than today\n            return (this.props.current ? inputEndDate > today : inputEndDate < today)\n        };\n        let userCourseList;\n        switch (this.props.user_role) {\n            case \"instructor\":\n                // only keep course if instructor is associated with the course\n                userCourseList = Object.keys(this.props.courses).filter((courseID) => {\n                    let course = this.props.courses[courseID];\n                    return filterCourseByDate(course.schedule.end_date) && course.instructor_id === this.props.user_id;\n                });\n                break;\n            case \"student\":\n                // only keep course if the student is on the roster\n                userCourseList = Object.keys(this.props.courses).filter((courseID) => {\n                    let course = this.props.courses[courseID];\n                    return filterCourseByDate(course.schedule.end_date) && course.roster.includes(this.props.user_id);\n                });\n                break;\n            default:\n                console.warn(`Unhandled user role ${this.props.user_role}`);\n        }\n        return userCourseList;\n    };\n\n    courseDataParser(course) {\n        let DayConverter = {\n            1: \"Monday\",\n            2: \"Tuesday\",\n            3: \"Wednesday\",\n            4: \"Thursday\",\n            5: \"Friday\",\n            6: \"Saturday\",\n        };\n        let Days = course.schedule.days.map((day) => {\n            return DayConverter[day];\n        });\n\n        let timeOptions = {hour: \"2-digit\", minute: \"2-digit\"};\n        let dateOptions = {year: \"numeric\", month: \"short\", day: \"numeric\"};\n        let startDate = new Date(course.schedule.start_date + course.schedule.start_time),\n            endDate = new Date(course.schedule.end_date + course.schedule.end_time),\n            startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n            endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions);\n        startDate = startDate.toLocaleDateString(\"en-US\", dateOptions);\n        endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n\n        return {\n            Days:Days,\n            startTime: startTime,\n            endTime: endTime,\n            startDate: startDate,\n            endDate: endDate,\n        }\n    }\n\n    numPaidCourses(courseID){\n        let courseEnrollment = this.state.userEnrollments[courseID],\n            enrollmentPayments = Object.values(courseEnrollment.session_payment_status),\n            numPaidEnrollments = 0;\n        enrollmentPayments.forEach((paymentStatus)=>{\n            if(paymentStatus === 1){\n                numPaidEnrollments++;\n            }\n        });\n        return numPaidEnrollments;\n    }\n\n\n\n    render() {\n        this.setCourses();\n        let paymentStatus = (numPaidCourses)=>{\n            if(numPaidCourses>3) {\n                return \"good\";\n            } else if(numPaidCourses <= 3 && numPaidCourses >0) {\n                return \"warning\";\n            } else if(numPaidCourses <= 0){\n                return \"bad\";\n            }\n        };\n        return (<Grid container>\n            <Grid item md={12}>\n                <Grid container className={'accounts-table-heading'}>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                            Session\n                        </Typography>\n                    </Grid>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                            Dates\n                        </Typography>\n                    </Grid>\n                    <Grid item md={2}>\n                        <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                            Class Day(s)\n                        </Typography>\n                    </Grid>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                            Time\n                        </Typography>\n                    </Grid>\n                    <Grid item md={1}>\n                        <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                            Status\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid container spacing={8}>\n                {this.setCourses().length !== 0 ?\n                    this.setCourses().map((courseID) => {\n                        let course = this.props.courses[courseID];\n                        let {Days, startDate, endDate, startTime, endTime} = this.courseDataParser(course);\n                        return (<Grid item md={12}\n                                      className={'accounts-table-row'}\n                                      onClick={(e)=>{e.preventDefault(); this.goToRoute(`/${courseID}`)}}\n                                      key={courseID}>\n                            <Paper square={true}>\n                                <Grid container>\n                                    <Grid item md={3}>\n                                        <Typography align={'left'}>\n                                            {course.title}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={3}>\n                                        <Typography align={'left'}>\n                                            {startDate} - {endDate}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={2}>\n                                        <Typography align={'left'}>\n                                            {Days}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={3}>\n                                        <Typography align={'left'}>\n                                            {startTime} - {endTime}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={1}>\n                                        <div className={`sessions-left-chip ${paymentStatus(this.numPaidCourses(courseID))}`}>\n                                            {this.numPaidCourses(courseID)}\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>);\n                    }) :\n                    <Grid item md={12}>\n                        <Paper className={'info'}>\n                            <Typography style={{fontWeight: 700}}>\n                                No Courses Yet!\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                }\n            </Grid>\n        </Grid>)\n    }\n\n}\n\nCourseViewer.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        usersList: state.Users,\n        courses: state.Course.NewCourseList,\n        enrollments: state.Enrollments,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CourseViewer));"]},"metadata":{},"sourceType":"module"}