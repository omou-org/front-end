{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/Notes.js\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/CheckCircleOutlined\";\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n  }\n\n  componentWillMount() {\n    //TODO: notes in descending order\n    this.setState(() => {\n      let notes = Object.keys(this.props.user_notes).map(noteID => {\n        return this.props.user_notes[noteID];\n      });\n      return {\n        notes: notes\n      };\n    });\n  }\n\n  render() {\n    console.log(this.state.notes);\n    let iconStyle = {\n      fontSize: \"16px\",\n      align: \"right\"\n    };\n\n    let numericDateString = date => {\n      let DateObject = new Date(date),\n          numericOptions = {\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      };\n      return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n    };\n\n    return React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addNote\",\n      onClick: () => {\n        React.createElement(React.Fragment, null, React.createElement(Modal, {\n          \"aria-labelledby\": \"simple-modal-title\",\n          \"aria-describedby\": \"simple-modal-description\",\n          open: this.state.alert,\n          onClick: this.hideWarning.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"exit-popup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h6\",\n          id: \"modal-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, this.props.alertMessage || \"Are you sure you want to leave unsaved changes?\"), React.createElement(Button, {\n          onClick: e => {\n            e.preventDefault();\n            this.denyAction.bind(this)(this.props.denyAction);\n          },\n          color: \"secondary\",\n          className: \"button secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, this.props.alertDenyText || \"No, leave me here\"), React.createElement(Button, {\n          onClick: e => {\n            e.preventDefault();\n            this.confirmAction.bind(this)(this.props.confirmAction);\n          },\n          color: \"primary\",\n          className: \"button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, this.props.alertConfirmText || \"Yes, take me back\"))));\n      },\n      style: {\n        \"cursor\": \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \"Add Note\"))), this.state.notes.map((note, i) => {\n      return React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"body\",\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, note.body), React.createElement(Typography, {\n        className: \"date\",\n        style: {\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, numericDateString(note.timestamp).replace(\",\", \"ãƒ»\")), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(DoneIcon, {\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))));\n    })));\n  }\n\n}\n\nNotes.propTypes = {\n  user_notes: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/Notes.js"],"names":["connect","PropTypes","React","Component","Grid","Typography","Paper","Modal","Button","EditIcon","DoneIcon","AddIcon","Notes","constructor","props","state","notes","componentWillMount","setState","Object","keys","user_notes","map","noteID","render","console","log","iconStyle","fontSize","align","numericDateString","date","DateObject","Date","numericOptions","month","day","hour","minute","toLocaleTimeString","alert","hideWarning","bind","alertMessage","e","preventDefault","denyAction","alertDenyText","confirmAction","alertConfirmText","note","i","body","fontWeight","timestamp","replace","propTypes","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/CheckCircleOutlined\";\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\n\nclass Notes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: [],\n        };\n    }\n\n    componentWillMount() {\n        //TODO: notes in descending order\n        this.setState(() => {\n            let notes = Object.keys(this.props.user_notes).map((noteID) => {\n                return this.props.user_notes[noteID];\n            });\n            return {\n                notes: notes,\n            }\n        });\n    }\n\n    render() {\n        console.log(this.state.notes);\n        let iconStyle = {\n            fontSize: \"16px\",\n            align: \"right\"\n        }\n        let numericDateString = (date) => {\n            let DateObject = new Date(date),\n                numericOptions = {\n                    month: \"numeric\",\n                    day: \"numeric\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                };\n            return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n        };\n        return (<Grid item md={12}>\n            <Grid container spacing={16}>\n                <Grid item md={3}>\n                    <div className=\"addNote\"\n                    onClick={() => {\n                        <>\n                        <Modal\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                            open={this.state.alert}\n                            onClick={this.hideWarning.bind(this)}>\n                            <div className=\"exit-popup\">\n                                <Typography variant=\"h6\" id=\"modal-title\">\n                                    {this.props.alertMessage || \"Are you sure you want to leave unsaved changes?\"}\n                                </Typography>\n                                <Button\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.denyAction.bind(this)(this.props.denyAction)\n                                    }}\n                                    color=\"secondary\"\n                                    className=\"button secondary\">\n                                    {this.props.alertDenyText || \"No, leave me here\"}\n                                </Button>\n                                <Button\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.confirmAction.bind(this)(this.props.confirmAction)\n                                    }}\n                                    color=\"primary\"\n                                    className=\"button primary\">\n                                    {this.props.alertConfirmText || \"Yes, take me back\"}\n                                </Button>\n                            </div>\n                        </Modal>\n                    </>\n                    }}\n                    style={{\n                        \"cursor\": \"pointer\",\n                    }}>\n                        <Typography className=\"center\">\n                            <AddIcon/>\n                            <br/>\n                            Add Note\n                        </Typography>\n                    </div>\n                </Grid>\n                {this.state.notes.map((note, i) => {\n                    return <Grid item xs={3} key={i}>\n                        <Paper className={\"note\"}>\n                            <Typography className={\"body\"} align={'left'}>\n                                {note.body}\n                            </Typography>\n                            <Typography className={\"date\"} style={{ fontWeight: \"500\" }}>\n                                {numericDateString(note.timestamp).replace(\",\", \"ãƒ»\")}\n                            </Typography>\n                            <div className={\"actions\"}>\n                                <EditIcon style={iconStyle} />\n                                <DoneIcon style={iconStyle} />\n                            </div>\n                        </Paper>\n                    </Grid>\n                })}\n            </Grid>\n        </Grid>)\n    }\n\n}\n\nNotes.propTypes = {\n    user_notes: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Notes);"]},"metadata":{},"sourceType":"module"}