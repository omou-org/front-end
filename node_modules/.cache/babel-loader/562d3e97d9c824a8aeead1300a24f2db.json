{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/Notes.js\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/CheckCircleOutlined\";\nimport NotificationIcon from \"@material-ui/icons/NotificationImportant\";\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\nimport InputBase from '@material-ui/core/InputBase';\nimport TextField from '@material-ui/core/TextField';\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n      alert: false,\n      noteBody: \"\",\n      notication: false\n    };\n  }\n\n  componentWillMount() {\n    //TODO: notes in descending order\n    this.setState(() => {\n      let notes = Object.keys(this.props.user_notes).map(noteID => {\n        return this.props.user_notes[noteID];\n      });\n      return {\n        notes: notes\n      };\n    });\n  }\n\n  handleClick(notebody) {\n    this.setState({\n      alert: true,\n      noteBody: notebody\n    });\n  }\n\n  hideWarning() {\n    this.setState({\n      alert: false\n    });\n  }\n\n  renderPopUp() {\n    return React.createElement(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"onClick=\", this.hideWarning.bind(this), \">\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      id: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"asd\")));\n  }\n\n  render() {\n    console.log(this.state.notes);\n    let iconStyle = {\n      fontSize: \"16px\",\n      align: \"right\"\n    };\n    let notificationColor;\n\n    if (this.state.notification) {\n      notificationColor = {\n        color: \"red\"\n      };\n    } else {\n      notificationColor = {\n        color: \"grey\"\n      };\n    }\n\n    let popup = {\n      minHeight: 381,\n      minWidth: 381\n    };\n\n    let numericDateString = date => {\n      let DateObject = new Date(date),\n          numericOptions = {\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      };\n      return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n    };\n\n    return React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addNote\",\n      onClick: () => {\n        this.handleClick();\n      },\n      style: {\n        \"cursor\": \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \"Add Note\")), React.createElement(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: this.state.alert,\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"exit-popup\",\n      style: popup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-name\",\n      label: \"Subject\",\n      className: \"textfield\",\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(NotificationIcon, {\n      className: \"notification\",\n      style: notificationColor,\n      onClick: () => {\n        this.state.notifc;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(InputBase, {\n      defaultValue: this.state.noteBody,\n      multiline: true,\n      rows: 10,\n      variant: \"filled\",\n      margin: \"normal\",\n      required: true,\n      className: \"textfield\",\n      inputProps: {\n        'aria-label': 'naked'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"popUpActions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(Button, {\n      onClick: this.hideWarning.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Save\"))))), this.state.notes.map((note, i) => {\n      return React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"body\",\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, note.body), React.createElement(Typography, {\n        className: \"date\",\n        style: {\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, numericDateString(note.timestamp).replace(\",\", \"ãƒ»\")), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        style: iconStyle,\n        onClick: () => {\n          this.handleClick(note.body);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(DoneIcon, {\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }))));\n    })));\n  }\n\n}\n\nNotes.propTypes = {\n  user_notes: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/Notes.js"],"names":["connect","PropTypes","React","Component","Grid","Typography","Paper","Modal","Button","EditIcon","DoneIcon","NotificationIcon","AddIcon","InputBase","TextField","Notes","constructor","props","state","notes","alert","noteBody","notication","componentWillMount","setState","Object","keys","user_notes","map","noteID","handleClick","notebody","hideWarning","renderPopUp","bind","render","console","log","iconStyle","fontSize","align","notificationColor","notification","color","popup","minHeight","minWidth","numericDateString","date","DateObject","Date","numericOptions","month","day","hour","minute","toLocaleTimeString","notifc","note","i","body","fontWeight","timestamp","replace","propTypes","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/CheckCircleOutlined\";\nimport NotificationIcon from \"@material-ui/icons/NotificationImportant\";\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\nimport InputBase from '@material-ui/core/InputBase';\nimport TextField from '@material-ui/core/TextField';\n\nclass Notes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: [],\n            alert: false,\n            noteBody: \"\",\n            notication: false,\n        };\n    }\n\n    componentWillMount() {\n        //TODO: notes in descending order\n        this.setState(() => {\n            let notes = Object.keys(this.props.user_notes).map((noteID) => {\n                return this.props.user_notes[noteID];\n            });\n            return {\n                notes: notes,\n            }\n        });\n    }\n\n    handleClick(notebody) {\n        this.setState({\n            alert: true,\n            noteBody: notebody,\n        })\n    }\n\n    hideWarning() {\n        this.setState({\n            alert: false,\n        });\n    }\n\n    renderPopUp() {\n        return (\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={this.state.alert}>\n                onClick={this.hideWarning.bind(this)}>\n                        <div><Typography variant=\"h6\" id=\"modal-title\">\n                    asd\n                        </Typography>\n                </div>\n            </Modal>\n        );\n    }\n\n    render() {\n        console.log(this.state.notes);\n        let iconStyle = {\n            fontSize: \"16px\",\n            align: \"right\",\n        }\n        let notificationColor\n        if (this.state.notification) {\n            notificationColor = {\n                color: \"red\",\n            }\n        }\n        else{\n            notificationColor = {\n                color: \"grey\",\n            }\n        }\n        let popup = {\n            minHeight: 381,\n            minWidth: 381,\n        };\n        let numericDateString = (date) => {\n            let DateObject = new Date(date),\n                numericOptions = {\n                    month: \"numeric\",\n                    day: \"numeric\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                };\n            return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n        };\n        return (<Grid item md={12}>\n            <Grid container spacing={16}>\n                <Grid item md={3}>\n                    <div className=\"addNote\"\n                        onClick={() => {\n                            this.handleClick();\n                        }}\n                        style={{\n                            \"cursor\": \"pointer\",\n                        }}>\n                        <Typography className=\"center\">\n                            <AddIcon />\n                            <br />\n                            Add Note\n                        </Typography>\n                    </div>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.alert}\n                        className=\"popup\"\n                    >\n                        <div className=\"exit-popup\" style={popup}>\n                            <Grid>\n                                <TextField\n                                    id=\"standard-name\"\n                                    label=\"Subject\"\n                                    className=\"textfield\"\n                                    margin=\"normal\"\n                                />\n                                <NotificationIcon\n                                    className={\"notification\"}\n                                    style={notificationColor}\n                                    onClick={() => {\n                                        this.state.notifc\n                                    }}\n                                />\n                            </Grid>\n                            <Grid>\n                                <InputBase\n                                    defaultValue={this.state.noteBody}\n                                    multiline\n                                    rows={10}\n                                    variant=\"filled\"\n                                    margin=\"normal\"\n                                    required={true}\n                                    className=\"textfield\"\n                                    inputProps={{ 'aria-label': 'naked' }}\n                                />\n                            </Grid>\n                            <div className=\"popUpActions\">\n                                <Button>\n                                    Delete\n                            </Button>\n                                <Button onClick={this.hideWarning.bind(this)}>\n                                    Cancel\n                            </Button>\n                                <Button>\n                                    Save\n                            </Button>\n                            </div>\n                        </div>\n                    </Modal>\n                </Grid>\n                {this.state.notes.map((note, i) => {\n                    return <Grid item xs={3} key={i}>\n                        <Paper className={\"note\"}>\n                            <Typography className={\"body\"} align={'left'}>\n                                {note.body}\n                            </Typography>\n                            <Typography className={\"date\"} style={{ fontWeight: \"500\" }}>\n                                {numericDateString(note.timestamp).replace(\",\", \"ãƒ»\")}\n                            </Typography>\n                            <div className={\"actions\"}>\n                                <EditIcon style={iconStyle}\n                                    onClick={() => {\n                                        this.handleClick(note.body);\n                                    }}\n                                />\n                                <DoneIcon style={iconStyle} />\n                            </div>\n                        </Paper>\n                    </Grid>\n                })}\n            </Grid>\n        </Grid>)\n    }\n\n}\n\nNotes.propTypes = {\n    user_notes: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Notes);"]},"metadata":{},"sourceType":"module"}