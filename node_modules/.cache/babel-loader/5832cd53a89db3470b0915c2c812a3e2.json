{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/Notes.js\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/CheckCircleOutlined\";\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n  }\n\n  componentWillMount() {\n    //TODO: notes in descending order\n    this.setState(() => {\n      let notes = Object.keys(this.props.user_notes).map(noteID => {\n        return this.props.user_notes[noteID];\n      });\n      return {\n        notes: notes\n      };\n    });\n  }\n\n  render() {\n    console.log(this.state.notes);\n    let iconStyle = {\n      fontSize: \"16px\"\n    };\n\n    let numericDateString = date => {\n      let DateObject = new Date(date),\n          numericOptions = {\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      };\n      return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n    };\n\n    return React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.notes.map((note, i) => {\n      return React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"body\",\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, note.body), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"date\",\n        align: 'left',\n        style: {\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, numericDateString(note.timestamp).replace(\",\", \"・\"))), React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(DoneIcon, {\n        style: iconStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))))));\n    })));\n  }\n\n}\n\nNotes.propTypes = {\n  user_notes: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/Notes.js"],"names":["connect","PropTypes","React","Component","Grid","Typography","Paper","EditIcon","DoneIcon","Notes","constructor","props","state","notes","componentWillMount","setState","Object","keys","user_notes","map","noteID","render","console","log","iconStyle","fontSize","numericDateString","date","DateObject","Date","numericOptions","month","day","hour","minute","toLocaleTimeString","note","i","body","fontWeight","timestamp","replace","propTypes","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/CheckCircleOutlined\"\n\nclass Notes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: [],\n        };\n    }\n\n    componentWillMount() {\n        //TODO: notes in descending order\n        this.setState(() => {\n            let notes = Object.keys(this.props.user_notes).map((noteID) => {\n                return this.props.user_notes[noteID];\n            });\n            return {\n                notes: notes,\n            }\n        });\n    }\n\n    render() {\n        console.log(this.state.notes);\n        let iconStyle = {\n            fontSize: \"16px\"\n        }\n        let numericDateString = (date) => {\n            let DateObject = new Date(date),\n                numericOptions = {\n                    month: \"numeric\",\n                    day: \"numeric\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                };\n            return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n        };\n        return (<Grid item md={12}>\n            <Grid container spacing={16}>\n                {this.state.notes.map((note, i) => {\n                    return <Grid item xs={3} key={i}>\n                        <Paper className={\"note\"}>\n                            <Typography className={\"body\"} align={'left'}>\n                                {note.body}\n                            </Typography>\n                            <Grid item xs={3}>\n                                <Grid item xs={2}>\n                                    <Typography className={\"date\"} align={'left'} style={{ fontWeight: \"500\" }}>\n                                        {numericDateString(note.timestamp).replace(\",\", \"・\")}\n                                    </Typography>\n                                        </Grid>\n                                        <Grid item xs={1}>\n                                        <div className={\"actions\"}>\n                                        <EditIcon style={iconStyle} />\n                                        <DoneIcon style={iconStyle} />\n                                    </div>\n                                    </Grid>\n                                </Grid>\n                        </Paper>\n                    </Grid>\n                })}\n            </Grid>\n        </Grid>)\n    }\n\n}\n\nNotes.propTypes = {\n    user_notes: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Notes);"]},"metadata":{},"sourceType":"module"}