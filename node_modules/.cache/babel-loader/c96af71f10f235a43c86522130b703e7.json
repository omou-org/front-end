{"ast":null,"code":"var _jsxFileName = \"/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/components/FeatureViews/Accounts/TabComponents/InstructorCourses.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\n\nclass InstructorCourses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courseIDs: []\n    };\n  }\n\n  componentWillMount() {\n    this.setState(() => {\n      let CoursesTaughtByInstructor = Object.keys(this.props.courseList).filter(courseID => {\n        let courseInstructorID = this.props.courseList[courseID].instructor_id;\n        return this.props.user_id === courseInstructorID;\n      });\n      return {\n        courseIDs: CoursesTaughtByInstructor\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: 'accounts-table-heading',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Session\")), React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Dates\")), React.createElement(Grid, {\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Class Day(s)\")), React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Time\")))), React.createElement(Grid, {\n      container: true,\n      spacing: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.courseIDs.map(courseID => {\n      let course = this.props.courseList[courseID];\n      let DayConverter = {\n        1: \"Monday\",\n        2: \"Tuesday\",\n        3: \"Wednesday\",\n        4: \"Thursday\",\n        5: \"Friday\",\n        6: \"Saturday\"\n      };\n      let Days = course.schedule.days.map(day => {\n        return DayConverter[day];\n      });\n      let timeOptions = {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      };\n      let dateOptions = {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      };\n      let startDate = new Date(course.schedule.start_date + course.schedule.start_time),\n          endDate = new Date(course.schedule.end_date + course.schedule.end_time),\n          startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n          endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions);\n      startDate = startDate.toLocaleDateString(\"en-US\", dateOptions);\n      endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n      return React.createElement(Grid, {\n        item: true,\n        md: 12,\n        className: 'accounts-table-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        square: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        md: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, course.title)), React.createElement(Grid, {\n        item: true,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, startDate, \" - \", endDate)), React.createElement(Grid, {\n        item: true,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, Days)), React.createElement(Grid, {\n        item: true,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, startTime, \" - \", endTime)))));\n    })));\n  }\n\n}\n\nInstructorCourses.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    courseList: state.Course.NewCourseList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstructorCourses);","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/components/FeatureViews/Accounts/TabComponents/InstructorCourses.js"],"names":["connect","React","Component","Grid","Typography","Paper","InstructorCourses","constructor","props","state","courseIDs","componentWillMount","setState","CoursesTaughtByInstructor","Object","keys","courseList","filter","courseID","courseInstructorID","instructor_id","user_id","render","color","fontWeight","map","course","DayConverter","Days","schedule","days","day","timeOptions","hour","minute","dateOptions","year","month","startDate","Date","start_date","start_time","endDate","end_date","end_time","startTime","toLocaleTimeString","endTime","toLocaleDateString","title","propTypes","mapStateToProps","Course","NewCourseList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\n\nclass InstructorCourses extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            courseIDs: [],\n        };\n    }\n\n    componentWillMount() {\n        this.setState(()=>{\n            let CoursesTaughtByInstructor = Object.keys(this.props.courseList).filter((courseID)=>{\n               let courseInstructorID = this.props.courseList[courseID].instructor_id;\n               return this.props.user_id === courseInstructorID;\n            });\n            return {\n                courseIDs: CoursesTaughtByInstructor,\n            }\n        })\n    }\n\n    render() {\n        return(<Grid container>\n            <Grid item md={12}>\n                <Grid container className={'accounts-table-heading'}>\n                    <Grid item md={1}>\n                    </Grid>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color:'white', fontWeight:'500'}}>\n                            Session\n                        </Typography>\n                    </Grid>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color:'white', fontWeight:'500'}}>\n                            Dates\n                        </Typography>\n                    </Grid>\n                    <Grid item md={2}>\n                        <Typography align={'left'} style={{color:'white', fontWeight:'500'}}>\n                            Class Day(s)\n                        </Typography>\n                    </Grid>\n                    <Grid item md={3}>\n                        <Typography align={'left'} style={{color:'white', fontWeight:'500'}}>\n                            Time\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid container spacing={8}>\n            {\n                this.state.courseIDs.map((courseID)=>{\n                    let course = this.props.courseList[courseID];\n                    let DayConverter = {\n                        1: \"Monday\",\n                        2: \"Tuesday\",\n                        3: \"Wednesday\",\n                        4: \"Thursday\",\n                        5: \"Friday\",\n                        6: \"Saturday\",\n                    };\n                    let Days = course.schedule.days.map((day) => {\n                        return DayConverter[day];\n                    });\n\n                    let timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\n                    let dateOptions = { year: \"numeric\", month: \"short\", day: \"numeric\"};\n                    let startDate = new Date(course.schedule.start_date + course.schedule.start_time),\n                        endDate = new Date(course.schedule.end_date + course.schedule.end_time),\n                        startTime = startDate.toLocaleTimeString(\"en-US\",timeOptions),\n                        endTime = endDate.toLocaleTimeString(\"en-US\",timeOptions);\n                    startDate = startDate.toLocaleDateString(\"en-US\",dateOptions);\n                    endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n                    return (<Grid item md={12} className={'accounts-table-row'}>\n                        <Paper square={true} >\n                            <Grid container>\n                                <Grid item md={1}>\n                                </Grid>\n                                <Grid item md={3} >\n                                    <Typography align={'left'}>\n                                        {course.title}\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={3}>\n                                    <Typography align={'left'}>\n                                        {startDate} - {endDate}\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={2}>\n                                    <Typography align={'left'}>\n                                        {Days}\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={3}>\n                                    <Typography align={'left'}>\n                                        {startTime} - {endTime}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>);\n                })\n            }\n            </Grid>\n        </Grid>)\n    }\n\n}\n\nInstructorCourses.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        courseList: state.Course.NewCourseList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(InstructorCourses);"]},"metadata":{},"sourceType":"module"}