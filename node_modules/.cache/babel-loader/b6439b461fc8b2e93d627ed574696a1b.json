{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport deepmerge from 'deepmerge'; // < 1kb payload overhead when lodash/merge is > 3kb.\n\nimport warning from 'warning';\nimport { ponyfillGlobal } from '@material-ui/utils';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n/**\n * @see @link{https://material.io/design/typography/the-type-system.html}\n * @see @link{https://material.io/design/typography/understanding-typography.html}\n */\n\nexport default function createTypography(palette, typography) {\n  const _ref = typeof typography === 'function' ? typography(palette) : typography,\n        _ref$fontFamily = _ref.fontFamily,\n        fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily,\n        _ref$fontSize = _ref.fontSize,\n        fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,\n        _ref$fontWeightLight = _ref.fontWeightLight,\n        fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,\n        _ref$fontWeightRegula = _ref.fontWeightRegular,\n        fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,\n        _ref$fontWeightMedium = _ref.fontWeightMedium,\n        fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,\n        _ref$htmlFontSize = _ref.htmlFontSize,\n        htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,\n        _ref$useNextVariants = _ref.useNextVariants,\n        useNextVariants = _ref$useNextVariants === void 0 ? Boolean(ponyfillGlobal.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__) : _ref$useNextVariants,\n        _ref$suppressWarning = _ref.suppressWarning,\n        suppressWarning = _ref$suppressWarning === void 0 ? false : _ref$suppressWarning,\n        allVariants = _ref.allVariants,\n        other = _objectWithoutPropertiesLoose(_ref, [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"htmlFontSize\", \"useNextVariants\", \"suppressWarning\", \"allVariants\"]);\n\n  process.env.NODE_ENV !== \"production\" ? warning(useNextVariants || suppressWarning, 'Material-UI: you are using the deprecated typography variants ' + 'that will be removed in the next major release.' + '\\nPlease read the migration guide under https://material-ui.com/style/typography#migration-to-typography-v2') : void 0;\n  const coef = fontSize / 14;\n\n  const pxToRem = size => \"\".concat(size / htmlFontSize * coef, \"rem\");\n\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _extends({\n    color: palette.text.primary,\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following http://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight\n  }, fontFamily === defaultFontFamily ? {\n    letterSpacing: \"\".concat(round(letterSpacing / size), \"em\")\n  } : {}, casing, allVariants);\n\n  const nextVariants = {\n    h1: buildVariant(fontWeightLight, 96, 1, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.04, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.17, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.33, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1Next: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2Next: buildVariant(fontWeightRegular, 14, 1.5, 0.15),\n    buttonNext: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    captionNext: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  }; // To remove in v4\n\n  const oldVariants = {\n    display4: _extends({\n      fontSize: pxToRem(112),\n      fontWeight: fontWeightLight,\n      fontFamily,\n      letterSpacing: '-.04em',\n      lineHeight: \"\".concat(round(128 / 112), \"em\"),\n      marginLeft: '-.04em',\n      color: palette.text.secondary\n    }, allVariants),\n    display3: _extends({\n      fontSize: pxToRem(56),\n      fontWeight: fontWeightRegular,\n      fontFamily,\n      letterSpacing: '-.02em',\n      lineHeight: \"\".concat(round(73 / 56), \"em\"),\n      marginLeft: '-.02em',\n      color: palette.text.secondary\n    }, allVariants),\n    display2: _extends({\n      fontSize: pxToRem(45),\n      fontWeight: fontWeightRegular,\n      fontFamily,\n      lineHeight: \"\".concat(round(51 / 45), \"em\"),\n      marginLeft: '-.02em',\n      color: palette.text.secondary\n    }, allVariants),\n    display1: _extends({\n      fontSize: pxToRem(34),\n      fontWeight: fontWeightRegular,\n      fontFamily,\n      lineHeight: \"\".concat(round(41 / 34), \"em\"),\n      color: palette.text.secondary\n    }, allVariants),\n    headline: _extends({\n      fontSize: pxToRem(24),\n      fontWeight: fontWeightRegular,\n      fontFamily,\n      lineHeight: \"\".concat(round(32.5 / 24), \"em\"),\n      color: palette.text.primary\n    }, allVariants),\n    title: _extends({\n      fontSize: pxToRem(21),\n      fontWeight: fontWeightMedium,\n      fontFamily,\n      lineHeight: \"\".concat(round(24.5 / 21), \"em\"),\n      color: palette.text.primary\n    }, allVariants),\n    subheading: _extends({\n      fontSize: pxToRem(16),\n      fontWeight: fontWeightRegular,\n      fontFamily,\n      lineHeight: \"\".concat(round(24 / 16), \"em\"),\n      color: palette.text.primary\n    }, allVariants),\n    body2: _extends({\n      fontSize: pxToRem(14),\n      fontWeight: fontWeightMedium,\n      fontFamily,\n      lineHeight: \"\".concat(round(24 / 14), \"em\"),\n      color: palette.text.primary\n    }, allVariants),\n    body1: _extends({\n      fontSize: pxToRem(14),\n      fontWeight: fontWeightRegular,\n      fontFamily,\n      lineHeight: \"\".concat(round(20.5 / 14), \"em\"),\n      color: palette.text.primary\n    }, allVariants),\n    caption: _extends({\n      fontSize: pxToRem(12),\n      fontWeight: fontWeightRegular,\n      fontFamily,\n      lineHeight: \"\".concat(round(16.5 / 12), \"em\"),\n      color: palette.text.secondary\n    }, allVariants),\n    button: _extends({\n      fontSize: pxToRem(14),\n      textTransform: 'uppercase',\n      fontWeight: fontWeightMedium,\n      fontFamily,\n      color: palette.text.primary\n    }, allVariants)\n  };\n  return deepmerge(_extends({\n    pxToRem,\n    round,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium\n  }, oldVariants, nextVariants, useNextVariants ? {\n    body1: nextVariants.body1Next,\n    body2: nextVariants.body2Next,\n    button: nextVariants.buttonNext,\n    caption: nextVariants.captionNext\n  } : {}, {\n    useNextVariants\n  }), other, {\n    clone: false // No need to clone deep\n\n  });\n}","map":null,"metadata":{},"sourceType":"module"}