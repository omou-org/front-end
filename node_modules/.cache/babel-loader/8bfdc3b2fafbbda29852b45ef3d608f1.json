{"ast":null,"code":"import _slicedToArray from \"/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/components/Authentication/LoginPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport * as authActions from \"../../actions/authActions.js\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router\";\nimport PropTypes from \"prop-types\"; // Material UI Imports\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport \"./LoginPage.scss\";\n\nfunction LoginPage(props) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        savePassword = _useState6[0],\n        setSavePassword = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        emailEmpty = _useState8[0],\n        setEmailEmpty = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        passwordEmpty = _useState10[0],\n        setPasswordEmpty = _useState10[1];\n\n  const handleTextInput = (setter, validator, {\n    target\n  }) => {\n    setter(target.value);\n    props.authActions.resetAttemptStatus();\n    validator(!target.value);\n  };\n\n  const login = () => {\n    props.authActions.login(email, password, savePassword);\n  };\n\n  useEffect(() => {\n    props.setLogin(true);\n    return () => {\n      props.setLogin(false);\n    };\n  });\n\n  if (props.auth.token) {\n    props.history.push(\"/accounts\");\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: \"bg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"sign in\")), React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      event.stopPropagation();\n      login();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    error: props.auth.failedLogin || emailEmpty,\n    label: \"E-Mail\",\n    className: \"email\",\n    margin: \"dense\",\n    value: email,\n    onChange: event => {\n      handleTextInput(setEmail, setEmailEmpty, event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-password-input\",\n    label: \"Password\",\n    className: \"password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    margin: \"normal\",\n    value: password,\n    error: props.auth.failedLogin || passwordEmpty,\n    onChange: event => {\n      handleTextInput(setPassword, setPasswordEmpty, event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: \"remember\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: savePassword,\n    onClick: () => {\n      setSavePassword(!savePassword);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), \"Remember me\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    className: \"forgot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"forgotText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Forgot Password?\")))), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"button signIn\",\n    disabled: !email || !password,\n    onClick: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"sign in\")), props.auth.failedLogin && React.createElement(Typography, {\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Invalid credentials\"))));\n}\n\nLoginPage.propTypes = {\n  \"auth\": PropTypes.shape({\n    \"failedLogin\": PropTypes.bool,\n    \"token\": PropTypes.string\n  }),\n  \"authActions\": PropTypes.shape({\n    \"login\": PropTypes.func,\n    \"resetAttemptStatus\": PropTypes.func\n  }),\n  \"history\": PropTypes.shape({\n    \"push\": PropTypes.func\n  }),\n  \"setLogin\": PropTypes.func\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  \"authActions\": bindActionCreators(authActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginPage));","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/components/Authentication/LoginPage.js"],"names":["React","useEffect","useState","authActions","connect","bindActionCreators","withRouter","PropTypes","Grid","Button","Paper","Typography","TextField","Checkbox","LoginPage","props","email","setEmail","password","setPassword","savePassword","setSavePassword","emailEmpty","setEmailEmpty","passwordEmpty","setPasswordEmpty","handleTextInput","setter","validator","target","value","resetAttemptStatus","login","setLogin","auth","token","history","push","minHeight","event","preventDefault","stopPropagation","failedLogin","propTypes","shape","bool","string","func","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport * as authActions from \"../../actions/authActions.js\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {withRouter} from \"react-router\";\nimport PropTypes from \"prop-types\";\n\n// Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport \"./LoginPage.scss\";\n\nfunction LoginPage(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [savePassword, setSavePassword] = useState(false);\n    const [emailEmpty, setEmailEmpty] = useState(false);\n    const [passwordEmpty, setPasswordEmpty] = useState(false);\n\n    const handleTextInput = (setter, validator, {target}) => {\n        setter(target.value);\n        props.authActions.resetAttemptStatus();\n        validator(!target.value);\n    };\n\n    const login = () => {\n        props.authActions.login(email, password, savePassword);\n    };\n\n    useEffect(() => {\n        props.setLogin(true);\n        return () => {\n            props.setLogin(false);\n        };\n    });\n\n    if (props.auth.token) {\n        props.history.push(\"/accounts\");\n    }\n\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{\n                minHeight: \"100vh\",\n            }}>\n            <Grid item xs={3}>\n                <Paper className=\"bg\">\n                    <Typography\n                        align=\"center\"\n                        color=\"primary\">\n                        <span className=\"header\">sign in</span>\n                    </Typography>\n                    <form onSubmit={(event) => {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        login();\n                    }}>\n                        <TextField\n                            error={props.auth.failedLogin || emailEmpty}\n                            label=\"E-Mail\"\n                            className=\"email\"\n                            margin=\"dense\"\n                            value={email}\n                            onChange={(event) => {\n                                handleTextInput(setEmail, setEmailEmpty, event);\n                            }}\n                        />\n                        <TextField\n                            id=\"standard-password-input\"\n                            label=\"Password\"\n                            className=\"password\"\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            margin=\"normal\"\n                            value={password}\n                            error={props.auth.failedLogin || passwordEmpty}\n                            onChange={(event) => {\n                                handleTextInput(setPassword, setPasswordEmpty, event);\n                            }}\n                        />\n                        <Grid container>\n                            <Grid item className=\"remember\">\n                                <label>\n                                    <Checkbox\n                                        checked={savePassword}\n                                        onClick={() => {\n                                            setSavePassword(!savePassword);\n                                        }} />\n                                    Remember me\n                                </label>\n                            </Grid>\n                            <Grid item>\n                                <Button color=\"secondary\" className=\"forgot\">\n                                    <span className=\"forgotText\">Forgot Password?</span>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"button signIn\"\n                            disabled={!email || !password}\n                            onClick={login}>\n                            sign in\n                        </Button>\n                    </form>\n                    {\n                        props.auth.failedLogin &&\n                        <Typography color=\"error\">\n                            Invalid credentials\n                        </Typography>\n                    }\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n\nLoginPage.propTypes = {\n    \"auth\": PropTypes.shape({\n        \"failedLogin\": PropTypes.bool,\n        \"token\": PropTypes.string,\n    }),\n    \"authActions\": PropTypes.shape({\n        \"login\": PropTypes.func,\n        \"resetAttemptStatus\": PropTypes.func,\n    }),\n    \"history\": PropTypes.shape({\n        \"push\": PropTypes.func,\n    }),\n    \"setLogin\": PropTypes.func,\n};\n\nconst mapStateToProps = ({auth}) => ({auth});\n\nconst mapDispatchToProps = (dispatch) => ({\n    \"authActions\": bindActionCreators(authActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(LoginPage));\n"]},"metadata":{},"sourceType":"module"}