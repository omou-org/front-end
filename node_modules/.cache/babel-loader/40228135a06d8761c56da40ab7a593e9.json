{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/ProfileCard.js\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Card, Paper, Typography } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { withRouter } from \"react-router-dom\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport PhoneIcon from \"@material-ui/icons/PhoneOutlined\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\nimport { ReactComponent as IDIcon } from \"@svgr/webpack?-svgo,+ref!../../identifier.svg\";\nimport { stringToColor } from \"./accountUtils\";\nimport { addDashes } from \"./accountUtils\";\nimport './Accounts.scss';\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass ProfileCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      usersList: [],\n      viewToggle: true // true = list, false = card view\n\n    };\n  }\n\n  componentWillMount() {}\n\n  goToRoute(route) {\n    this.props.history.push(this.props.match.url + route);\n  }\n\n  render() {\n    const styles = username => ({\n      \"backgroundColor\": stringToColor(username),\n      \"color\": \"white\",\n      \"width\": \"7vw\",\n      \"height\": \"7vw\",\n      \"fontSize\": \"2vw\",\n      \"margin\": 20\n    });\n\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      className: \"ProfileCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Card, {\n      key: this.props.user.user_id,\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: event => {\n        event.preventDefault();\n        this.goToRoute(\"/\".concat(this.props.user.role, \"/\").concat(this.props.user.user_id));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      component: Hidden,\n      xsDown: true,\n      item: true,\n      xs: 4,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      style: styles(this.props.user.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.props.user.name.match(/\\b(\\w)/g).join(\"\"))), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      component: \"h2\",\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.user.name), React.createElement(Typography, {\n      component: \"p\",\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        cursor: \"pointer\"\n      },\n      className: \"userLabel \".concat(this.props.user.role),\n      label: this.props.user.role.charAt(0).toUpperCase() + this.props.user.role.slice(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      md: 2,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(IDIcon, {\n      width: 22,\n      height: 22,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      md: 10,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"#\", this.props.user.user_id), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      md: 2,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(PhoneIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      md: 10,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, addDashes(this.props.user.phone_number))), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      md: 2,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      md: 10,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.props.user.email)))))))));\n  }\n\n}\n\nProfileCard.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    instructors: state.Users.InstructorList,\n    parents: state.Users.ParentList,\n    students: state.Users.StudentList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfileCard));","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/ProfileCard.js"],"names":["connect","React","Component","BackButton","Grid","Card","Paper","Typography","Tabs","Tab","ListView","CardView","TableHead","TableRow","TableCell","Table","TableBody","CardContent","Button","Chip","CardActions","withRouter","EmailIcon","PhoneIcon","Hidden","stringToColor","addDashes","Avatar","ProfileCard","constructor","props","state","value","usersList","viewToggle","componentWillMount","goToRoute","route","history","push","match","url","render","styles","username","user","user_id","cursor","event","preventDefault","role","name","join","charAt","toUpperCase","slice","marginTop","phone_number","email","propTypes","mapStateToProps","instructors","Users","InstructorList","parents","ParentList","students","StudentList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Card, Paper, Typography } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { withRouter } from \"react-router-dom\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport PhoneIcon from \"@material-ui/icons/PhoneOutlined\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\n\nimport { ReactComponent as IDIcon } from \"../../identifier.svg\";\nimport {stringToColor} from \"./accountUtils\";\nimport {addDashes} from \"./accountUtils\";\n\nimport './Accounts.scss';\n\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass ProfileCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n            usersList: [],\n            viewToggle: true, // true = list, false = card view\n        };\n    }\n\n    componentWillMount() {\n\n    }\n\n    goToRoute(route) {\n        this.props.history.push(this.props.match.url + route);\n    }\n    \n\n    render() {\n        const styles = (username) => ({\n            \"backgroundColor\": stringToColor(username),\n            \"color\": \"white\",\n            \"width\": \"7vw\",\n            \"height\": \"7vw\",\n            \"fontSize\": \"2vw\",\n            \"margin\": 20,\n        });\n\n        return (\n            <Grid item xs={12} md={6} className=\"ProfileCard\">\n                <Card key={this.props.user.user_id}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={(event) => {\n                        event.preventDefault();\n                        this.goToRoute(`/${this.props.user.role}/${this.props.user.user_id}`);\n                    }}>\n                    <Grid container>\n                        <Grid component={Hidden} xsDown item xs={4} md={4}>\n                            <Avatar\n                                style={styles(this.props.user.name)}>{this.props.user.name.match(/\\b(\\w)/g).join(\"\")}\n                            </Avatar>\n                        </Grid>\n                        <Grid item xs={8} md={8}>\n                            <CardContent className={\"text\"}>\n                                <Typography gutterBottom variant={\"h6\"} component={\"h2\"} align={'left'}>\n                                    {this.props.user.name}\n                                </Typography>\n                                <Typography component=\"p\" align={'left'}>\n                                    <Chip\n                                        style={{ cursor: \"pointer\" }}\n                                        className={`userLabel ${this.props.user.role}`}\n                                        label={this.props.user.role.charAt(0).toUpperCase() + this.props.user.role.slice(1)}\n                                    />\n                                </Typography>\n                                <Typography>\n                                    <Grid item xs={12} style={{ marginTop: 10}}>\n                                        <Grid container>\n                                            <Grid item xs={4} md={2} align=\"left\">\n                                                <IDIcon\n                                                    width={22}\n                                                    height={22} />\n                                            </Grid>\n                                            <Grid item xs={8} md={10} align=\"left\">\n                                                #{this.props.user.user_id}\n                                            </Grid>\n                                            <Grid item xs={4} md={2} align=\"left\">\n                                                <PhoneIcon />\n                                            </Grid>\n                                            <Grid item xs={8} md={10} align=\"left\">\n                                                {addDashes(this.props.user.phone_number)}\n                                            </Grid>\n                                        </Grid>\n                                        <Grid container>\n                                            <Grid item xs={4} md={2} align=\"left\">\n                                                <EmailIcon />\n                                            </Grid>\n                                            <Grid item xs={8} md={10} align=\"left\">\n                                                {this.props.user.email}\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Typography>\n                            </CardContent>\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n        )\n    }\n}\n\nProfileCard.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        instructors: state.Users.InstructorList,\n        parents: state.Users.ParentList,\n        students: state.Users.StudentList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProfileCard));\n"]},"metadata":{},"sourceType":"module"}