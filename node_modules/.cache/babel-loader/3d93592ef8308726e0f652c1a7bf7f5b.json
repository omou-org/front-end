{"ast":null,"code":"import _objectSpread from \"/Users/js/Desktop/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Scheduler/Scheduler.js\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport PropTypes, { bool } from \"prop-types\";\nimport React, { Component } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listViewPlugin from \"@fullcalendar/list\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\";\nimport * as calenderActions from \"../../../actions/calenderActions\"; // material-Ui dependencies\n\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftOutlinedIcon from \"@material-ui/icons/ChevronLeftOutlined\";\nimport ChevronRightOutlinedIcon from \"@material-ui/icons/ChevronRightOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DateRangeOutlinedIcon from \"@material-ui/icons/DateRangeOutlined\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport SearchIcon from \"@material-ui/icons/Search\"; // tool tip dependencies\n\nimport tippy from \"tippy.js\";\nimport \"tippy.js/themes/google.css\";\nimport \"./scheduler.scss\";\nimport { GET } from \"../../../actions/actionTypes\";\n\nclass Scheduler extends Component {\n  constructor(props) {\n    super(props);\n    this.calendarComponentRef = React.createRef();\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        \"calendarWeekends\": !this.state.calendarWeekends\n      });\n    };\n\n    this.changeView = value => {\n      const calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.changeView(value);\n      const date = this.currentDate();\n      this.setState({\n        \"viewValue\": value,\n        \"currentDate\": date\n      });\n    };\n\n    this.goToNext = () => {\n      const calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.next();\n      const date = this.currentDate();\n      this.setState({\n        \"currentDate\": date\n      });\n    };\n\n    this.goToPrev = () => {\n      const calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.prev();\n      const date = this.currentDate();\n      this.setState({\n        \"currentDate\": date\n      });\n    };\n\n    this.today = () => {\n      const calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.today();\n      this.currentDate();\n    };\n\n    this.currentDate = () => {\n      const calendarApi = this.calendarComponentRef.current.getApi();\n      const date = calendarApi.view.title;\n      return date;\n    };\n\n    this.changeViewToResource = () => {\n      const calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.changeView(\"resourceTimeline\");\n      this.currentDate();\n      this.setState({\n        \"resourceIcon\": true,\n        \"calendarIcon\": false,\n        \"calendarResources\": this.getRoomResources()\n      });\n    };\n\n    this.changeViewToCalendar = () => {\n      const calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.changeView(\"dayGridMonth\");\n      this.currentDate();\n      this.setState({\n        \"calendarIcon\": true,\n        \"resourceIcon\": false\n      });\n    };\n\n    this.getEvents = () => {\n      const courseKeys = Object.keys(this.props.sessions);\n      const instructorKeys = Object.keys(this.props.instructors); // creates an array from courseKeys [0,1,2,3,...,10]\n\n      const sessionsInViewList = courseKeys.map(courseKey => {\n        // course will get each session and map with courseKey\n        const course = this.props.sessions[courseKey]; // gets the keys to each session that was mapped\n\n        const courseSessionKeys = Object.keys(course); // creates an array that maps through courseSessionKey\n\n        const courseSessions = courseSessionKeys.map(sessionKey => {\n          /*\n           * sessions = sessions from initial state\n           * courseKey is the key value from inital state\n           * sessionKey is the variable named inside the map, this is mapping over each coursekey\n           * session is the matched pairs of course and session objects\n           */\n          const session = this.props.sessions[courseKey][sessionKey];\n          session.title = this.props.courses[session.course_id].title;\n          session.description = this.props.courses[session.course_id].description;\n          session.type = this.props.courses[session.course_id].type;\n          session.resourceId = this.props.courses[session.course_id].room_id;\n          return session;\n        });\n        return courseSessions;\n      });\n      let sessionsInView = [];\n      sessionsInViewList.forEach(sessionsList => {\n        sessionsInView = sessionsInView.concat(sessionsList);\n      });\n      const sessionsInViewWithUrl = sessionsInView.map(el => {\n        const newSessions = _objectSpread({}, el);\n\n        newSessions.url = \"http:/scheduler/view-session/\".concat(newSessions.course_id, \"/\").concat(newSessions.session_id);\n        return newSessions;\n      });\n      return sessionsInViewWithUrl;\n    };\n\n    this.handleFilterChange = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        [name]: event.target.value\n      }));\n      this.filterEvent(event.target.value);\n    };\n\n    this.filterEvent = filterType => {\n      // grabs the array of objects to filter\n      const items = this.getEvents();\n      const newEvents = items.filter(({\n        type\n      }) => type !== filterType);\n      this.setState(prevState => ({\n        \"calendarEvents\": prevState.calendarEvents = newEvents\n      }));\n    };\n\n    this.handleResourceFilterChange = name => event => {\n      this.setState(_objectSpread({}, this.state, {\n        [name]: event.target.value\n      }));\n\n      if (event.target.value === \"R\") {\n        this.setState({\n          \"calendarResources\": this.getRoomResources()\n        });\n      } else {\n        const instructors = this.getInstructorResources();\n        this.setState({\n          \"calendarResources\": instructors\n        });\n      }\n\n      this.setState(prevState => prevState.counter + 1);\n    };\n\n    this.getRoomResources = () => {\n      const courses = Object.values(this.props.courses);\n      const resourceList = courses.map(course => ({\n        \"id\": course.course_id,\n        \"title\": \"Room \".concat(course.room_id)\n      }));\n      return resourceList;\n    };\n\n    this.getInstructorResources = () => {\n      const instructor = Object.values(this.props.instructors);\n      const instructorList = instructor.map(inst => {\n        return {\n          \"id\": inst.user_id,\n          \"title\": inst.name\n        };\n      });\n      return instructorList;\n    };\n\n    this.state = {\n      \"calendarWeekends\": true,\n      \"calendarResources\": [],\n      \"calendarEvents\": [],\n      \"currentDate\": \"\",\n      \"viewValue\": \"\",\n      \"filterValue\": \"C\",\n      \"resourceFilterValue\": \"R\",\n      \"calendarIcon\": true,\n      \"resourceIcon\": false\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      \"calendarEvents\": this.getEvents()\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      \"currentDate\": this.currentDate()\n    });\n  } // the eventRender function handles the tooltip\n\n\n  handleToolTip(info) {\n    function truncate(string) {\n      const numberOfCharRemoved = 88;\n\n      if (string.length > numberOfCharRemoved) {\n        return string.substring(0, numberOfCharRemoved) + '...';\n      } else {\n        return string;\n      }\n    }\n\n    new tippy(info.el, {\n      \"content\": \"\\n            <div class=\\\"toolTip\\\">\\n            <div class='title'><h3> \".concat(info.event.title, \" </h3></div>\\n            <div class=\\\"container\\\">\\n            <div class='clock'><span class='clock_icon'>  \").concat(new Date(info.event.start).toDateString().slice(0, 10), \"</span></div>\\n            <span>\\n            \").concat(info.event.extendedProps.type, \"\\n            </span>\\n            <div class='pin_icon'><span class=''>Room # \").concat(info.event.extendedProps.room_id, \"</span></div>\\n            <div class='teacher_icon'><span class=''>\").concat(info.event.extendedProps.instructor ? info.event.extendedProps.instructor : \"No teacher Yet\", \"</span></div>\\n            <div class='discription_icon'><span class='description-text'>\").concat(truncate(info.event.extendedProps.description), \"</span></div>\\n            </div>\\n        </div>\\n            \"),\n      \"theme\": \"light\",\n      \"placement\": \"right\",\n      \"interactive\": true\n    });\n  } // full Calendar API used to change calendar views\n\n\n  render() {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"demo-app-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: \"left\",\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Scheduler\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      alignItems: \"center\",\n      className: \"scheduler-header\",\n      container: true,\n      direction: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: this.state.calendarIcon ? \"primary\" : \"\",\n      onClick: this.changeViewToCalendar,\n      className: 'calendar-icon',\n      \"aria-label\": \"next-month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(DateRangeOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"next-month\",\n      className: 'resource-icon',\n      color: this.state.resourceIcon ? \"primary\" : \"\",\n      onClick: this.changeViewToResource,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(ViewListIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.goToNext,\n      className: 'next-month',\n      \"aria-label\": \"next-month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, this.state.calendarIcon ? React.createElement(FormControl, {\n      className: \"filter-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"filter-class-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(Select, {\n      inputProps: {\n        name: 'filterValue',\n        id: 'filter-class-type'\n      },\n      native: true,\n      onChange: this.handleFilterChange('filterValue'),\n      value: this.state.filterValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Class\"), React.createElement(\"option\", {\n      value: \"T\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Tutor\"))) : React.createElement(FormControl, {\n      className: \"filter-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"filter-resource-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }), React.createElement(Select, {\n      inputProps: {\n        name: 'resourceFilterValue',\n        id: 'filter-resource-type'\n      },\n      native: true,\n      onChange: this.handleResourceFilterChange('resourceFilterValue'),\n      value: this.state.resourceFilterValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"R\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Room\"), React.createElement(\"option\", {\n      value: \"I\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Instructors\")))), React.createElement(Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"prev-month\",\n      className: 'prev-month',\n      onClick: this.goToPrev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(ChevronLeftOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"  \", this.state.currentDate, \" \")), React.createElement(Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"next-month\",\n      className: 'next-month',\n      onClick: this.goToNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(ChevronRightOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      md: 2,\n      lg: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: \"change-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"change-view-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), React.createElement(Select, {\n      inputProps: {\n        name: 'viewValue',\n        id: 'change-view-select'\n      },\n      native: true,\n      onChange: event => this.changeView(event.target.value),\n      value: this.state.viewValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"timeGridDay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"option\", {\n      value: \"dayGridWeek\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Week\"), React.createElement(\"option\", {\n      value: \"dayGridMonth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Month\")))), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.changeViewToCalendar();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Calendar\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.changeViewToResource();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Resource\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), React.createElement(FullCalendar, {\n      defaultView: \"timeGridDay\",\n      displayEventTime: true,\n      eventColor: \"none\",\n      eventLimit: 4,\n      eventMouseEnter: this.handleToolTip,\n      eventSources: [{\n        events: this.state.calendarEvents,\n        color: '#6FB87B'\n      }],\n      header: false,\n      nowIndicator: true,\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listViewPlugin, resourceTimelinePlugin],\n      ref: this.calendarComponentRef,\n      resourceAreaWidth: '20%',\n      resourceOrder: 'title',\n      resources: this.state.calendarResources,\n      schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',\n      timeZone: 'local',\n      weekends: this.state.calendarWeekends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nScheduler.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    \"courses\": state.Course.NewCourseList,\n    \"sessions\": state.Course.CourseSessions,\n    \"instructors\": state.Users.InstructorList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    \"calenderActions\": bindActionCreators(calenderActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Scheduler);","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Scheduler/Scheduler.js"],"names":["connect","bindActionCreators","PropTypes","bool","React","Component","FullCalendar","dayGridPlugin","timeGridPlugin","listViewPlugin","interactionPlugin","resourceTimelinePlugin","calenderActions","Button","makeStyles","Typography","Grid","FormControl","Select","InputLabel","IconButton","ChevronLeftOutlinedIcon","ChevronRightOutlinedIcon","Paper","DateRangeOutlinedIcon","ViewListIcon","SearchIcon","tippy","GET","Scheduler","constructor","props","calendarComponentRef","createRef","toggleWeekends","setState","state","calendarWeekends","changeView","value","calendarApi","current","getApi","date","currentDate","goToNext","next","goToPrev","prev","today","view","title","changeViewToResource","getRoomResources","changeViewToCalendar","getEvents","courseKeys","Object","keys","sessions","instructorKeys","instructors","sessionsInViewList","map","courseKey","course","courseSessionKeys","courseSessions","sessionKey","session","courses","course_id","description","type","resourceId","room_id","sessionsInView","forEach","sessionsList","concat","sessionsInViewWithUrl","el","newSessions","url","session_id","handleFilterChange","name","event","target","filterEvent","filterType","items","newEvents","filter","prevState","calendarEvents","handleResourceFilterChange","getInstructorResources","counter","values","resourceList","instructor","instructorList","inst","user_id","componentWillMount","componentDidMount","handleToolTip","info","truncate","string","numberOfCharRemoved","length","substring","Date","start","toDateString","slice","extendedProps","render","calendarIcon","resourceIcon","id","filterValue","resourceFilterValue","viewValue","events","color","calendarResources","propTypes","mapStateToProps","Course","NewCourseList","CourseSessions","Users","InstructorList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport PropTypes, {bool} from \"prop-types\";\nimport React, {Component} from \"react\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listViewPlugin from \"@fullcalendar/list\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\";\n\nimport * as calenderActions from \"../../../actions/calenderActions\";\n\n// material-Ui dependencies\n\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftOutlinedIcon from \"@material-ui/icons/ChevronLeftOutlined\";\nimport ChevronRightOutlinedIcon from \"@material-ui/icons/ChevronRightOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DateRangeOutlinedIcon from \"@material-ui/icons/DateRangeOutlined\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n// tool tip dependencies\nimport tippy from \"tippy.js\";\nimport \"tippy.js/themes/google.css\";\nimport \"./scheduler.scss\";\nimport {GET} from \"../../../actions/actionTypes\";\n\n\nclass Scheduler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"calendarWeekends\": true,\n            \"calendarResources\": [],\n            \"calendarEvents\": [],\n            \"currentDate\": \"\",\n            \"viewValue\": \"\",\n            \"filterValue\": \"C\",\n            \"resourceFilterValue\": \"R\",\n            \"calendarIcon\": true,\n            \"resourceIcon\": false,\n\n        };\n    }\n\n    calendarComponentRef = React.createRef();\n\n    componentWillMount() {\n        this.setState({\n            \"calendarEvents\": this.getEvents(),\n        });\n    }\n\n    componentDidMount() {\n        this.setState({\n            \"currentDate\": this.currentDate(),\n        });\n    }\n\n    // the eventRender function handles the tooltip\n    handleToolTip(info) {\n        function truncate(string) {\n            const numberOfCharRemoved = 88;\n            if (string.length > numberOfCharRemoved) {return string.substring(0, numberOfCharRemoved) + '...';}\n            else {return string;}\n        }\n\n\n\n        new tippy(info.el, {\n            \"content\": `\n            <div class=\"toolTip\">\n            <div class='title'><h3> ${info.event.title} </h3></div>\n            <div class=\"container\">\n            <div class='clock'><span class='clock_icon'>  ${new Date(info.event.start).toDateString()\n                    .slice(0, 10)}</span></div>\n            <span>\n            ${info.event.extendedProps.type}\n            </span>\n            <div class='pin_icon'><span class=''>Room # ${info.event.extendedProps.room_id}</span></div>\n            <div class='teacher_icon'><span class=''>${info.event.extendedProps.instructor ? info.event.extendedProps.instructor : \"No teacher Yet\"}</span></div>\n            <div class='discription_icon'><span class='description-text'>${truncate(info.event.extendedProps.description)}</span></div>\n            </div>\n        </div>\n            `,\n            \"theme\": \"light\",\n            \"placement\": \"right\",\n            \"interactive\": true,\n        });\n    }\n\n\n    // full Calendar API used to change calendar views\n    toggleWeekends = () => {\n        this.setState({ // update a property\n            \"calendarWeekends\": !this.state.calendarWeekends,\n        });\n    };\n\n    // change from day,week, and month views\n    changeView = (value) => {\n        const calendarApi = this.calendarComponentRef.current.getApi();\n        calendarApi.changeView(value);\n        const date = this.currentDate();\n        this.setState({\n            \"viewValue\": value,\n            \"currentDate\": date,\n        });\n    }\n\n    goToNext = () => {\n        const calendarApi = this.calendarComponentRef.current.getApi();\n\n        calendarApi.next();\n        const date = this.currentDate();\n        this.setState({\n            \"currentDate\": date,\n        });\n    }\n\n    goToPrev = () => {\n        const calendarApi = this.calendarComponentRef.current.getApi();\n        calendarApi.prev();\n        const date = this.currentDate();\n        this.setState({\n            \"currentDate\": date,\n        });\n    }\n\n    today = () => {\n        const calendarApi = this.calendarComponentRef.current.getApi();\n        calendarApi.today();\n        this.currentDate();\n    }\n\n    currentDate = () => {\n        const calendarApi = this.calendarComponentRef.current.getApi();\n        const date = calendarApi.view.title;\n        return date;\n    }\n\n    // this function changes the resouce view when click as well as change the color of the icon\n    changeViewToResource = () => {\n        const calendarApi = this.calendarComponentRef.current.getApi();\n        calendarApi.changeView(\"resourceTimeline\");\n        this.currentDate();\n        this.setState({\n            \"resourceIcon\": true,\n            \"calendarIcon\": false,\n            \"calendarResources\": this.getRoomResources(),\n        });\n    }\n\n    changeViewToCalendar = () => {\n        const calendarApi = this.calendarComponentRef.current.getApi();\n        calendarApi.changeView(\"dayGridMonth\");\n        this.currentDate();\n        this.setState({\n            \"calendarIcon\": true,\n            \"resourceIcon\": false,\n        });\n    }\n\n    // function to parse the inital state into data that full calendar could\n    getEvents = () => {\n        const courseKeys = Object.keys(this.props.sessions);\n        const instructorKeys = Object.keys(this.props.instructors);\n\n\n        // creates an array from courseKeys [0,1,2,3,...,10]\n        const sessionsInViewList = courseKeys.map((courseKey) => {\n            // course will get each session and map with courseKey\n            const course = this.props.sessions[courseKey];\n            // gets the keys to each session that was mapped\n            const courseSessionKeys = Object.keys(course);\n            // creates an array that maps through courseSessionKey\n            const courseSessions = courseSessionKeys.map((sessionKey) => {\n                /*\n                 * sessions = sessions from initial state\n                 * courseKey is the key value from inital state\n                 * sessionKey is the variable named inside the map, this is mapping over each coursekey\n                 * session is the matched pairs of course and session objects\n                 */\n                const session = this.props.sessions[courseKey][sessionKey];\n\n                session.title = this.props.courses[session.course_id].title;\n                session.description = this.props.courses[session.course_id].description;\n                session.type = this.props.courses[session.course_id].type;\n                session.resourceId = this.props.courses[session.course_id].room_id;\n\n                return session;\n            });\n            return courseSessions;\n        });\n\n        let sessionsInView = [];\n        sessionsInViewList.forEach((sessionsList) => {\n            sessionsInView = sessionsInView.concat(sessionsList);\n        });\n\n        const sessionsInViewWithUrl = sessionsInView.map((el) => {\n            const newSessions = {...el};\n            newSessions.url = `http:/scheduler/view-session/${newSessions.course_id}/${newSessions.session_id}`;\n            return newSessions;\n        });\n\n        return sessionsInViewWithUrl;\n    }\n\n    // this function is used in material-ui for the eventhandler\n    handleFilterChange = (name) => (event) => {\n        this.setState({\n            ...this.state,\n            [name]: event.target.value,\n        });\n        this.filterEvent(event.target.value);\n    }\n\n    // this will filter out event based on type\n    filterEvent = (filterType) => {\n        // grabs the array of objects to filter\n        const items = this.getEvents();\n        const newEvents = items.filter(({type}) => type !== filterType);\n        this.setState((prevState) => (\n            {\n                \"calendarEvents\": prevState.calendarEvents = newEvents,\n            }));\n    }\n\n    handleResourceFilterChange = (name) => (event) => {\n        this.setState({\n            ...this.state,\n            [name]: event.target.value,\n        });\n        if (event.target.value === \"R\") {\n            this.setState({\n                \"calendarResources\": this.getRoomResources(),\n            });\n        } else {\n            const instructors = this.getInstructorResources();\n            this.setState({\n                \"calendarResources\": instructors,\n            });\n        }\n        this.setState((prevState) => prevState.counter + 1);\n    }\n\n\n    // gets the values of course object\n    getRoomResources = () => {\n        const courses = Object.values(this.props.courses);\n        const resourceList = courses.map((course) => ({\n            \"id\": course.course_id,\n            \"title\": `Room ${course.room_id}`,\n\n        }));\n\n        return resourceList;\n    }\n\n    // gets values of instructors and places them in the resource col\n    getInstructorResources = () => {\n        const instructor = Object.values(this.props.instructors);\n        const instructorList = instructor.map((inst) => {\n            return {\n                \"id\": inst.user_id,\n                \"title\": inst.name,\n            };\n        });\n\n        return instructorList;\n    }\n\n\n    render() {\n        return (\n            <Grid >\n                <Paper className=\"paper\">\n                    <div className=\"demo-app-calendar\">\n                        <Typography align=\"left\" variant=\"h3\">Scheduler</Typography>\n                        <br />\n                        <Grid\n                            alignItems=\"center\"\n                            className=\"scheduler-header\"\n                            container\n                            direction=\"row\">\n                            <Grid item >\n                                <IconButton color={this.state.calendarIcon ? \"primary\" : \"\"}\n                                    onClick={this.changeViewToCalendar}\n                                    className={'calendar-icon'}\n                                    aria-label='next-month'>\n                                    <DateRangeOutlinedIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item >\n                                <IconButton aria-label='next-month' className={'resource-icon'} color={this.state.resourceIcon ? \"primary\" : \"\"} onClick={this.changeViewToResource}>\n                                    <ViewListIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item >\n                                <IconButton onClick={this.goToNext}\n                                    className={'next-month'}\n                                    aria-label='next-month'>\n                                    <SearchIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item lg={1} md={1}>\n                                {this.state.calendarIcon\n                                    ? <FormControl className=\"filter-select\">\n                                        <InputLabel htmlFor=\"filter-class-type\" />\n\n                                        <Select\n                                            inputProps={{\n                                                name: 'filterValue',\n                                                id: 'filter-class-type',\n                                            }}\n                                            native\n                                            onChange={this.handleFilterChange('filterValue')}\n                                            value={this.state.filterValue}>\n                                            <option value=\"C\">Class</option>\n                                            <option value=\"T\">Tutor</option>\n                                        </Select>\n                                    </FormControl>\n                                    : <FormControl className=\"filter-select\">\n                                        <InputLabel htmlFor=\"filter-resource-type\" />\n\n                                        <Select\n                                            inputProps={{\n                                                name: 'resourceFilterValue',\n                                                id: 'filter-resource-type',\n                                            }}\n                                            native\n                                            onChange={this.handleResourceFilterChange('resourceFilterValue')}\n                                            value={this.state.resourceFilterValue}>\n                                            <option value=\"R\">Room</option>\n                                            <option value=\"I\">Instructors</option>\n                                        </Select>\n                                    </FormControl>\n                                }\n\n                            </Grid>\n                            <Grid item\n                                lg={1}\n                                md={1}>\n                                <IconButton aria-label=\"prev-month\" className={'prev-month'} onClick={this.goToPrev}>\n                                    <ChevronLeftOutlinedIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item\n                                lg={3}\n                                md={2}>\n                                <Typography variant=\"h6\">  {this.state.currentDate} </Typography>\n                            </Grid>\n                            <Grid item\n                                lg={1}\n                                md={1} >\n                                <IconButton aria-label='next-month' className={'next-month'} onClick={this.goToNext}>\n                                    <ChevronRightOutlinedIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item\n                                md={2}\n                                lg={1}>\n                                <FormControl className=\"change-view\">\n                                    <InputLabel htmlFor=\"change-view-select\" />\n                                    <Select\n                                        inputProps={{\n                                            name: 'viewValue',\n                                            id: 'change-view-select'\n                                        }}\n                                        native\n                                        onChange={(event) => this.changeView(event.target.value)}\n                                        value={this.state.viewValue}>\n                                        <option value=\"timeGridDay\">Day</option>\n                                        <option value=\"dayGridWeek\">Week</option>\n                                        <option value=\"dayGridMonth\">Month</option>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={() => {\n                                        this.changeViewToCalendar()\n                                            ;\n                                    }}>Calendar\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={() => {\n                                        this.changeViewToResource()\n                                            ;\n                                    }}>Resource\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <FullCalendar\n                            defaultView=\"timeGridDay\"\n                            displayEventTime={true}\n                            eventColor={\"none\"}\n                            eventLimit={4}\n                            eventMouseEnter={this.handleToolTip}\n                            eventSources={[\n                                {events: this.state.calendarEvents, color: '#6FB87B'}\n                            ]}\n                            header={false}\n                            nowIndicator={true}\n\n                            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listViewPlugin, resourceTimelinePlugin]}\n                            ref={this.calendarComponentRef}\n                            resourceAreaWidth={'20%'}\n                            resourceOrder={'title'}\n                            resources={this.state.calendarResources}\n                            schedulerLicenseKey={'GPL-My-Project-Is-Open-Source'}\n                            timeZone={'local'}\n                            weekends={this.state.calendarWeekends} />\n                    </div>\n                </Paper >\n            </Grid >\n        );\n    }\n}\n\nScheduler.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        \"courses\": state.Course.NewCourseList,\n        \"sessions\": state.Course.CourseSessions,\n        \"instructors\": state.Users.InstructorList,\n\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        \"calenderActions\": bindActionCreators(calenderActions, dispatch),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Scheduler);\n"]},"metadata":{},"sourceType":"module"}