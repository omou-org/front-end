{"ast":null,"code":"import _slicedToArray from \"/Users/js/Desktop/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/js/Desktop/front-end/src/components/Authentication/LoginPage.js\";\nimport * as authActions from \"../../actions/authActions.js\";\nimport { REQUEST_STARTED } from \"../../actions/apiActions\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\"; // material UI Imports\n\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./LoginPage.scss\";\n\nconst LoginPage = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        savePassword = _useState6[0],\n        setSavePassword = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        emailEmpty = _useState8[0],\n        setEmailEmpty = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        passwordEmpty = _useState10[0],\n        setPasswordEmpty = _useState10[1];\n\n  const handleTextInput = (setter, validator, {\n    target\n  }) => {\n    setter(target.value);\n    props.authActions.resetAttemptStatus();\n    validator(!target.value);\n  };\n\n  const login = () => {\n    props.authActions.login(email, password, savePassword);\n  };\n\n  useEffect(() => {\n    props.setLogin(true);\n    return () => {\n      props.setLogin(false);\n    };\n  });\n  const failedLogin = props.requestStatus.login && props.requestStatus.login !== REQUEST_STARTED && (props.requestStatus.login < 200 || props.requestStatus.login > 200);\n\n  if (props.auth.token) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Grid, {\n    alignItems: \"center\",\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    spacing: 0,\n    style: {\n      \"minHeight\": \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: \"bg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"sign in\")), React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      event.stopPropagation();\n      login();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: \"email\",\n    error: failedLogin || emailEmpty,\n    label: \"E-Mail\",\n    margin: \"dense\",\n    onChange: event => {\n      handleTextInput(setEmail, setEmailEmpty, event);\n    },\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    autoComplete: \"current-password\",\n    className: \"password\",\n    error: failedLogin || passwordEmpty,\n    id: \"standard-password-input\",\n    label: \"Password\",\n    margin: \"normal\",\n    onChange: event => {\n      handleTextInput(setPassword, setPasswordEmpty, event);\n    },\n    type: \"password\",\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: \"remember\",\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: savePassword,\n    onClick: () => {\n      setSavePassword(!savePassword);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), \"Remember me\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"forgot\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"forgotText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Forgot Password?\")))), React.createElement(Button, {\n    className: \"button signIn\",\n    color: \"primary\",\n    disabled: !email || !password,\n    onClick: login,\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"sign in\")), failedLogin && React.createElement(Typography, {\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Invalid credentials\"))));\n};\n\nLoginPage.propTypes = {\n  \"auth\": PropTypes.shape({\n    \"token\": PropTypes.string\n  }),\n  \"authActions\": PropTypes.shape({\n    \"login\": PropTypes.func,\n    \"resetAttemptStatus\": PropTypes.func\n  }),\n  \"setLogin\": PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({\n  auth,\n  RequestStatus\n}) => ({\n  auth,\n  \"requestStatus\": RequestStatus\n});\n\nconst mapDispatchToProps = dispatch => ({\n  \"authActions\": bindActionCreators(authActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/Authentication/LoginPage.js"],"names":["authActions","REQUEST_STARTED","bindActionCreators","connect","Redirect","PropTypes","React","useEffect","useState","Button","Checkbox","Grid","Paper","TextField","Typography","LoginPage","props","email","setEmail","password","setPassword","savePassword","setSavePassword","emailEmpty","setEmailEmpty","passwordEmpty","setPasswordEmpty","handleTextInput","setter","validator","target","value","resetAttemptStatus","login","setLogin","failedLogin","requestStatus","auth","token","event","preventDefault","stopPropagation","propTypes","shape","string","func","isRequired","mapStateToProps","RequestStatus","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import * as authActions from \"../../actions/authActions.js\";\nimport {REQUEST_STARTED} from \"../../actions/apiActions\";\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useState} from \"react\";\n\n\n// material UI Imports\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport \"./LoginPage.scss\";\n\nconst LoginPage = (props) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [savePassword, setSavePassword] = useState(false);\n    const [emailEmpty, setEmailEmpty] = useState(false);\n    const [passwordEmpty, setPasswordEmpty] = useState(false);\n\n    const handleTextInput = (setter, validator, {target}) => {\n        setter(target.value);\n        props.authActions.resetAttemptStatus();\n        validator(!target.value);\n    };\n\n    const login = () => {\n        props.authActions.login(email, password, savePassword);\n    };\n\n    useEffect(() => {\n        props.setLogin(true);\n        return () => {\n            props.setLogin(false);\n        };\n    });\n\n    const failedLogin = props.requestStatus.login &&\n        props.requestStatus.login !== REQUEST_STARTED &&\n        (props.requestStatus.login < 200 || props.requestStatus.login > 200);\n\n    if (props.auth.token) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Grid\n            alignItems=\"center\"\n            container\n            direction=\"column\"\n            justify=\"center\"\n            spacing={0}\n            style={{\n                \"minHeight\": \"100vh\",\n            }}>\n            <Grid\n                item\n                xs={3}>\n                <Paper className=\"bg\">\n                    <Typography\n                        align=\"center\"\n                        color=\"primary\">\n                        <span className=\"header\">sign in</span>\n                    </Typography>\n                    <form onSubmit={(event) => {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        login();\n                    }}>\n                        <TextField\n                            className=\"email\"\n                            error={failedLogin || emailEmpty}\n                            label=\"E-Mail\"\n                            margin=\"dense\"\n                            onChange={(event) => {\n                                handleTextInput(setEmail, setEmailEmpty, event);\n                            }}\n                            value={email} />\n                        <TextField\n                            autoComplete=\"current-password\"\n                            className=\"password\"\n                            error={failedLogin || passwordEmpty}\n                            id=\"standard-password-input\"\n                            label=\"Password\"\n                            margin=\"normal\"\n                            onChange={(event) => {\n                                handleTextInput(setPassword, setPasswordEmpty, event);\n                            }}\n                            type=\"password\"\n                            value={password} />\n                        <Grid container>\n                            <Grid\n                                className=\"remember\"\n                                item>\n                                <label>\n                                    <Checkbox\n                                        checked={savePassword}\n                                        onClick={() => {\n                                            setSavePassword(!savePassword);\n                                        }} />\n                                    Remember me\n                                </label>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    className=\"forgot\"\n                                    color=\"secondary\">\n                                    <span className=\"forgotText\">Forgot Password?</span>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <Button\n                            className=\"button signIn\"\n                            color=\"primary\"\n                            disabled={!email || !password}\n                            onClick={login}\n                            type=\"submit\"\n                            variant=\"contained\">\n                            sign in\n                        </Button>\n                    </form>\n                    {\n                        failedLogin &&\n                        <Typography color=\"error\">\n                            Invalid credentials\n                        </Typography>\n                    }\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nLoginPage.propTypes = {\n    \"auth\": PropTypes.shape({\n        \"token\": PropTypes.string,\n    }),\n    \"authActions\": PropTypes.shape({\n        \"login\": PropTypes.func,\n        \"resetAttemptStatus\": PropTypes.func,\n    }),\n    \"setLogin\": PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({auth, RequestStatus}) => ({\n    auth,\n    \"requestStatus\": RequestStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    \"authActions\": bindActionCreators(authActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginPage);\n"]},"metadata":{},"sourceType":"module"}