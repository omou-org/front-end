{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/StudentInfo.js\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport PhoneIcon from \"@material-ui/icons/PhoneOutlined\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\nimport { ReactComponent as IDIcon } from \"@svgr/webpack?-svgo,+ref!../../../identifier.svg\";\nimport \"../Accounts.scss\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { withRouter } from \"react-router-dom\";\nimport { addDashes, stringToColor } from \"../accountUtils\";\n\nclass StudentInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"student\": this.props.user.student_ids.map(student_id => this.props.students[student_id])\n    };\n  }\n\n  goToRoute(route) {\n    this.props.history.push(route);\n  }\n\n  render() {\n    const styles = username => ({\n      \"backgroundColor\": stringToColor(username),\n      \"color\": \"white\",\n      \"width\": \"7vw\",\n      \"height\": \"7vw\",\n      \"fontSize\": \"2vw\",\n      \"margin\": 20\n    });\n\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 40,\n      alignItems: \"center\",\n      direction: \"row\",\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.student.map(student => React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      className: \"ProfileCard\",\n      key: student.user_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card, {\n      onClick: () => {\n        this.props.history.push(\"/accounts/student/\".concat(student.user_id));\n      },\n      key: student.user_id,\n      style: {\n        \"cursor\": \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      component: Hidden,\n      xsDown: true,\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      style: styles(student.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, student.name.match(/\\b(\\w)/g).join(\"\"))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      component: \"h2\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, student.name), React.createElement(Typography, {\n      component: \"p\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        \"marginLeft\": 0,\n        \"marginTop\": 0\n      },\n      className: \"userLabel \".concat(student.role),\n      label: student.role.charAt(0).toUpperCase() + student.role.slice(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      style: {\n        \"marginTop\": 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      md: 3,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(IDIcon, {\n      width: 22,\n      height: 22,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      md: 9,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"#\", student.user_id), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      md: 3,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(PhoneIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      md: 9,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, addDashes(student.phone_number))), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      md: 3,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      md: 9,\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, student.email)))))))))));\n  }\n\n}\n\nStudentInfo.propTypes = {};\n\nconst mapStateToProps = state => ({\n  \"payments\": state.Payments,\n  \"courses\": state.Course.NewCourseList,\n  \"students\": state.Users.StudentList,\n  \"parents\": state.Users.ParentList\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(StudentInfo));","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/StudentInfo.js"],"names":["connect","React","Component","Grid","Card","CardContent","Typography","EmailIcon","PhoneIcon","Chip","Hidden","Avatar","withRouter","addDashes","stringToColor","StudentInfo","constructor","props","state","user","student_ids","map","student_id","students","goToRoute","route","history","push","render","styles","username","student","user_id","name","match","join","role","charAt","toUpperCase","slice","phone_number","email","propTypes","mapStateToProps","Payments","Course","NewCourseList","Users","StudentList","ParentList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\nimport React, {Component} from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport PhoneIcon from \"@material-ui/icons/PhoneOutlined\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\nimport {ReactComponent as IDIcon} from \"../../../identifier.svg\";\nimport \"../Accounts.scss\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {withRouter} from \"react-router-dom\";\nimport {addDashes, stringToColor} from \"../accountUtils\";\n\n\nclass StudentInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"student\": this.props.user.student_ids\n                .map((student_id) => this.props.students[student_id]),\n        };\n    }\n\n    goToRoute(route) {\n        this.props.history.push(route);\n    }\n\n    render() {\n        const styles = (username) => ({\n            \"backgroundColor\": stringToColor(username),\n            \"color\": \"white\",\n            \"width\": \"7vw\",\n            \"height\": \"7vw\",\n            \"fontSize\": \"2vw\",\n            \"margin\": 20,\n        });\n\n        return (\n            <Grid container spacing={40} alignItems=\"center\" direction=\"row\" item xs={10}>\n                {this.state.student.map((student) =>\n                    <Grid item xs={12} md={6} className=\"ProfileCard\" key={student.user_id}>\n                        <Card\n                            onClick={() => {\n                                this.props.history.push(`/accounts/student/${student.user_id}`);\n                            }}\n                            key={student.user_id}\n                            style={{\n                                \"cursor\": \"pointer\",\n                            }}\n                        >\n                            <Grid container>\n                                <Grid component={Hidden} xsDown item xs={6}>\n                                    <Avatar\n                                        style={styles(student.name)}>\n                                        {student.name.match(/\\b(\\w)/g).join(\"\")}\n                                    </Avatar>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <CardContent className=\"text\">\n                                        <Typography gutterBottom variant=\"h6\" component=\"h2\" align=\"left\">\n                                            {student.name}\n                                        </Typography>\n                                        <Typography component=\"p\" align=\"left\">\n                                            <Chip\n                                                style={{\"marginLeft\": 0, \"marginTop\": 0}}\n                                                className={`userLabel ${student.role}`}\n                                                label={student.role.charAt(0).toUpperCase() + student.role.slice(1)}\n                                            />\n                                        </Typography>\n                                        <Typography>\n                                            <Grid item xs={8} style={{\"marginTop\": 10}}>\n                                                <Grid container>\n                                                    <Grid item xs={6} md={3} align=\"left\">\n                                                        <IDIcon\n                                                            width={22}\n                                                            height={22} />\n                                                    </Grid>\n                                                    <Grid item xs={6} md={9} align=\"left\">\n                                                        #{student.user_id}\n                                                    </Grid>\n                                                    <Grid item xs={6} md={3} align=\"left\">\n                                                        <PhoneIcon />\n                                                    </Grid>\n                                                    <Grid item xs={6} md={9} align=\"left\">\n                                                        {addDashes(student.phone_number)}\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid container>\n                                                    <Grid item xs={6} md={3} align=\"left\">\n                                                        <EmailIcon />\n                                                    </Grid>\n                                                    <Grid item xs={6} md={9} align=\"left\">\n                                                        {student.email}\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Typography>\n                                    </CardContent>\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    </Grid>)}\n            </Grid>\n        );\n    }\n}\n\nStudentInfo.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n    \"payments\": state.Payments,\n    \"courses\": state.Course.NewCourseList,\n    \"students\": state.Users.StudentList,\n    \"parents\": state.Users.ParentList,\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(StudentInfo));\n"]},"metadata":{},"sourceType":"module"}