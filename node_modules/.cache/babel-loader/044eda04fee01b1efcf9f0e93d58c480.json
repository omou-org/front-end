{"ast":null,"code":"import _objectSpread from \"/Users/4e65696c/Documents/GitHub/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actions from \"./../actions/actionTypes\";\nimport initialState from \"./initialState\";\nexport default function auth(state = initialState.Authentication, {\n  payload,\n  type\n}) {\n  switch (type) {\n    case actions.SUCCESSFUL_LOGIN:\n      return onSuccess(state, payload);\n\n    case actions.FAILED_LOGIN:\n      return onFail(state);\n\n    case actions.LOGOUT:\n      return onLogout(state);\n\n    case actions.RESET_ATTEMPT:\n      return resetStatus(state);\n\n    default:\n      return state;\n  }\n}\n\nconst onSuccess = (state, {\n  data,\n  saveLogin\n}) => {\n  if (saveLogin) {\n    localStorage.setItem(\"authToken\", data.token);\n  }\n\n  sessionStorage.setItem(\"authToken\", data.token);\n  return _objectSpread({}, state, {\n    \"token\": data.token,\n    \"failedLogin\": false\n  });\n};\n\nconst onFail = state => _objectSpread({}, state, {\n  \"failedLogin\": true\n});\n\nconst onLogout = state => {\n  sessionStorage.removeItem(\"authToken\");\n  localStorage.removeItem(\"authToken\");\n  return _objectSpread({}, state, {\n    \"token\": null\n  });\n};\n\nconst resetStatus = state => _objectSpread({}, state, {\n  \"failedLogin\": false\n});","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/src/reducers/authReducer.js"],"names":["actions","initialState","auth","state","Authentication","payload","type","SUCCESSFUL_LOGIN","onSuccess","FAILED_LOGIN","onFail","LOGOUT","onLogout","RESET_ATTEMPT","resetStatus","data","saveLogin","localStorage","setItem","token","sessionStorage","removeItem"],"mappings":";AAAA,OAAO,KAAKA,OAAZ,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGF,YAAY,CAACG,cAAnC,EAAmD;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAnD,EAAoE;AAC/E,UAAQA,IAAR;AACI,SAAKN,OAAO,CAACO,gBAAb;AACI,aAAOC,SAAS,CAACL,KAAD,EAAQE,OAAR,CAAhB;;AACJ,SAAKL,OAAO,CAACS,YAAb;AACI,aAAOC,MAAM,CAACP,KAAD,CAAb;;AACJ,SAAKH,OAAO,CAACW,MAAb;AACI,aAAOC,QAAQ,CAACT,KAAD,CAAf;;AACJ,SAAKH,OAAO,CAACa,aAAb;AACI,aAAOC,WAAW,CAACX,KAAD,CAAlB;;AACJ;AACI,aAAOA,KAAP;AAVR;AAYH;;AAED,MAAMK,SAAS,GAAG,CAACL,KAAD,EAAQ;AAACY,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAR,KAA8B;AAC5C,MAAIA,SAAJ,EAAe;AACXC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,IAAI,CAACI,KAAvC;AACH;;AACDC,EAAAA,cAAc,CAACF,OAAf,CAAuB,WAAvB,EAAoCH,IAAI,CAACI,KAAzC;AACA,2BACOhB,KADP;AAEI,aAASY,IAAI,CAACI,KAFlB;AAGI,mBAAe;AAHnB;AAKH,CAVD;;AAYA,MAAMT,MAAM,GAAIP,KAAD,sBACRA,KADQ;AAEX,iBAAe;AAFJ,EAAf;;AAKA,MAAMS,QAAQ,GAAIT,KAAD,IAAW;AACxBiB,EAAAA,cAAc,CAACC,UAAf,CAA0B,WAA1B;AACAJ,EAAAA,YAAY,CAACI,UAAb,CAAwB,WAAxB;AACA,2BACOlB,KADP;AAEI,aAAS;AAFb;AAIH,CAPD;;AASA,MAAMW,WAAW,GAAIX,KAAD,sBACbA,KADa;AAEhB,iBAAe;AAFC,EAApB","sourcesContent":["import * as actions from \"./../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function auth(state = initialState.Authentication, {payload, type}) {\n    switch (type) {\n        case actions.SUCCESSFUL_LOGIN:\n            return onSuccess(state, payload);\n        case actions.FAILED_LOGIN:\n            return onFail(state);\n        case actions.LOGOUT:\n            return onLogout(state);\n        case actions.RESET_ATTEMPT:\n            return resetStatus(state);\n        default:\n            return state;\n    }\n}\n\nconst onSuccess = (state, {data, saveLogin}) => {\n    if (saveLogin) {\n        localStorage.setItem(\"authToken\", data.token);\n    }\n    sessionStorage.setItem(\"authToken\", data.token);\n    return {\n        ...state,\n        \"token\": data.token,\n        \"failedLogin\": false,\n    };\n};\n\nconst onFail = (state) => ({\n    ...state,\n    \"failedLogin\": true,\n});\n\nconst onLogout = (state) => {\n    sessionStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"authToken\");\n    return {\n        ...state,\n        \"token\": null,\n    };\n};\n\nconst resetStatus = (state) => ({\n    ...state,\n    \"failedLogin\": false,\n});\n"]},"metadata":{},"sourceType":"module"}