{"ast":null,"code":"import _objectSpread from \"/Users/4e65696c/Documents/GitHub/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/4e65696c/Documents/GitHub/front-end/src/components/FeatureViews/Registration/CourseCategory.js\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registrationActions from '../../../actions/registrationActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react'; //Material UI Imports\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport BackButton from \"../../BackButton\";\nimport RegistrationActions from \"./RegistrationActions\";\n\nclass CourseCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillMount() {\n    let CategoryInView = this.props.courseCategories.find(category => {\n      return category.id.toString() === this.props.match.params.categoryID;\n    });\n    this.setState(_objectSpread({}, CategoryInView));\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(RegistrationActions //admin={false}\n    , {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))), React.createElement(Paper, {\n      className: \"paper content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(BackButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      style: {\n        fontWeight: 500\n      },\n      variant: 'h4',\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.cat_title)));\n  }\n\n}\n\nCourseCategory.propTypes = {\n  stuffActions: PropTypes.object,\n  RegistrationForms: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    courses: state.Course[\"CourseList\"],\n    courseCategories: state.Course[\"CourseCategories\"],\n    students: state.Users[\"StudentList\"],\n    teachers: state.Users[\"TeacherList\"],\n    parents: state.Users[\"ParentList\"],\n    courseRoster: state.Course[\"CourseRoster\"]\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    registrationActions: bindActionCreators(registrationActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseCategory);","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/src/components/FeatureViews/Registration/CourseCategory.js"],"names":["connect","bindActionCreators","registrationActions","PropTypes","React","Component","Grid","Paper","Typography","BackButton","RegistrationActions","CourseCategory","constructor","props","state","componentWillMount","CategoryInView","courseCategories","find","category","id","toString","match","params","categoryID","setState","render","fontWeight","cat_title","propTypes","stuffActions","object","RegistrationForms","array","mapStateToProps","courses","Course","students","Users","teachers","parents","courseRoster","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registrationActions from '../../../actions/registrationActions';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\n//Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport BackButton from \"../../BackButton\";\nimport RegistrationActions from \"./RegistrationActions\";\n\nclass CourseCategory extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentWillMount() {\n        let CategoryInView = this.props.courseCategories.find((category) => {\n            return category.id.toString() === this.props.match.params.categoryID;\n        });\n        this.setState({ ...CategoryInView });\n    }\n\n    render() {\n        return (\n            <Grid item xs={12}>\n                <Paper className={\"paper\"}>\n                    <Grid item lg={12}>\n                        <RegistrationActions\n                        //admin={false}\n                        />\n                    </Grid>\n                </Paper>\n                <Paper className={\"paper content\"}>\n                    <BackButton />\n                    <Typography style={{ fontWeight: 500 }} variant={'h4'} align={'left'}>\n                        {this.state.cat_title}\n                    </Typography>\n                </Paper>\n            </Grid>\n        )\n    }\n}\n\nCourseCategory.propTypes = {\n    stuffActions: PropTypes.object,\n    RegistrationForms: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        courses: state.Course[\"CourseList\"],\n        courseCategories: state.Course[\"CourseCategories\"],\n        students: state.Users[\"StudentList\"],\n        teachers: state.Users[\"TeacherList\"],\n        parents: state.Users[\"ParentList\"],\n        courseRoster: state.Course[\"CourseRoster\"],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        registrationActions: bindActionCreators(registrationActions, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CourseCategory);"]},"metadata":{},"sourceType":"module"}