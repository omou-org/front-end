{"ast":null,"code":"import _objectSpread from \"/Users/4e65696c/Documents/GitHub/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/4e65696c/Documents/GitHub/front-end/src/components/FeatureViews/Accounts/TabComponents/CourseSessionStatus.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\nimport BackButton from \"../../../BackButton\";\nimport { Link } from \"react-router-dom\";\n\nclass CourseSessionStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillMount() {\n    this.setState(() => {\n      let _this$props$match$par = this.props.match.params,\n          accountID = _this$props$match$par.accountID,\n          courseID = _this$props$match$par.courseID;\n      let calendarSessions = this.props.courseSessions[courseID]; // console.log(this.props.enrollments, accountID, courseID);\n\n      let paymentSessionStatus = this.props.enrollments[accountID][courseID].session_payment_status;\n\n      let statusKey = status => {\n        if (status === 1) {\n          return \"Paid\";\n        } else if (status === 0) {\n          return \"Unpaid\";\n        } else {\n          return \"Waived\";\n        }\n      };\n\n      let course = this.props.courses[courseID];\n\n      if (course.type === \"T\") {\n        calendarSessions = Object.values(calendarSessions).map(session => {\n          return _objectSpread({}, session, {\n            status: statusKey(paymentSessionStatus[session.session_id])\n          });\n        });\n        return {\n          sessions: calendarSessions,\n          type: \"T\",\n          studentID: accountID,\n          course: course\n        };\n      } else {\n        let status = \"Paid\";\n        Object.values(paymentSessionStatus).forEach(session => {\n          if (session === 0) {\n            status = \"Unpaid\";\n          }\n        });\n        return {\n          sessions: [_objectSpread({}, course, {\n            status: status,\n            type: \"C\"\n          })],\n          type: \"C\",\n          course: course,\n          studentID: accountID\n        };\n      }\n    });\n  }\n\n  courseDataParser(course) {\n    let DayConverter = {\n      0: \"Sunday\",\n      1: \"Monday\",\n      2: \"Tuesday\",\n      3: \"Wednesday\",\n      4: \"Thursday\",\n      5: \"Friday\",\n      6: \"Saturday\"\n    };\n    let Days = course.schedule.days.map(day => {\n      return DayConverter[day];\n    });\n    let DaysString = \"\";\n\n    if (Days.length > 1) {\n      Days.forEach(day => {\n        DaysString += day + \", \";\n      });\n    } else {\n      DaysString = Days[0];\n    }\n\n    let timeOptions = {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n    let dateOptions = {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\"\n    };\n    let startDate = new Date(course.schedule.start_date + course.schedule.start_time),\n        endDate = new Date(course.schedule.end_date + course.schedule.end_time),\n        startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n        endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions);\n    startDate = startDate.toLocaleDateString(\"en-US\", dateOptions);\n    endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n    let date = startDate + \" - \" + endDate;\n    return {\n      day: DaysString,\n      startTime: startTime,\n      endTime: endTime,\n      date: date,\n      tuition: course.tuition,\n      status: course.status\n    };\n  }\n\n  sessionDataParse(session) {\n    let start = session.start,\n        end = session.end,\n        course_id = session.course_id,\n        status = session.status;\n    let startDate = new Date(start);\n    let endDate = new Date(end);\n    let timeOptions = {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n    let dateOptions = {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\"\n    };\n    let DayConverter = {\n      0: \"Sunday\",\n      1: \"Monday\",\n      2: \"Tuesday\",\n      3: \"Wednesday\",\n      4: \"Thursday\",\n      5: \"Friday\",\n      6: \"Saturday\"\n    };\n    let day = DayConverter[startDate.getDay()];\n    let startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n        endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions),\n        date = startDate.toLocaleDateString(\"en-US\", dateOptions);\n    let courseTuition = this.props.courses[course_id].tuition;\n    return {\n      day: day,\n      startTime: startTime,\n      endTime: endTime,\n      date: date,\n      tuition: courseTuition,\n      status: status\n    };\n  }\n\n  render() {\n    return React.createElement(Paper, {\n      className: 'paper',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: 'course-session-status',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(BackButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: 'h4',\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.course.title), React.createElement(Typography, {\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Student:\", React.createElement(Link, {\n      to: '/accounts/student/' + this.state.studentID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.props.usersList.StudentList[this.state.studentID].name)), React.createElement(Typography, {\n      align: 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Instructor:\", React.createElement(Link, {\n      to: '/accounts/instructor/' + this.state.course.instructor_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.props.usersList.InstructorList[this.state.course.instructor_id].name))), React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      className: 'accounts-table-heading',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Session Date\")), React.createElement(Grid, {\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Day\")), React.createElement(Grid, {\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Time\")), React.createElement(Grid, {\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Tuition\")), React.createElement(Grid, {\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: 'left',\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Status\")))), React.createElement(Grid, {\n      container: true,\n      spacing: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.state.sessions.length !== 0 ? this.state.sessions.map((session, i) => {\n      let _ref = this.state.type === \"T\" ? this.sessionDataParse(session) : this.courseDataParser(session),\n          day = _ref.day,\n          date = _ref.date,\n          startTime = _ref.startTime,\n          endTime = _ref.endTime,\n          status = _ref.status,\n          tuition = _ref.tuition;\n\n      return React.createElement(Grid, {\n        item: true,\n        md: 12,\n        className: 'accounts-table-row',\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        square: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        md: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, date)), React.createElement(Grid, {\n        item: true,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, day)), React.createElement(Grid, {\n        item: true,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, startTime, \" - \", endTime)), React.createElement(Grid, {\n        item: true,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"$\", tuition)), React.createElement(Grid, {\n        item: true,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sessions-left-chip \".concat(status),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, status)))));\n    }) : React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: 'info',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: {\n        fontWeight: 700\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"No Courses Yet!\"))))));\n  }\n\n}\n\nCourseSessionStatus.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    usersList: state.Users,\n    courseSessions: state.Course.CourseSessions,\n    courses: state.Course.NewCourseList,\n    enrollments: state.Enrollments\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseSessionStatus);","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/src/components/FeatureViews/Accounts/TabComponents/CourseSessionStatus.js"],"names":["connect","React","Component","Grid","Typography","Paper","BackButton","Link","CourseSessionStatus","constructor","props","state","componentWillMount","setState","match","params","accountID","courseID","calendarSessions","courseSessions","paymentSessionStatus","enrollments","session_payment_status","statusKey","status","course","courses","type","Object","values","map","session","session_id","sessions","studentID","forEach","courseDataParser","DayConverter","Days","schedule","days","day","DaysString","length","timeOptions","hour","minute","dateOptions","year","month","startDate","Date","start_date","start_time","endDate","end_date","end_time","startTime","toLocaleTimeString","endTime","toLocaleDateString","date","tuition","sessionDataParse","start","end","course_id","getDay","courseTuition","render","title","usersList","StudentList","name","instructor_id","InstructorList","color","fontWeight","i","propTypes","mapStateToProps","Users","Course","CourseSessions","NewCourseList","Enrollments","mapDispatchToProps","dispatch"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,mBAAN,SAAkCN,SAAlC,CAA4C;AACxCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,QAAL,CAAc,MAAM;AAAA,kCACY,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAD7B;AAAA,UACXC,SADW,yBACXA,SADW;AAAA,UACAC,QADA,yBACAA,QADA;AAEhB,UAAIC,gBAAgB,GAAG,KAAKR,KAAL,CAAWS,cAAX,CAA0BF,QAA1B,CAAvB,CAFgB,CAGhB;;AACA,UAAIG,oBAAoB,GAAG,KAAKV,KAAL,CAAWW,WAAX,CAAuBL,SAAvB,EAAkCC,QAAlC,EAA4CK,sBAAvE;;AACA,UAAIC,SAAS,GAAIC,MAAD,IAAY;AACpB,YAAIA,MAAM,KAAK,CAAf,EAAkB;AACd,iBAAO,MAAP;AACH,SAFD,MAEO,IAAIA,MAAM,KAAK,CAAf,EAAkB;AACrB,iBAAO,QAAP;AACH,SAFM,MAEA;AACH,iBAAO,QAAP;AACH;AACJ,OARL;;AASA,UAAIC,MAAM,GAAG,KAAKf,KAAL,CAAWgB,OAAX,CAAmBT,QAAnB,CAAb;;AACA,UAAGQ,MAAM,CAACE,IAAP,KAAc,GAAjB,EAAqB;AACjBT,QAAAA,gBAAgB,GAAGU,MAAM,CAACC,MAAP,CAAcX,gBAAd,EAAgCY,GAAhC,CAAqCC,OAAD,IAAa;AAChE,mCACOA,OADP;AAEIP,YAAAA,MAAM,EAAED,SAAS,CAACH,oBAAoB,CAACW,OAAO,CAACC,UAAT,CAArB;AAFrB;AAKH,SANkB,CAAnB;AAOA,eAAO;AACHC,UAAAA,QAAQ,EAAEf,gBADP;AAEHS,UAAAA,IAAI,EAAC,GAFF;AAGHO,UAAAA,SAAS,EAAElB,SAHR;AAIHS,UAAAA,MAAM,EAAEA;AAJL,SAAP;AAMH,OAdD,MAcO;AACH,YAAID,MAAM,GAAG,MAAb;AACAI,QAAAA,MAAM,CAACC,MAAP,CAAcT,oBAAd,EAAoCe,OAApC,CAA6CJ,OAAD,IAAW;AACnD,cAAGA,OAAO,KAAK,CAAf,EAAiB;AACbP,YAAAA,MAAM,GAAG,QAAT;AACH;AACJ,SAJD;AAKA,eAAO;AACHS,UAAAA,QAAQ,EAAE,mBAECR,MAFD;AAGFD,YAAAA,MAAM,EAAEA,MAHN;AAIFG,YAAAA,IAAI,EAAE;AAJJ,aADP;AAQHA,UAAAA,IAAI,EAAC,GARF;AASHF,UAAAA,MAAM,EAAEA,MATL;AAUHS,UAAAA,SAAS,EAAElB;AAVR,SAAP;AAYH;AAEJ,KAlDD;AAmDH;;AAEDoB,EAAAA,gBAAgB,CAACX,MAAD,EAAS;AACrB,QAAIY,YAAY,GAAG;AACf,SAAG,QADY;AAEf,SAAG,QAFY;AAGf,SAAG,SAHY;AAIf,SAAG,WAJY;AAKf,SAAG,UALY;AAMf,SAAG,QANY;AAOf,SAAG;AAPY,KAAnB;AASA,QAAIC,IAAI,GAAGb,MAAM,CAACc,QAAP,CAAgBC,IAAhB,CAAqBV,GAArB,CAA0BW,GAAD,IAAS;AACzC,aAAOJ,YAAY,CAACI,GAAD,CAAnB;AACH,KAFU,CAAX;AAGA,QAAIC,UAAU,GAAG,EAAjB;;AACA,QAAGJ,IAAI,CAACK,MAAL,GAAc,CAAjB,EAAmB;AACfL,MAAAA,IAAI,CAACH,OAAL,CAAcM,GAAD,IAAO;AAChBC,QAAAA,UAAU,IAAID,GAAG,GAAG,IAApB;AACH,OAFD;AAGH,KAJD,MAIO;AACHC,MAAAA,UAAU,GAAGJ,IAAI,CAAC,CAAD,CAAjB;AACH;;AAED,QAAIM,WAAW,GAAG;AAACC,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAAlB;AACA,QAAIC,WAAW,GAAG;AAACC,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,KAAK,EAAE,SAAzB;AAAoCR,MAAAA,GAAG,EAAE;AAAzC,KAAlB;AACA,QAAIS,SAAS,GAAG,IAAIC,IAAJ,CAAS1B,MAAM,CAACc,QAAP,CAAgBa,UAAhB,GAA6B3B,MAAM,CAACc,QAAP,CAAgBc,UAAtD,CAAhB;AAAA,QACIC,OAAO,GAAG,IAAIH,IAAJ,CAAS1B,MAAM,CAACc,QAAP,CAAgBgB,QAAhB,GAA2B9B,MAAM,CAACc,QAAP,CAAgBiB,QAApD,CADd;AAAA,QAEIC,SAAS,GAAGP,SAAS,CAACQ,kBAAV,CAA6B,OAA7B,EAAsCd,WAAtC,CAFhB;AAAA,QAGIe,OAAO,GAAGL,OAAO,CAACI,kBAAR,CAA2B,OAA3B,EAAoCd,WAApC,CAHd;AAIAM,IAAAA,SAAS,GAAGA,SAAS,CAACU,kBAAV,CAA6B,OAA7B,EAAsCb,WAAtC,CAAZ;AACAO,IAAAA,OAAO,GAAGA,OAAO,CAACM,kBAAR,CAA2B,OAA3B,EAAoCb,WAApC,CAAV;AAEA,QAAIc,IAAI,GAAGX,SAAS,GAAG,KAAZ,GAAoBI,OAA/B;AAEA,WAAO;AACHb,MAAAA,GAAG,EAAEC,UADF;AAEHe,MAAAA,SAAS,EAAEA,SAFR;AAGHE,MAAAA,OAAO,EAAEA,OAHN;AAIHE,MAAAA,IAAI,EAAEA,IAJH;AAKHC,MAAAA,OAAO,EAAErC,MAAM,CAACqC,OALb;AAMHtC,MAAAA,MAAM,EAAEC,MAAM,CAACD;AANZ,KAAP;AAQH;;AAEDuC,EAAAA,gBAAgB,CAAChC,OAAD,EAAU;AAAA,QACjBiC,KADiB,GACgBjC,OADhB,CACjBiC,KADiB;AAAA,QACVC,GADU,GACgBlC,OADhB,CACVkC,GADU;AAAA,QACLC,SADK,GACgBnC,OADhB,CACLmC,SADK;AAAA,QACM1C,MADN,GACgBO,OADhB,CACMP,MADN;AAEtB,QAAI0B,SAAS,GAAG,IAAIC,IAAJ,CAASa,KAAT,CAAhB;AACA,QAAIV,OAAO,GAAG,IAAIH,IAAJ,CAASc,GAAT,CAAd;AAEA,QAAIrB,WAAW,GAAG;AAACC,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAAlB;AACA,QAAIC,WAAW,GAAG;AAACC,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,KAAK,EAAE,SAAzB;AAAoCR,MAAAA,GAAG,EAAE;AAAzC,KAAlB;AAEA,QAAIJ,YAAY,GAAG;AACf,SAAG,QADY;AAEf,SAAG,QAFY;AAGf,SAAG,SAHY;AAIf,SAAG,WAJY;AAKf,SAAG,UALY;AAMf,SAAG,QANY;AAOf,SAAG;AAPY,KAAnB;AAUA,QAAII,GAAG,GAAGJ,YAAY,CAACa,SAAS,CAACiB,MAAV,EAAD,CAAtB;AAEA,QAAIV,SAAS,GAAGP,SAAS,CAACQ,kBAAV,CAA6B,OAA7B,EAAsCd,WAAtC,CAAhB;AAAA,QACIe,OAAO,GAAGL,OAAO,CAACI,kBAAR,CAA2B,OAA3B,EAAoCd,WAApC,CADd;AAAA,QAEIiB,IAAI,GAAGX,SAAS,CAACU,kBAAV,CAA6B,OAA7B,EAAsCb,WAAtC,CAFX;AAIA,QAAIqB,aAAa,GAAG,KAAK1D,KAAL,CAAWgB,OAAX,CAAmBwC,SAAnB,EAA8BJ,OAAlD;AAEA,WAAO;AACHrB,MAAAA,GAAG,EAACA,GADD;AAEHgB,MAAAA,SAAS,EAAEA,SAFR;AAGHE,MAAAA,OAAO,EAAEA,OAHN;AAIHE,MAAAA,IAAI,EAAEA,IAJH;AAKHC,MAAAA,OAAO,EAAEM,aALN;AAMH5C,MAAAA,MAAM,EAAEA;AANL,KAAP;AAQH;;AAED6C,EAAAA,MAAM,GAAG;AACL,WAAQ,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAE,uBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAMI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,IAArB;AAA2B,MAAA,KAAK,EAAE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK1D,KAAL,CAAWc,MAAX,CAAkB6C,KADvB,CADJ,EAKI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,uBAAqB,KAAK3D,KAAL,CAAWuB,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO,KAAKxB,KAAL,CAAW6D,SAAX,CAAqBC,WAArB,CAAiC,KAAK7D,KAAL,CAAWuB,SAA5C,EAAuDuC,IAD9D,CAFJ,CALJ,EAYI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,0BAAwB,KAAK9D,KAAL,CAAWc,MAAX,CAAkBiD,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO,KAAKhE,KAAL,CAAW6D,SAAX,CAAqBI,cAArB,CAAoC,KAAKhE,KAAL,CAAWc,MAAX,CAAkBiD,aAAtD,EAAqED,IAD5E,CAFJ,CAZJ,CANJ,EA2BI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAE,wBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,MAAnB;AAA2B,MAAA,KAAK,EAAE;AAACG,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAJJ,EASI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,MAAnB;AAA2B,MAAA,KAAK,EAAE;AAACD,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CATJ,EAcI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,MAAnB;AAA2B,MAAA,KAAK,EAAE;AAACD,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAdJ,EAmBI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,MAAnB;AAA2B,MAAA,KAAK,EAAE;AAACD,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAnBJ,EAwBI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,MAAnB;AAA2B,MAAA,KAAK,EAAE;AAACD,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAxBJ,CADJ,CA3BJ,EA2DI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlE,KAAL,CAAWsB,QAAX,CAAoBU,MAApB,KAA+B,CAA/B,GACG,KAAKhC,KAAL,CAAWsB,QAAX,CAAoBH,GAApB,CAAwB,CAACC,OAAD,EAAS+C,CAAT,KAAe;AAAA,iBACoB,KAAKnE,KAAL,CAAWgB,IAAX,KAAoB,GAApB,GACnD,KAAKoC,gBAAL,CAAsBhC,OAAtB,CADmD,GACnB,KAAKK,gBAAL,CAAsBL,OAAtB,CAFD;AAAA,UAC9BU,GAD8B,QAC9BA,GAD8B;AAAA,UACzBoB,IADyB,QACzBA,IADyB;AAAA,UACnBJ,SADmB,QACnBA,SADmB;AAAA,UACRE,OADQ,QACRA,OADQ;AAAA,UACCnC,MADD,QACCA,MADD;AAAA,UACSsC,OADT,QACSA,OADT;;AAGnC,aAAQ,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AACM,QAAA,SAAS,EAAE,oBADjB;AAEM,QAAA,GAAG,EAAEgB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGJ,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKjB,IADL,CADJ,CAFJ,EAOI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKpB,GADL,CADJ,CAPJ,EAYI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKgB,SADL,SACmBE,OADnB,CADJ,CAZJ,EAiBI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACMG,OADN,CADJ,CAjBJ,EAsBI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,+BAAwBtC,MAAxB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,MADL,CADJ,CAtBJ,CADJ,CAHI,CAAR;AAkCH,KArCD,CADH,GAuCG,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACqD,QAAAA,UAAU,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,CAxCR,CA3DJ,CADI,CAAR;AA+GH;;AA3PuC;;AA+P5CrE,mBAAmB,CAACuE,SAApB,GAAgC,EAAhC;;AAEA,SAASC,eAAT,CAAyBrE,KAAzB,EAAgC;AAC5B,SAAO;AACH4D,IAAAA,SAAS,EAAE5D,KAAK,CAACsE,KADd;AAEH9D,IAAAA,cAAc,EAAER,KAAK,CAACuE,MAAN,CAAaC,cAF1B;AAGHzD,IAAAA,OAAO,EAAEf,KAAK,CAACuE,MAAN,CAAaE,aAHnB;AAIH/D,IAAAA,WAAW,EAAEV,KAAK,CAAC0E;AAJhB,GAAP;AAMH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO,EAAP;AACH;;AAED,eAAevF,OAAO,CAClBgF,eADkB,EAElBM,kBAFkB,CAAP,CAGb9E,mBAHa,CAAf","sourcesContent":["import {connect} from 'react-redux';\nimport React, {Component} from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from \"@material-ui/core/Paper\";\nimport BackButton from \"../../../BackButton\";\nimport {Link} from \"react-router-dom\";\n\nclass CourseSessionStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentWillMount() {\n        this.setState(() => {\n            let {accountID, courseID} = this.props.match.params;\n            let calendarSessions = this.props.courseSessions[courseID];\n            // console.log(this.props.enrollments, accountID, courseID);\n            let paymentSessionStatus = this.props.enrollments[accountID][courseID].session_payment_status;\n            let statusKey = (status) => {\n                    if (status === 1) {\n                        return \"Paid\";\n                    } else if (status === 0) {\n                        return \"Unpaid\";\n                    } else {\n                        return \"Waived\";\n                    }\n                };\n            let course = this.props.courses[courseID];\n            if(course.type===\"T\"){\n                calendarSessions = Object.values(calendarSessions).map((session) => {\n                    return {\n                        ...session,\n                        status: statusKey(paymentSessionStatus[session.session_id]),\n\n                    }\n                });\n                return {\n                    sessions: calendarSessions,\n                    type:\"T\",\n                    studentID: accountID,\n                    course: course,\n                };\n            } else {\n                let status = \"Paid\";\n                Object.values(paymentSessionStatus).forEach((session)=>{\n                    if(session === 0){\n                        status = \"Unpaid\";\n                    }\n                });\n                return {\n                    sessions: [\n                        {\n                            ...course,\n                            status: status,\n                            type: \"C\",\n                        }\n                    ],\n                    type:\"C\",\n                    course: course,\n                    studentID: accountID,\n                }\n            }\n\n        })\n    }\n\n    courseDataParser(course) {\n        let DayConverter = {\n            0: \"Sunday\",\n            1: \"Monday\",\n            2: \"Tuesday\",\n            3: \"Wednesday\",\n            4: \"Thursday\",\n            5: \"Friday\",\n            6: \"Saturday\",\n        };\n        let Days = course.schedule.days.map((day) => {\n            return DayConverter[day];\n        });\n        let DaysString = \"\";\n        if(Days.length > 1){\n            Days.forEach((day)=>{\n                DaysString += day + \", \"\n            });\n        } else {\n            DaysString = Days[0];\n        }\n\n        let timeOptions = {hour: \"2-digit\", minute: \"2-digit\"};\n        let dateOptions = {year: \"numeric\", month: \"numeric\", day: \"numeric\"};\n        let startDate = new Date(course.schedule.start_date + course.schedule.start_time),\n            endDate = new Date(course.schedule.end_date + course.schedule.end_time),\n            startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n            endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions);\n        startDate = startDate.toLocaleDateString(\"en-US\", dateOptions);\n        endDate = endDate.toLocaleDateString(\"en-US\", dateOptions);\n\n        let date = startDate + \" - \" + endDate;\n\n        return {\n            day: DaysString,\n            startTime: startTime,\n            endTime: endTime,\n            date: date,\n            tuition: course.tuition,\n            status: course.status,\n        }\n    }\n\n    sessionDataParse(session) {\n        let {start, end, course_id, status} = session;\n        let startDate = new Date(start);\n        let endDate = new Date(end);\n\n        let timeOptions = {hour: \"2-digit\", minute: \"2-digit\"};\n        let dateOptions = {year: \"numeric\", month: \"numeric\", day: \"numeric\"};\n\n        let DayConverter = {\n            0: \"Sunday\",\n            1: \"Monday\",\n            2: \"Tuesday\",\n            3: \"Wednesday\",\n            4: \"Thursday\",\n            5: \"Friday\",\n            6: \"Saturday\",\n        };\n\n        let day = DayConverter[startDate.getDay()];\n\n        let startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n            endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions),\n            date = startDate.toLocaleDateString(\"en-US\", dateOptions);\n\n        let courseTuition = this.props.courses[course_id].tuition;\n\n        return {\n            day:day,\n            startTime: startTime,\n            endTime: endTime,\n            date: date,\n            tuition: courseTuition,\n            status: status,\n        }\n    }\n\n    render() {\n        return (<Paper className={'paper'}>\n            <Grid container className={'course-session-status'}>\n                <Grid item md={12}>\n                    <BackButton/>\n                    <hr/>\n                </Grid>\n\n                <Grid item md={12}>\n                    <Typography variant={'h4'} align={'left'}>\n                        {this.state.course.title}\n                    </Typography>\n\n                    <Typography align={'left'}>\n                        Student:\n                        <Link to={'/accounts/student/'+this.state.studentID}>\n                              {this.props.usersList.StudentList[this.state.studentID].name}\n                        </Link>\n                    </Typography>\n\n                    <Typography align={'left'}>\n                        Instructor:\n                        <Link to={'/accounts/instructor/'+this.state.course.instructor_id}>\n                              {this.props.usersList.InstructorList[this.state.course.instructor_id].name}\n                        </Link>\n                    </Typography>\n\n                </Grid>\n\n                <Grid item md={12}>\n                    <Grid container className={'accounts-table-heading'}>\n                        <Grid item md={1}>\n\n                        </Grid>\n                        <Grid item md={3}>\n                            <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                                Session Date\n                            </Typography>\n                        </Grid>\n                        <Grid item md={2}>\n                            <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                                Day\n                            </Typography>\n                        </Grid>\n                        <Grid item md={2}>\n                            <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                                Time\n                            </Typography>\n                        </Grid>\n                        <Grid item md={2}>\n                            <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                                Tuition\n                            </Typography>\n                        </Grid>\n                        <Grid item md={2}>\n                            <Typography align={'left'} style={{color: 'white', fontWeight: '500'}}>\n                                Status\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={8}>\n                    {this.state.sessions.length !== 0 ?\n                        this.state.sessions.map((session,i) => {\n                            let {day, date, startTime, endTime, status, tuition} = this.state.type === \"T\" ?\n                                this.sessionDataParse(session): this.courseDataParser(session);\n                            return (<Grid item md={12}\n                                          className={'accounts-table-row'}\n                                          key={i}>\n                                <Paper square={true}>\n                                    <Grid container>\n                                        <Grid item md={1}></Grid>\n                                        <Grid item md={3}>\n                                            <Typography align={'left'}>\n                                                {date}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item md={2}>\n                                            <Typography align={'left'}>\n                                                {day}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item md={2}>\n                                            <Typography align={'left'}>\n                                                {startTime} - {endTime}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item md={2}>\n                                            <Typography align={'left'}>\n                                                ${tuition}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item md={2}>\n                                            <div className={`sessions-left-chip ${status}`}>\n                                                {status}\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </Grid>);\n                        }) :\n                        <Grid item md={12}>\n                            <Paper className={'info'}>\n                                <Typography style={{fontWeight: 700}}>\n                                    No Courses Yet!\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                    }\n                </Grid>\n            </Grid>\n        </Paper>)\n    }\n\n}\n\nCourseSessionStatus.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        usersList: state.Users,\n        courseSessions: state.Course.CourseSessions,\n        courses: state.Course.NewCourseList,\n        enrollments: state.Enrollments,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CourseSessionStatus);"]},"metadata":{},"sourceType":"module"}