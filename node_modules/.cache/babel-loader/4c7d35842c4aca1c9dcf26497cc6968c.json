{"ast":null,"code":"var _jsxFileName = \"/Users/4e65696c/Documents/GitHub/front-end/src/components/FeatureViews/Accounts/TabComponents/Notes.js\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport RemoveIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport AlertIcon from \"@material-ui/icons/AddAlertOutlined\";\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n  }\n\n  componentWillMount() {\n    //TODO: notes in descending order\n    this.setState(() => {\n      let notes = Object.keys(this.props.user_notes).map(noteID => {\n        return this.props.user_notes[noteID];\n      });\n      return {\n        notes: notes\n      };\n    });\n  }\n\n  render() {\n    console.log(this.state.notes);\n\n    let numericDateString = date => {\n      let DateObject = new Date(date),\n          numericOptions = {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      };\n      return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n    };\n\n    return React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.notes.map((note, i) => {\n      return React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(AlertIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(RemoveIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        className: \"body\",\n        align: 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, note.body), React.createElement(Typography, {\n        className: \"date\",\n        align: 'right',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, numericDateString(note.timestamp))));\n    })));\n  }\n\n}\n\nNotes.propTypes = {\n  user_notes: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/src/components/FeatureViews/Accounts/TabComponents/Notes.js"],"names":["connect","PropTypes","React","Component","Grid","Typography","Paper","EditIcon","RemoveIcon","AlertIcon","Notes","constructor","props","state","notes","componentWillMount","setState","Object","keys","user_notes","map","noteID","render","console","log","numericDateString","date","DateObject","Date","numericOptions","year","month","day","hour","minute","toLocaleTimeString","note","i","body","timestamp","propTypes","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,sBAAP;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC1BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC;AADG,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB;AACA,SAAKC,QAAL,CAAc,MAAI;AACd,UAAIF,KAAK,GAAGG,MAAM,CAACC,IAAP,CAAY,KAAKN,KAAL,CAAWO,UAAvB,EAAmCC,GAAnC,CAAwCC,MAAD,IAAU;AAC1D,eAAO,KAAKT,KAAL,CAAWO,UAAX,CAAsBE,MAAtB,CAAP;AACF,OAFW,CAAZ;AAGA,aAAO;AACHP,QAAAA,KAAK,EAACA;AADH,OAAP;AAGH,KAPD;AAQH;;AAEDQ,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,KAAvB;;AACA,QAAIW,iBAAiB,GAAIC,IAAD,IAAQ;AAC5B,UAAIC,UAAU,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAjB;AAAA,UACIG,cAAc,GAAG;AACbC,QAAAA,IAAI,EAAE,SADO;AAEbC,QAAAA,KAAK,EAAE,OAFM;AAGbC,QAAAA,GAAG,EAAE,SAHQ;AAIbC,QAAAA,IAAI,EAAE,SAJO;AAKbC,QAAAA,MAAM,EAAE;AALK,OADrB;AAQA,aAAOP,UAAU,CAACQ,kBAAX,CAA8B,OAA9B,EAAuCN,cAAvC,CAAP;AACH,KAVD;;AAWA,WAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAqB,CAACgB,IAAD,EAAMC,CAAN,KAAY;AAC9B,aAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAmB,QAAA,GAAG,EAAEA,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,EAMI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,MAAvB;AAA+B,QAAA,KAAK,EAAE,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACE,IADV,CANJ,EASI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,MAAvB;AAA+B,QAAA,KAAK,EAAE,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKb,iBAAiB,CAACW,IAAI,CAACG,SAAN,CADtB,CATJ,CADG,CAAP;AAeH,KAhBA,CADL,CADG,CAAP;AAqBH;;AAtDyB;;AA0D9B7B,KAAK,CAAC8B,SAAN,GAAkB;AACdrB,EAAAA,UAAU,EAAElB,SAAS,CAACwC;AADR,CAAlB;;AAIA,SAASC,eAAT,CAAyB7B,KAAzB,EAAgC;AAC5B,SAAO,EAAP;AAEH;;AAED,SAAS8B,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO,EAAP;AACH;;AAED,eAAe5C,OAAO,CAClB0C,eADkB,EAElBC,kBAFkB,CAAP,CAGbjC,KAHa,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport \"./TabComponents.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport RemoveIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport AlertIcon from \"@material-ui/icons/AddAlertOutlined\";\n\nclass Notes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes:[],\n        };\n    }\n\n    componentWillMount(){\n        //TODO: notes in descending order\n        this.setState(()=>{\n            let notes = Object.keys(this.props.user_notes).map((noteID)=>{\n               return this.props.user_notes[noteID];\n            });\n            return {\n                notes:notes, \n            }\n        }); \n    }\n\n    render() {\n        console.log(this.state.notes);\n        let numericDateString = (date)=>{\n            let DateObject = new Date(date),\n                numericOptions = {\n                    year: \"numeric\",\n                    month: \"short\",\n                    day: \"numeric\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                };\n            return DateObject.toLocaleTimeString(\"en-US\", numericOptions);\n        };\n        return(<Grid item md={12}>\n            <Grid container spacing={16}>\n                {this.state.notes.map((note,i) => {\n                    return <Grid item xs={3}  key={i}>\n                        <Paper className={\"note\"}>\n                            <div className={\"actions\"}>\n                                <EditIcon/>\n                                <AlertIcon/>\n                                <RemoveIcon/>\n                            </div>\n                            <Typography className={\"body\"} align={'left'}>\n                                {note.body}\n                            </Typography>\n                            <Typography className={\"date\"} align={'right'}>\n                                {numericDateString(note.timestamp)}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                })}\n            </Grid>\n        </Grid>)\n    }\n\n}\n\nNotes.propTypes = {\n    user_notes: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n    return {\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Notes);"]},"metadata":{},"sourceType":"module"}