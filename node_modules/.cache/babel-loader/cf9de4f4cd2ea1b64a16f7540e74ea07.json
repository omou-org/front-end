{"ast":null,"code":"/* validations for various text inputs*/\nexport const InputValidation = (input, type) => {\n  switch (type) {\n    case \"number\":\n      return NumberValidation(input);\n\n    case \"phone number\":\n      return PhoneValidation(input);\n\n    case \"email\":\n      return EmailValidation(input);\n\n    case \"short text\":\n      return ShortTextValidation(input);\n\n    case \"address\":\n      return AddressValidation(input);\n\n    case \"zipcode\":\n      return ZipCodeValidation(input);\n\n    case \"birthday\":\n      return BirthdayValidation(input);\n\n    default:\n      return Boolean(input);\n  }\n}; // simple Numbers (i.e. grade, age, etc.)\n\nexport const NumberValidation = input => Boolean(String(input).match(/^[0-9]{1,5}$/));\n\nconst PhoneValidation = input => Boolean(input.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/));\n\nconst EmailValidation = input => Boolean(input.match(/^(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/)); // short input fields (i.e. name, school, city etc.)\n\n\nconst ShortTextValidation = input => Boolean(input.match(/([A-Za-z ]+)(\" \")?([A-Za-z ]+)?(\" \")?([A-Za-z ]+)?$/)); // address\n\n\nconst AddressValidation = input => Boolean(input.match(/\\d+[ ](?:[A-Za-z0-9.-]+[ ]?)+/)); // zip Code\n\n\nconst ZipCodeValidation = input => Boolean(input.match(/^\\d{5}(?:[-\\s]\\d{4})?$/)); // birthday format to MM/DD/YYYY\n\n\nconst BirthdayValidation = input => Boolean(input.match(/^((0|1)\\d{1})\\/((0|1|2|3)\\d{1})\\/((19|20)\\d{2})/));","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/components/FeatureViews/Registration/Validations.js"],"names":["InputValidation","input","type","NumberValidation","PhoneValidation","EmailValidation","ShortTextValidation","AddressValidation","ZipCodeValidation","BirthdayValidation","Boolean","String","match"],"mappings":"AAAA;AAEA,OAAO,MAAMA,eAAe,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC5C,UAAQA,IAAR;AACI,SAAK,QAAL;AACI,aAAOC,gBAAgB,CAACF,KAAD,CAAvB;;AACJ,SAAK,cAAL;AACI,aAAOG,eAAe,CAACH,KAAD,CAAtB;;AACJ,SAAK,OAAL;AACI,aAAOI,eAAe,CAACJ,KAAD,CAAtB;;AACJ,SAAK,YAAL;AACI,aAAOK,mBAAmB,CAACL,KAAD,CAA1B;;AACJ,SAAK,SAAL;AACI,aAAOM,iBAAiB,CAACN,KAAD,CAAxB;;AACJ,SAAK,SAAL;AACI,aAAOO,iBAAiB,CAACP,KAAD,CAAxB;;AACJ,SAAK,UAAL;AACI,aAAOQ,kBAAkB,CAACR,KAAD,CAAzB;;AACJ;AACI,aAAOS,OAAO,CAACT,KAAD,CAAd;AAhBR;AAkBH,CAnBM,C,CAqBP;;AACA,OAAO,MAAME,gBAAgB,GAAIF,KAAD,IAC5BS,OAAO,CAACC,MAAM,CAACV,KAAD,CAAN,CAAcW,KAAd,CAAoB,cAApB,CAAD,CADJ;;AAGP,MAAMR,eAAe,GAAIH,KAAD,IACpBS,OAAO,CAACT,KAAK,CAACW,KAAN,CAAY,qCAAZ,CAAD,CADX;;AAGA,MAAMP,eAAe,GAAIJ,KAAD,IACpBS,OAAO,CAACT,KAAK,CAACW,KAAN,CAAY,sbAAZ,CAAD,CADX,C,CAGA;;;AACA,MAAMN,mBAAmB,GAAIL,KAAD,IACxBS,OAAO,CAACT,KAAK,CAACW,KAAN,CAAY,qDAAZ,CAAD,CADX,C,CAGA;;;AACA,MAAML,iBAAiB,GAAIN,KAAD,IACtBS,OAAO,CAACT,KAAK,CAACW,KAAN,CAAY,+BAAZ,CAAD,CADX,C,CAGA;;;AACA,MAAMJ,iBAAiB,GAAIP,KAAD,IACtBS,OAAO,CAACT,KAAK,CAACW,KAAN,CAAY,wBAAZ,CAAD,CADX,C,CAGA;;;AACA,MAAMH,kBAAkB,GAAIR,KAAD,IACvBS,OAAO,CAACT,KAAK,CAACW,KAAN,CAAY,iDAAZ,CAAD,CADX","sourcesContent":["/* validations for various text inputs*/\n\nexport const InputValidation = (input, type) => {\n    switch (type) {\n        case \"number\":\n            return NumberValidation(input);\n        case \"phone number\":\n            return PhoneValidation(input);\n        case \"email\":\n            return EmailValidation(input);\n        case \"short text\":\n            return ShortTextValidation(input);\n        case \"address\":\n            return AddressValidation(input);\n        case \"zipcode\":\n            return ZipCodeValidation(input);\n        case \"birthday\":\n            return BirthdayValidation(input);\n        default:\n            return Boolean(input);\n    }\n};\n\n// simple Numbers (i.e. grade, age, etc.)\nexport const NumberValidation = (input) =>\n    Boolean(String(input).match(/^[0-9]{1,5}$/));\n\nconst PhoneValidation = (input) =>\n    Boolean(input.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/));\n\nconst EmailValidation = (input) =>\n    Boolean(input.match(/^(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/));\n\n// short input fields (i.e. name, school, city etc.)\nconst ShortTextValidation = (input) =>\n    Boolean(input.match(/([A-Za-z ]+)(\" \")?([A-Za-z ]+)?(\" \")?([A-Za-z ]+)?$/));\n\n// address\nconst AddressValidation = (input) =>\n    Boolean(input.match(/\\d+[ ](?:[A-Za-z0-9.-]+[ ]?)+/));\n\n// zip Code\nconst ZipCodeValidation = (input) =>\n    Boolean(input.match(/^\\d{5}(?:[-\\s]\\d{4})?$/));\n\n// birthday format to MM/DD/YYYY\nconst BirthdayValidation = (input) =>\n    Boolean(input.match(/^((0|1)\\d{1})\\/((0|1|2|3)\\d{1})\\/((19|20)\\d{2})/));\n"]},"metadata":{},"sourceType":"module"}