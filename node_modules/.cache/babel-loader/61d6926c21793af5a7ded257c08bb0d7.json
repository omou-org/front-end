{"ast":null,"code":"import _objectSpread from \"/Users/js/Desktop/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actions from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\nimport * as api from \"../actions/apiActions\";\nexport default ((state = initialState.RequestStatus, {\n  payload,\n  type\n}) => {\n  let status;\n\n  if (payload && payload.response && payload.response.status) {\n    status = payload.response.status;\n  } else {\n    // general server error\n    status = 500;\n  }\n\n  console.log(type);\n\n  switch (type) {\n    case actions.LOGIN_STARTED:\n      return updateLogin(state, api.REQUEST_STARTED);\n\n    case actions.LOGIN_SUCCESSFUL:\n      return updateLogin(state, status);\n\n    case actions.LOGIN_FAILED:\n      return updateLogin(state, status);\n\n    case actions.RESET_ATTEMPT:\n      return clearLogin(state);\n\n    case actions.LOGOUT:\n      return clearLogin(state);\n\n    case actions.FETCH_COURSES_STARTED:\n      return updateCourseFetch(state, payload.id, api.REQUEST_STARTED);\n\n    case actions.FETCH_COURSES_SUCCESSFUL:\n      return updateCourseFetch(state, payload.id, status);\n\n    case actions.FETCH_COURSES_FAILED:\n      return updateCourseFetch(state, payload.id, status);\n\n    case actions.FETCH_INSTRUCTORS_STARTED:\n      return updateInstructorFetch(state, payload.id, payload.REQUEST_STARTED);\n\n    case actions.FETCH_INSTRUCTORS_SUCCESSFUL:\n      return updateInstructorFetch(state, payload.id, status);\n\n    case actions.FETCH_INSTRUCTORS_FAILED:\n      return updateInstructorFetch(state, payload.id, status);\n\n    default:\n      return state;\n  }\n});\n\nconst clearLogin = state => _objectSpread({}, state, {\n  \"login\": null\n});\n\nconst updateLogin = (state, status) => _objectSpread({}, state, {\n  \"login\": status\n});\n\nconst updateCourseFetch = (state, id, status) => {\n  const newState = _objectSpread({}, state);\n\n  newState.course[actions.GET][id] = status;\n  return newState;\n};\n\nconst updateInstructorFetch = (state, id, status) => {\n  const newState = _objectSpread({}, state);\n\n  newState.instructor[actions.GET][id] = status;\n  return newState;\n};","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/reducers/apiReducer.js"],"names":["actions","initialState","api","state","RequestStatus","payload","type","status","response","console","log","LOGIN_STARTED","updateLogin","REQUEST_STARTED","LOGIN_SUCCESSFUL","LOGIN_FAILED","RESET_ATTEMPT","clearLogin","LOGOUT","FETCH_COURSES_STARTED","updateCourseFetch","id","FETCH_COURSES_SUCCESSFUL","FETCH_COURSES_FAILED","FETCH_INSTRUCTORS_STARTED","updateInstructorFetch","FETCH_INSTRUCTORS_SUCCESSFUL","FETCH_INSTRUCTORS_FAILED","newState","course","GET","instructor"],"mappings":"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","sourcesContent":["import * as actions from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\nimport * as api from \"../actions/apiActions\";\n\nexport default (state = initialState.RequestStatus, {payload, type}) => {\n    let status;\n    if (payload && payload.response && payload.response.status) {\n        ({status} = payload.response);\n    } else {\n        // general server error\n        status = 500;\n    }\n    console.log(type)\n    switch (type) {\n        case actions.LOGIN_STARTED:\n            return updateLogin(state, api.REQUEST_STARTED);\n        case actions.LOGIN_SUCCESSFUL:\n            return updateLogin(state, status);\n        case actions.LOGIN_FAILED:\n            return updateLogin(state, status);\n        case actions.RESET_ATTEMPT:\n            return clearLogin(state);\n        case actions.LOGOUT:\n            return clearLogin(state);\n\n        case actions.FETCH_COURSES_STARTED:\n            return updateCourseFetch(state, payload.id, api.REQUEST_STARTED);\n        case actions.FETCH_COURSES_SUCCESSFUL:\n            return updateCourseFetch(state, payload.id, status);\n        case actions.FETCH_COURSES_FAILED:\n            return updateCourseFetch(state, payload.id, status);\n\n        case actions.FETCH_INSTRUCTORS_STARTED:\n            return updateInstructorFetch(state, payload.id, payload.REQUEST_STARTED);\n        case actions.FETCH_INSTRUCTORS_SUCCESSFUL:\n            return updateInstructorFetch(state, payload.id, status);\n        case actions.FETCH_INSTRUCTORS_FAILED:\n            return updateInstructorFetch(state, payload.id, status);\n\n        default:\n            return state;\n    }\n};\n\nconst clearLogin = (state) => ({\n    ...state,\n    \"login\": null,\n});\n\nconst updateLogin = (state, status) => ({\n    ...state,\n    \"login\": status,\n});\n\nconst updateCourseFetch = (state, id, status) => {\n    const newState = {...state};\n    newState.course[actions.GET][id] = status;\n    return newState;\n};\n\nconst updateInstructorFetch = (state, id, status) => {\n    const newState = {...state};\n    newState.instructor[actions.GET][id] = status;\n    return newState;\n};\n"]},"metadata":{},"sourceType":"module"}