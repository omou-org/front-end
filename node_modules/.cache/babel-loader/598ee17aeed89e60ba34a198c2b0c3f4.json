{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/Accounts.js\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Paper, Typography } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from \"@material-ui/core/Button\";\nimport { withRouter } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport { NavLink } from \"react-router-dom\";\nimport { stringToColor, addDashes } from \"./accountUtils\";\nimport AvatarUtil from \"./AvatarUtil\";\nimport \"./Accounts.scss\";\nimport ProfileCard from \"./ProfileCard\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      usersList: [],\n      viewToggle: true,\n      // true = list, false = card view\n      mobileView: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    let prevState = JSON.parse(sessionStorage.getItem('AccountsState'));\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n\n    if (prevState) {\n      this.setState(prevState);\n    } else {\n      this.setState(() => {\n        let usersList = {};\n        Object.assign(usersList, this.props.parents);\n        Object.assign(usersList, this.props.students);\n        Object.assign(usersList, this.props.instructors);\n        Object.assign(usersList, this.props.receptionist);\n        return {\n          usersList: usersList\n        };\n      });\n    }\n  }\n\n  resize() {\n    const currentHideNav = window.innerWidth <= 800;\n\n    if (currentHideNav !== this.state.mobileView) {\n      this.setState({\n        mobileView: !this.state.mobileView\n      });\n    }\n  }\n\n  goToRoute(route) {\n    this.props.history.push(this.props.match.url + route);\n  }\n\n  handleChange(e, newTabIndex) {\n    e.preventDefault();\n    let newUsersList = [];\n    let usersList = {};\n    Object.assign(usersList, this.props.parents);\n    Object.assign(usersList, this.props.students);\n    Object.assign(usersList, this.props.instructors);\n    Object.assign(usersList, this.props.receptionist);\n\n    switch (newTabIndex) {\n      case 0:\n        newUsersList = usersList;\n        break;\n\n      case 1:\n        newUsersList = this.props.instructors;\n        break;\n\n      case 2:\n        newUsersList = this.props.students;\n        break;\n\n      case 3:\n        newUsersList = this.props.receptionist;\n        break;\n\n      case 4:\n        newUsersList = this.props.parents;\n        break;\n\n      default:\n        newUsersList = usersList;\n    }\n\n    this.setState({\n      value: newTabIndex,\n      usersList: newUsersList\n    }, () => {\n      sessionStorage.setItem('AccountsState', JSON.stringify(this.state));\n    });\n  }\n\n  render() {\n    console.log(this.state.mobileView);\n\n    let tableView = () => React.createElement(Table, {\n      className: \"AccountsTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Email\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Role\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, Object.values(this.state.usersList).map(row => React.createElement(TableRow, {\n      key: row.user_id,\n      onClick: event => {\n        event.preventDefault();\n        this.goToRoute(\"/\".concat(row.role, \"/\").concat(row.user_id));\n      },\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      layout: \"row\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      md: 12,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(AvatarUtil, {\n      profileName: row.name,\n      margin: 9,\n      width: 38,\n      height: 38,\n      fontSize: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      md: 4,\n      lg: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, row.name)))), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, row.email), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, addDashes(row.phone_number)), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, row.role.charAt(0).toUpperCase() + row.role.slice(1)), React.createElement(TableCell, {\n      onClick: event => {\n        event.stopPropagation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      component: Hidden,\n      mdDown: true,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"editButton\",\n      component: NavLink,\n      to: \"/registration/form/\".concat(row.role, \"/\").concat(row.user_id, \"/edit\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \"Edit Profile\")), React.createElement(Grid, {\n      component: Hidden,\n      lgUp: true,\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"editButton\",\n      component: NavLink,\n      to: \"/registration/form/\".concat(row.role, \"/\").concat(row.user_id, \"/edit\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }))))))));\n\n    const cardView = () => {\n      return React.createElement(Grow, {\n        in: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        xs: 12,\n        md: 10,\n        spacing: 8,\n        alignItems: 'center',\n        direction: 'row',\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, Object.values(this.state.usersList).map(user => React.createElement(ProfileCard, {\n        user: user,\n        key: user.user_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))));\n    };\n\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"Accounts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(BackButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h2\",\n      align: \"left\",\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Accounts\"), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: this.state.value,\n      onChange: this.handleChange,\n      indicatorColor: \"primary\",\n      variant: \"scrollable\",\n      textColor: \"primary\",\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"ALL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"INSTRUCTORS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"STUDENTS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"RECEPTIONIST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"PARENTS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))), this.state.mobileView ? '' : React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      md: 1,\n      className: \"toggleView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(ListView, {\n      className: \"list icon \".concat(this.state.viewToggle ? 'active' : ''),\n      onClick: event => {\n        event.preventDefault();\n        this.setState({\n          viewToggle: true\n        }, () => {\n          sessionStorage.setItem('AccountsState', JSON.stringify(this.state));\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(CardView, {\n      className: \"card icon \".concat(this.state.viewToggle ? '' : 'active'),\n      onClick: event => {\n        event.preventDefault();\n        this.setState({\n          viewToggle: false\n        }, () => {\n          sessionStorage.setItem('AccountsState', JSON.stringify(this.state));\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      spacing: 8,\n      className: 'accounts-list-wrapper',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.state.mobileView ? cardView() : this.state.viewToggle ? tableView() : cardView())));\n  }\n\n}\n\nAccounts.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    instructors: state.Users.InstructorList,\n    parents: state.Users.ParentList,\n    students: state.Users.StudentList,\n    receptionist: state.Users.ReceptionistList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Accounts));","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/Accounts.js"],"names":["connect","React","Component","BackButton","Grid","Paper","Typography","Tabs","Tab","ListView","CardView","TableHead","TableRow","TableCell","Table","TableBody","Button","withRouter","EditIcon","NavLink","stringToColor","addDashes","AvatarUtil","ProfileCard","Grow","Hidden","Accounts","constructor","props","state","value","usersList","viewToggle","mobileView","handleChange","bind","componentWillMount","prevState","JSON","parse","sessionStorage","getItem","window","addEventListener","resize","setState","Object","assign","parents","students","instructors","receptionist","currentHideNav","innerWidth","goToRoute","route","history","push","match","url","e","newTabIndex","preventDefault","newUsersList","setItem","stringify","render","console","log","tableView","values","map","row","user_id","event","role","name","email","phone_number","charAt","toUpperCase","slice","stopPropagation","cardView","marginTop","user","propTypes","mapStateToProps","Users","InstructorList","ParentList","StudentList","ReceptionistList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport BackButton from \"../../BackButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Paper, Typography } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ListView from \"@material-ui/icons/ViewList\";\nimport CardView from \"@material-ui/icons/ViewModule\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from \"@material-ui/core/Button\";\nimport { withRouter } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport { NavLink } from \"react-router-dom\";\nimport {stringToColor, addDashes} from \"./accountUtils\";\nimport AvatarUtil from \"./AvatarUtil\";\n\nimport \"./Accounts.scss\";\nimport ProfileCard from \"./ProfileCard\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Hidden from \"@material-ui/core/es/Hidden/Hidden\";\n\nclass Accounts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n            usersList: [],\n            viewToggle: true, // true = list, false = card view\n            mobileView: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentWillMount() {\n        let prevState = JSON.parse(sessionStorage.getItem('AccountsState'));\n        window.addEventListener(\"resize\", this.resize.bind(this));\n        this.resize();\n        if (prevState) {\n            this.setState(prevState);\n\n        } else {\n            this.setState(() => {\n                let usersList = {};\n                Object.assign(usersList, this.props.parents);\n                Object.assign(usersList, this.props.students);\n                Object.assign(usersList, this.props.instructors);\n                Object.assign(usersList, this.props.receptionist);\n                return { usersList: usersList, }\n            });\n        }\n    }\n    resize() {\n        const currentHideNav = (window.innerWidth <= 800);\n        if (currentHideNav !== this.state.mobileView) {\n            this.setState({ mobileView: !this.state.mobileView });\n        }\n    }\n\n    goToRoute(route) {\n        this.props.history.push(this.props.match.url + route);\n    }\n\n    handleChange(e, newTabIndex) {\n        e.preventDefault();\n        let newUsersList = []; \n        let usersList = {};\n        Object.assign(usersList, this.props.parents);\n        Object.assign(usersList, this.props.students);\n        Object.assign(usersList, this.props.instructors);\n        Object.assign(usersList, this.props.receptionist);\n        switch (newTabIndex) {\n            case 0:\n                newUsersList = usersList;\n                break;\n            case 1:\n                newUsersList = this.props.instructors;\n                break;\n            case 2:\n                newUsersList = this.props.students;\n                break;\n            case 3:\n                newUsersList = this.props.receptionist;\n                break;\n            case 4:\n                newUsersList = this.props.parents;\n                break;\n            default:\n                newUsersList = usersList;\n        }\n        this.setState({ value: newTabIndex, usersList: newUsersList },\n            () => {\n                sessionStorage.setItem('AccountsState', JSON.stringify(this.state));\n            }\n        );\n    }\n\n    render() {\n        console.log(this.state.mobileView)\n        let tableView = () => (\n            <Table className=\"AccountsTable\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Email</TableCell>\n                        <TableCell>Phone</TableCell>\n                        <TableCell>Role</TableCell>\n                        <TableCell></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {Object.values(this.state.usersList).map((row) => (\n                        <TableRow key={row.user_id}\n                            onClick={(event) => {\n                                event.preventDefault();\n                                this.goToRoute(`/${row.role}/${row.user_id}`);\n                            }}\n                            className=\"row\">\n                            <TableCell component=\"th\" scope=\"row\">\n                                <Grid container layout={\"row\"} alignItems={\"center\"}>\n                                    <Grid item md={12} lg={4}>\n                                        <AvatarUtil\n                                         profileName={row.name}\n                                         margin={9}\n                                         width={38}\n                                         height={38}\n                                         fontSize={14}\n                                        />\n                                    </Grid>\n                                    <Grid item md={4} lg={8}>\n                                        <Typography>\n                                            {row.name}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </TableCell>\n                            <TableCell>{row.email}</TableCell>\n                            <TableCell>{addDashes(row.phone_number)}</TableCell>\n                            <TableCell>{row.role.charAt(0).toUpperCase() + row.role.slice(1)}</TableCell>\n                            <TableCell onClick={(event) => {\n                                event.stopPropagation();\n                            }}>\n                                <Grid component={Hidden} mdDown align=\"right\">\n                                    <Button\n                                        className=\"editButton\"\n                                        component={NavLink}\n                                        to={`/registration/form/${row.role}/${row.user_id}/edit`}>\n                                        <EditIcon />\n                                        Edit Profile\n                                    </Button>\n                                </Grid>\n                                <Grid component={Hidden} lgUp align=\"right\">\n                                    <Button\n                                        className=\"editButton\"\n                                        component={NavLink}\n                                        to={`/registration/form/${row.role}/${row.user_id}/edit`}>\n                                        <EditIcon />\n                                    </Button>\n                                </Grid>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        );\n\n        const cardView = () => {\n            return <Grow in={true}>\n                <Grid container xs={12} md={10} spacing={8} alignItems={'center'} direction={'row'} style={{ marginTop: 20 }}>\n                    {Object.values(this.state.usersList).map((user) => (\n                        <ProfileCard user={user} key={user.user_id} />))}\n                </Grid>\n            </Grow>\n        };\n\n        return (<Grid item xs={12} className=\"Accounts\">\n            <Paper className={\"paper\"}>\n                <BackButton />\n                <hr />\n                <Typography variant=\"h2\" align={\"left\"} className={\"heading\"}>Accounts</Typography>\n                <Grid container direction={\"row\"} alignItems={\"center\"}>\n                    <Grid item xs={11}>\n                        <Tabs\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            indicatorColor=\"primary\"\n                            variant=\"scrollable\"\n                            textColor=\"primary\"\n                            className={\"tabs\"}\n                        >\n                            <Tab label=\"ALL\" />\n                            <Tab label=\"INSTRUCTORS\" />\n                            <Tab label=\"STUDENTS\" />\n                            <Tab label=\"RECEPTIONIST\" />\n                            <Tab label=\"PARENTS\" />\n                        </Tabs>\n                    </Grid>\n                    {\n                        this.state.mobileView ?\n                            '' :\n                            <Grid item xs={1} md={1} className=\"toggleView\">\n                                <ListView className={`list icon ${this.state.viewToggle ? 'active' : ''}`} onClick={(event) => {\n                                    event.preventDefault();\n                                    this.setState({ viewToggle: true },\n                                        () => { sessionStorage.setItem('AccountsState', JSON.stringify(this.state)); });\n                                }} />\n                                <CardView className={`card icon ${this.state.viewToggle ? '' : 'active'}`} onClick={(event) => {\n                                    event.preventDefault();\n                                    this.setState({ viewToggle: false },\n                                        () => { sessionStorage.setItem('AccountsState', JSON.stringify(this.state)); });\n                                }} />\n                            </Grid>\n                    }\n                </Grid>\n                <Grid container\n                    direction={\"row\"}\n                    alignItems={\"center\"}\n                    spacing={8}\n                    className={'accounts-list-wrapper'}\n                >\n                    {\n                        this.state.mobileView ?\n                            cardView() :\n                            this.state.viewToggle ?\n                                tableView() :\n                                cardView()\n                    }\n                </Grid>\n            </Paper>\n        </Grid>)\n    }\n}\n\nAccounts.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        instructors: state.Users.InstructorList,\n        parents: state.Users.ParentList,\n        students: state.Users.StudentList,\n        receptionist: state.Users.ReceptionistList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Accounts));\n"]},"metadata":{},"sourceType":"module"}