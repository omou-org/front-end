{"ast":null,"code":"/*Validations for various text inputs*/\nexport let InputValidation = (input, type) => {\n  switch (type) {\n    case \"number\":\n      return NumberValidation(input);\n\n    case \"phone number\":\n      return PhoneValidation(input);\n\n    case \"email\":\n      return EmailValidation(input);\n\n    case \"short text\":\n      return ShortTextValidation(input);\n\n    case \"address\":\n      return AddressValidation(input);\n\n    case \"zipcode\":\n      return ZipCodeValidation(input);\n\n    case \"birthday\":\n      return BirthdayValidation(input);\n\n    default:\n      return Boolean(input);\n  }\n}; // Simple Numbers (i.e. grade, age, etc.)\n\nexport let NumberValidation = input => {\n  return !!String(input).match(/^[0-9]{1,5}$/);\n};\n\nlet PhoneValidation = input => {\n  return !!input.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/);\n};\n\nlet EmailValidation = input => {\n  return !!input.match(/^(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/);\n}; // Short input fields (i.e. name, school, city etc.)\n\n\nlet ShortTextValidation = input => {\n  return !!input.match(/([A-Za-z ]+)(\" \")?([A-Za-z ]+)?(\" \")?([A-Za-z ]+)?$/);\n}; // Address\n\n\nlet AddressValidation = input => {\n  // Old regex /\\d{1,5}\\s\\w\\s(\\b\\w*\\b\\s){1,2}?.\\w*/\n  return !!input.match(/\\d+[ ](?:[A-Za-z0-9.-]+[ ]?)+/);\n}; // Zip Code\n\n\nlet ZipCodeValidation = input => {\n  return !!input.match(/^\\d{5}(?:[-\\s]\\d{4})?$/);\n}; // Birthday format to MM/DD/YYYY\n\n\nlet BirthdayValidation = input => {\n  return !!input.match(/^((0|1)\\d{1})\\/((0|1|2)\\d{1})\\/((19|20)\\d{2})/);\n};","map":{"version":3,"sources":["/Users/4e65696c/Documents/GitHub/front-end/omou-frontend/src/components/FeatureViews/Registration/Validations.js"],"names":["InputValidation","input","type","NumberValidation","PhoneValidation","EmailValidation","ShortTextValidation","AddressValidation","ZipCodeValidation","BirthdayValidation","Boolean","String","match"],"mappings":"AAAA;AAEA,OAAO,IAAIA,eAAe,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC1C,UAAQA,IAAR;AACI,SAAK,QAAL;AACI,aAAOC,gBAAgB,CAACF,KAAD,CAAvB;;AACJ,SAAK,cAAL;AACI,aAAOG,eAAe,CAACH,KAAD,CAAtB;;AACJ,SAAK,OAAL;AACI,aAAOI,eAAe,CAACJ,KAAD,CAAtB;;AACJ,SAAK,YAAL;AACI,aAAOK,mBAAmB,CAACL,KAAD,CAA1B;;AACJ,SAAK,SAAL;AACI,aAAOM,iBAAiB,CAACN,KAAD,CAAxB;;AACJ,SAAK,SAAL;AACI,aAAOO,iBAAiB,CAACP,KAAD,CAAxB;;AACJ,SAAK,UAAL;AACI,aAAOQ,kBAAkB,CAACR,KAAD,CAAzB;;AACJ;AACI,aAAOS,OAAO,CAACT,KAAD,CAAd;AAhBR;AAkBH,CAnBM,C,CAqBP;;AACA,OAAO,IAAIE,gBAAgB,GAAIF,KAAD,IAAW;AACrC,SAAO,CAAC,CAACU,MAAM,CAACV,KAAD,CAAN,CAAcW,KAAd,CAAoB,cAApB,CAAT;AACH,CAFM;;AAIP,IAAIR,eAAe,GAAIH,KAAD,IAAW;AAC7B,SAAO,CAAC,CAACA,KAAK,CAACW,KAAN,CAAY,qCAAZ,CAAT;AACH,CAFD;;AAIA,IAAIP,eAAe,GAAIJ,KAAD,IAAW;AAC7B,SAAO,CAAC,CAACA,KAAK,CAACW,KAAN,CAAY,sbAAZ,CAAT;AACH,CAFD,C,CAIA;;;AACA,IAAIN,mBAAmB,GAAIL,KAAD,IAAW;AACjC,SAAO,CAAC,CAACA,KAAK,CAACW,KAAN,CAAY,qDAAZ,CAAT;AACH,CAFD,C,CAIA;;;AACA,IAAIL,iBAAiB,GAAIN,KAAD,IAAW;AAC/B;AACA,SAAO,CAAC,CAACA,KAAK,CAACW,KAAN,CAAY,+BAAZ,CAAT;AAEH,CAJD,C,CAMA;;;AACA,IAAIJ,iBAAiB,GAAIP,KAAD,IAAW;AAC/B,SAAO,CAAC,CAACA,KAAK,CAACW,KAAN,CAAY,wBAAZ,CAAT;AACH,CAFD,C,CAIA;;;AACA,IAAIH,kBAAkB,GAAIR,KAAD,IAAW;AAChC,SAAO,CAAC,CAACA,KAAK,CAACW,KAAN,CAAY,+CAAZ,CAAT;AACH,CAFD","sourcesContent":["/*Validations for various text inputs*/\n\nexport let InputValidation = (input, type) => {\n    switch (type) {\n        case \"number\":\n            return NumberValidation(input);\n        case \"phone number\":\n            return PhoneValidation(input);\n        case \"email\":\n            return EmailValidation(input);\n        case \"short text\":\n            return ShortTextValidation(input);\n        case \"address\":\n            return AddressValidation(input);\n        case \"zipcode\":\n            return ZipCodeValidation(input);\n        case \"birthday\":\n            return BirthdayValidation(input);\n        default:\n            return Boolean(input);\n    }\n};\n\n// Simple Numbers (i.e. grade, age, etc.)\nexport let NumberValidation = (input) => {\n    return !!String(input).match(/^[0-9]{1,5}$/);\n};\n\nlet PhoneValidation = (input) => {\n    return !!input.match(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/);\n};\n\nlet EmailValidation = (input) => {\n    return !!input.match(/^(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/);\n};\n\n// Short input fields (i.e. name, school, city etc.)\nlet ShortTextValidation = (input) => {\n    return !!input.match(/([A-Za-z ]+)(\" \")?([A-Za-z ]+)?(\" \")?([A-Za-z ]+)?$/);\n};\n\n// Address\nlet AddressValidation = (input) => {\n    // Old regex /\\d{1,5}\\s\\w\\s(\\b\\w*\\b\\s){1,2}?.\\w*/\n    return !!input.match(/\\d+[ ](?:[A-Za-z0-9.-]+[ ]?)+/);\n\n};\n\n// Zip Code\nlet ZipCodeValidation = (input) => {\n    return !!input.match(/^\\d{5}(?:[-\\s]\\d{4})?$/)\n}\n\n// Birthday format to MM/DD/YYYY\nlet BirthdayValidation = (input) => {\n    return !!input.match(/^((0|1)\\d{1})\\/((0|1|2)\\d{1})\\/((19|20)\\d{2})/)\n}"]},"metadata":{},"sourceType":"module"}