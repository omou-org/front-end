{"ast":null,"code":"import _objectSpread from \"/Users/js/Desktop/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/PaymentHistory.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { TableBody, TableHead } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nclass PaymentHistory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      payments: []\n    };\n  }\n\n  componentWillMount() {\n    this.setState(() => {\n      let userPayments = Object.keys(this.props.payments[this.props.user_id]).map(courseID => {\n        let coursePayments = this.props.payments[this.props.user_id][courseID];\n        coursePayments = Object.keys(coursePayments).map(subPayID => {\n          return _objectSpread({}, coursePayments[subPayID], {\n            payment_id: this.props.user_id.toString() + courseID.toString() + subPayID.toString(),\n            course_id: courseID\n          });\n        });\n        return coursePayments;\n      });\n      let allUserPayments = [];\n      userPayments.forEach(coursePaymentsList => {\n        allUserPayments = allUserPayments.concat(coursePaymentsList);\n      });\n      return {\n        payments: allUserPayments\n      };\n    });\n  }\n\n  render() {\n    let numericDateString = date => {\n      let DateObject = new Date(date),\n          numericOptions = {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\"\n      };\n      return DateObject.toLocaleDateString(\"en-US\", numericOptions);\n    };\n\n    return React.createElement(Grid, {\n      item: true,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: 'payments-history',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"ID\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Transaction Date\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Course\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Method\")), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.payments.map(payment => {\n      return React.createElement(TableRow, {\n        key: payment.payment_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, payment.payment_id), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, numericDateString(payment.date)), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.props.courses[payment.course_id].title), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, payment.method.charAt(0).toUpperCase() + payment.method.slice(1)));\n    })))));\n  }\n\n}\n\nPaymentHistory.propTypes = {};\n\nfunction mapStateToProps(state) {\n  return {\n    payments: state.Payments,\n    courses: state.Course.NewCourseList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentHistory);","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Accounts/TabComponents/PaymentHistory.js"],"names":["connect","React","Component","Grid","TableBody","TableHead","Table","TableCell","TableRow","Paper","PaymentHistory","constructor","props","state","payments","componentWillMount","setState","userPayments","Object","keys","user_id","map","courseID","coursePayments","subPayID","payment_id","toString","course_id","allUserPayments","forEach","coursePaymentsList","concat","render","numericDateString","date","DateObject","Date","numericOptions","year","month","day","toLocaleDateString","payment","courses","title","method","charAt","toUpperCase","slice","propTypes","mapStateToProps","Payments","Course","NewCourseList","mapDispatchToProps","dispatch"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,mBAAnC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AACnCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,QAAL,CAAc,MAAM;AAChB,UAAIC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKP,KAAL,CAAWE,QAAX,CAAoB,KAAKF,KAAL,CAAWQ,OAA/B,CAAZ,EAAqDC,GAArD,CAA0DC,QAAD,IAAc;AACtF,YAAIC,cAAc,GAAG,KAAKX,KAAL,CAAWE,QAAX,CAAoB,KAAKF,KAAL,CAAWQ,OAA/B,EAAwCE,QAAxC,CAArB;AACAC,QAAAA,cAAc,GAAGL,MAAM,CAACC,IAAP,CAAYI,cAAZ,EAA4BF,GAA5B,CAAiCG,QAAD,IAAc;AAC3D,mCACOD,cAAc,CAACC,QAAD,CADrB;AAEIC,YAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWQ,OAAX,CAAmBM,QAAnB,KAAgCJ,QAAQ,CAACI,QAAT,EAAhC,GAAsDF,QAAQ,CAACE,QAAT,EAFtE;AAGIC,YAAAA,SAAS,EAAEL;AAHf;AAKH,SANgB,CAAjB;AAOA,eAAOC,cAAP;AACH,OAVkB,CAAnB;AAWA,UAAIK,eAAe,GAAG,EAAtB;AACAX,MAAAA,YAAY,CAACY,OAAb,CAAsBC,kBAAD,IAAwB;AACzCF,QAAAA,eAAe,GAAGA,eAAe,CAACG,MAAhB,CAAuBD,kBAAvB,CAAlB;AACH,OAFD;AAGA,aAAO;AACHhB,QAAAA,QAAQ,EAAEc;AADP,OAAP;AAGH,KAnBD;AAoBH;;AAEDI,EAAAA,MAAM,GAAG;AACL,QAAIC,iBAAiB,GAAIC,IAAD,IAAU;AAC9B,UAAIC,UAAU,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAjB;AAAA,UACIG,cAAc,GAAG;AAACC,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,KAAK,EAAE,SAAzB;AAAoCC,QAAAA,GAAG,EAAE;AAAzC,OADrB;AAEA,aAAOL,UAAU,CAACM,kBAAX,CAA8B,OAA9B,EAAuCJ,cAAvC,CAAP;AACH,KAJD;;AAMA,WAAQ,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ,EAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKxB,KAAL,CAAWC,QAAX,CAAoBO,GAApB,CAAyBqB,OAAD,IAAa;AACjC,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,OAAO,CAACjB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKiB,OAAO,CAACjB,UADb,CADG,EAIH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKQ,iBAAiB,CAACS,OAAO,CAACR,IAAT,CADtB,CAJG,EAOH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKtB,KAAL,CAAW+B,OAAX,CAAmBD,OAAO,CAACf,SAA3B,EAAsCiB,KAD3C,CAPG,EAUH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,OAAO,CAACG,MAAR,CAAeC,MAAf,CAAsB,CAAtB,EAAyBC,WAAzB,KAAyCL,OAAO,CAACG,MAAR,CAAeG,KAAf,CAAqB,CAArB,CAD9C,CAVG,CAAP;AAcH,KAfD,CAFR,CAPJ,CADJ,CADI,CAAR;AAgCH;;AAtEkC;;AA0EvCtC,cAAc,CAACuC,SAAf,GAA2B,EAA3B;;AAEA,SAASC,eAAT,CAAyBrC,KAAzB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,QAAQ,EAAED,KAAK,CAACsC,QADb;AAEHR,IAAAA,OAAO,EAAE9B,KAAK,CAACuC,MAAN,CAAaC;AAFnB,GAAP;AAIH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO,EAAP;AACH;;AAED,eAAevD,OAAO,CAClBkD,eADkB,EAElBI,kBAFkB,CAAP,CAGb5C,cAHa,CAAf","sourcesContent":["import {connect} from 'react-redux';\nimport React, {Component} from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport {TableBody, TableHead} from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nclass PaymentHistory extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            payments: [],\n        };\n    }\n\n    componentWillMount() {\n        this.setState(() => {\n            let userPayments = Object.keys(this.props.payments[this.props.user_id]).map((courseID) => {\n                let coursePayments = this.props.payments[this.props.user_id][courseID];\n                coursePayments = Object.keys(coursePayments).map((subPayID) => {\n                    return {\n                        ...coursePayments[subPayID],\n                        payment_id: this.props.user_id.toString() + courseID.toString() + subPayID.toString(),\n                        course_id: courseID,\n                    };\n                });\n                return coursePayments;\n            });\n            let allUserPayments = [];\n            userPayments.forEach((coursePaymentsList) => {\n                allUserPayments = allUserPayments.concat(coursePaymentsList);\n            });\n            return {\n                payments: allUserPayments,\n            };\n        });\n    }\n\n    render() {\n        let numericDateString = (date) => {\n            let DateObject = new Date(date),\n                numericOptions = {year: \"numeric\", month: \"numeric\", day: \"numeric\"};\n            return DateObject.toLocaleDateString(\"en-US\", numericOptions);\n        };\n\n        return (<Grid item md={12}>\n            <Paper className={'payments-history'}>\n                <Table>\n                    <TableHead>\n                        <TableCell>ID</TableCell>\n                        <TableCell>Transaction Date</TableCell>\n                        <TableCell>Course</TableCell>\n                        <TableCell>Method</TableCell>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.state.payments.map((payment) => {\n                                return <TableRow key={payment.payment_id}>\n                                    <TableCell>\n                                        {payment.payment_id}\n                                    </TableCell>\n                                    <TableCell>\n                                        {numericDateString(payment.date)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {this.props.courses[payment.course_id].title}\n                                    </TableCell>\n                                    <TableCell>\n                                        {payment.method.charAt(0).toUpperCase() + payment.method.slice(1)}\n                                    </TableCell>\n                                </TableRow>\n                            })\n                        }\n                    </TableBody>\n                </Table>\n            </Paper>\n        </Grid>)\n    }\n\n}\n\nPaymentHistory.propTypes = {};\n\nfunction mapStateToProps(state) {\n    return {\n        payments: state.Payments,\n        courses: state.Course.NewCourseList,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PaymentHistory);"]},"metadata":{},"sourceType":"module"}