{"ast":null,"code":"import _objectSpread from \"/Users/js/Desktop/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/js/Desktop/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/js/Desktop/front-end/src/components/FeatureViews/Registration/RegistrationCourse.js\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as registrationActions from \"../../../actions/registrationActions\";\nimport PropTypes from \"prop-types\";\nimport React, { useState, Fragment } from \"react\";\nimport BackButton from \"../../BackButton.js\";\nimport RegistrationActions from \"./RegistrationActions\";\nimport \"../../../theme/theme.scss\"; // Material UI Imports\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClassIcon from \"@material-ui/icons/Class\";\nimport { Divider, LinearProgress, TableBody, Typography } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport DownArrow from \"@material-ui/icons/KeyboardArrowDown\";\nimport UpArrow from \"@material-ui/icons/KeyboardArrowUp\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayRounded\";\nimport Button from \"@material-ui/core/Button\";\nimport { NavLink } from \"react-router-dom\";\n\nconst TableToolbar = () => React.createElement(TableHead, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(TableRow, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, [\"Student\", \"Parent\", \"Phone\", \"Status\", \"\"].map(heading => React.createElement(TableCell, {\n  key: heading,\n  align: \"left\",\n  padding: \"default\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, heading))));\n\nconst stringToColor = string => {\n  let hash = 0;\n  let i;\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += \"00\".concat(value.toString(16)).substr(-2);\n  }\n\n  return color;\n};\n\nconst styles = username => ({\n  \"backgroundColor\": stringToColor(username),\n  \"color\": \"white\",\n  \"width\": 38,\n  \"height\": 38,\n  \"fontSize\": 14,\n  \"border\": \"1px solid white\"\n});\n\nconst formatPhone = phone => phone && \"\".concat(phone.slice(0, 3), \"-\").concat(phone.slice(3, 6), \"-\").concat(phone.slice(6, 15));\n\nconst RegistrationCourse = props => {\n  const course = props.courses[props.match.params.courseID];\n\n  const _useState = useState(course.roster.reduce((object, studentID) => _objectSpread({}, object, {\n    [studentID]: false\n  })), {}),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const dayConverter = {\n    \"1\": \"Monday\",\n    \"2\": \"Tuesday\",\n    \"3\": \"Wednesday\",\n    \"4\": \"Thursday\",\n    \"5\": \"Friday\",\n    \"6\": \"Saturday\"\n  };\n  const days = course.schedule.days.map(day => dayConverter[day]);\n  const timeOptions = {\n    \"hour\": \"2-digit\",\n    \"minute\": \"2-digit\"\n  };\n  const dateOptions = {\n    \"year\": \"numeric\",\n    \"month\": \"short\",\n    \"day\": \"numeric\"\n  };\n  const startDate = new Date(course.schedule.start_date + course.schedule.start_time),\n        endDate = new Date(course.schedule.end_date + course.schedule.end_time),\n        startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n        endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions),\n        startDay = startDate.toLocaleDateString(\"en-US\", dateOptions),\n        endDay = endDate.toLocaleDateString(\"en-US\", dateOptions);\n  const instructor = props.instructors[course.instructor_id];\n  const rows = course.roster.map(student_id => {\n    const student = props.students[student_id];\n    const parent = props.parents[student.parent_id];\n    const _props$enrollments$st = props.enrollments[student_id][course.course_id],\n          notes = _props$enrollments$st.notes,\n          session_payment_status = _props$enrollments$st.session_payment_status;\n    const paymentStatus = Object.values(session_payment_status).every(status => status !== 0);\n    return [React.createElement(NavLink, {\n      key: student_id,\n      isActive: () => false,\n      style: {\n        \"textDecoration\": \"none\",\n        \"color\": \"inherit\"\n      },\n      to: \"/accounts/student/\".concat(student_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, student.name), React.createElement(NavLink, {\n      key: student_id,\n      isActive: () => false,\n      style: {\n        \"textDecoration\": \"none\",\n        \"color\": \"inherit\"\n      },\n      to: \"/accounts/parent/\".concat(student.parent_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, parent.name), formatPhone(parent.phone_number), React.createElement(\"div\", {\n      key: student_id,\n      style: {\n        \"padding\": \"5px 0\",\n        \"borderRadius\": \"10px\",\n        \"backgroundColor\": paymentStatus ? \"#28D52A\" : \"#E9515B\",\n        \"textAlign\": \"center\",\n        \"width\": \"7vw\",\n        \"color\": \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, paymentStatus ? \"Paid\" : \"Unpaid\"), React.createElement(\"div\", {\n      key: student_id,\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"mailto:\".concat(parent.email),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(EmailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }))), {\n      notes,\n      student\n    }];\n  });\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: \"paper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(RegistrationActions, {\n    courseTitle: course.course_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }))), React.createElement(Paper, {\n    className: \"paper content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(BackButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"button\",\n    style: {\n      \"padding\": \"6px 10px 6px 10px\",\n      \"backgroundColor\": \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    style: {\n      \"fontSize\": \"16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), \"Edit Course\"))), React.createElement(Divider, {\n    className: \"top-divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"course-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"left\",\n    variant: \"h3\",\n    style: {\n      \"fontWeight\": \"500\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, course.title), React.createElement(\"div\", {\n    className: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(CalendarIcon, {\n    style: {\n      \"fontSize\": \"16\"\n    },\n    align: \"left\",\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    align: \"left\",\n    style: {\n      \"marginLeft\": \"5px\",\n      \"marginTop\": \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, startDay, \" - \", endDay)), React.createElement(\"div\", {\n    className: \"info-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"first-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(ClassIcon, {\n    style: {\n      \"fontSize\": \"16\"\n    },\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    align: \"left\",\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Course Information\")), React.createElement(\"div\", {\n    className: \"second-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    avatar: React.createElement(Avatar, {\n      style: styles(instructor.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, instructor.name.match(/\\b(\\w)/g).join(\"\")),\n    label: instructor.name,\n    component: NavLink,\n    to: \"/accounts/instructor/\".concat(instructor.user_id),\n    className: \"chip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    align: \"left\",\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, startTime, \" - \", endTime), React.createElement(Typography, {\n    align: \"left\",\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, days), React.createElement(Typography, {\n    align: \"left\",\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, course.grade, \" Grade\")))), React.createElement(Typography, {\n    align: \"left\",\n    className: \"description text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, course.description), React.createElement(\"div\", {\n    className: \"course-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, course.roster.length, \" / \", course.capacity, \" Spaces Taken\")), React.createElement(LinearProgress, {\n    color: \"primary\",\n    value: course.roster.length / course.capacity * 100,\n    valueBuffer: 100,\n    variant: \"buffer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  })), React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(TableToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, rows.map((row, i) => React.createElement(Fragment, {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, row.slice(0, 5).map((data, j) => React.createElement(TableCell, {\n    key: j,\n    className: j === 0 ? \"bold\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, data))), expanded[course.roster[i]] && React.createElement(TableRow, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: Typography,\n    style: {\n      \"padding\": \"10px 0 10px 20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      \"padding\": \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, \"School\"), \": \", row[5].student.school, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    style: {\n      \"padding\": \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, \"School Teacher\"), \": \", row[5].notes[\"Current Instructor in School\"], React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    style: {\n      \"padding\": \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"Textbook:\"), \" \", row[5].notes[\"Textbook Used\"], React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }))))))))));\n};\n\nRegistrationCourse.propTypes = {\n  \"stuffActions\": PropTypes.object,\n  \"RegistrationForms\": PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  \"courses\": state.Course[\"NewCourseList\"],\n  \"courseCategories\": state.Course[\"CourseCategories\"],\n  \"students\": state.Users[\"StudentList\"],\n  \"instructors\": state.Users[\"InstructorList\"],\n  \"parents\": state.Users[\"ParentList\"],\n  \"courseRoster\": state.Course[\"CourseRoster\"],\n  \"enrollments\": state.Enrollments\n});\n\nconst mapDispatchToProps = dispatch => ({\n  \"registrationActions\": bindActionCreators(registrationActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationCourse);","map":{"version":3,"sources":["/Users/js/Desktop/front-end/src/components/FeatureViews/Registration/RegistrationCourse.js"],"names":["connect","bindActionCreators","registrationActions","PropTypes","React","useState","Fragment","BackButton","RegistrationActions","Grid","Paper","ClassIcon","Divider","LinearProgress","TableBody","Typography","Avatar","Chip","Table","TableHead","TableRow","TableCell","DownArrow","UpArrow","EmailIcon","EditIcon","CalendarIcon","Button","NavLink","TableToolbar","map","heading","stringToColor","string","hash","i","length","charCodeAt","color","value","toString","substr","styles","username","formatPhone","phone","slice","RegistrationCourse","props","course","courses","match","params","courseID","roster","reduce","object","studentID","expanded","setExpanded","dayConverter","days","schedule","day","timeOptions","dateOptions","startDate","Date","start_date","start_time","endDate","end_date","end_time","startTime","toLocaleTimeString","endTime","startDay","toLocaleDateString","endDay","instructor","instructors","instructor_id","rows","student_id","student","students","parent","parents","parent_id","enrollments","course_id","notes","session_payment_status","paymentStatus","Object","values","every","status","name","phone_number","email","course_title","title","join","user_id","grade","description","capacity","row","data","j","school","propTypes","array","mapStateToProps","state","Course","Users","Enrollments","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAO,KAAKC,mBAAZ,MAAqC,sCAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAO,2BAAP,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAAQC,OAAR,EAAiBC,cAAjB,EAAiCC,SAAjC,EAA4CC,UAA5C,QAA6D,mBAA7D;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;;AAEA,MAAMC,YAAY,GAAG,MACjB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,CAAC,SAAD,EAAY,QAAZ,EAAsB,OAAtB,EAA+B,QAA/B,EAAyC,EAAzC,EAA6CC,GAA7C,CAAkDC,OAAD,IAC9C,oBAAC,SAAD;AACI,EAAA,GAAG,EAAEA,OADT;AAEI,EAAA,KAAK,EAAC,MAFV;AAGI,EAAA,OAAO,EAAC,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIKA,OAJL,CADH,CADL,CADJ,CADJ;;AAeA,MAAMC,aAAa,GAAIC,MAAD,IAAY;AAC9B,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,CAAJ;;AAEA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,MAAM,CAACG,MAAvB,EAA+BD,CAAC,IAAI,CAApC,EAAuC;AACnCD,IAAAA,IAAI,GAAGD,MAAM,CAACI,UAAP,CAAkBF,CAAlB,KAAwB,CAACD,IAAI,IAAI,CAAT,IAAcA,IAAtC,CAAP;AACH;;AAED,MAAII,KAAK,GAAG,GAAZ;;AAEA,OAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACvB,UAAMI,KAAK,GAAIL,IAAI,IAAKC,CAAC,GAAG,CAAd,GAAoB,IAAlC;AACAG,IAAAA,KAAK,IAAI,YAAKC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAL,EAA0BC,MAA1B,CAAiC,CAAC,CAAlC,CAAT;AACH;;AAED,SAAOH,KAAP;AACH,CAhBD;;AAkBA,MAAMI,MAAM,GAAIC,QAAD,KAAe;AAC1B,qBAAmBX,aAAa,CAACW,QAAD,CADN;AAE1B,WAAS,OAFiB;AAG1B,WAAS,EAHiB;AAI1B,YAAU,EAJgB;AAK1B,cAAY,EALc;AAM1B,YAAU;AANgB,CAAf,CAAf;;AASA,MAAMC,WAAW,GAAIC,KAAD,IAAWA,KAAK,cAC7BA,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAD6B,cACRD,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,CAAf,CADQ,cACaD,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,EAAf,CADb,CAApC;;AAGA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClC,QAAMC,MAAM,GAAGD,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,QAAjC,CAAf;;AADkC,oBAEFhD,QAAQ,CACpC4C,MAAM,CAACK,MAAP,CAAcC,MAAd,CAAqB,CAACC,MAAD,EAASC,SAAT,uBACZD,MADY;AACJ,KAACC,SAAD,GAAa;AADT,IAArB,CADoC,EAEI,EAFJ,CAFN;AAAA;AAAA,QAE3BC,QAF2B;AAAA,QAEjBC,WAFiB;;AAOlC,QAAMC,YAAY,GAAG;AACjB,SAAK,QADY;AAEjB,SAAK,SAFY;AAGjB,SAAK,WAHY;AAIjB,SAAK,UAJY;AAKjB,SAAK,QALY;AAMjB,SAAK;AANY,GAArB;AASA,QAAMC,IAAI,GAAGZ,MAAM,CAACa,QAAP,CAAgBD,IAAhB,CAAqB/B,GAArB,CAA0BiC,GAAD,IAASH,YAAY,CAACG,GAAD,CAA9C,CAAb;AAEA,QAAMC,WAAW,GAAG;AAAC,YAAQ,SAAT;AAAoB,cAAU;AAA9B,GAApB;AACA,QAAMC,WAAW,GAAG;AAAC,YAAQ,SAAT;AAAoB,aAAS,OAA7B;AAAsC,WAAO;AAA7C,GAApB;AAEA,QAAMC,SAAS,GAAG,IAAIC,IAAJ,CAASlB,MAAM,CAACa,QAAP,CAAgBM,UAAhB,GACvBnB,MAAM,CAACa,QAAP,CAAgBO,UADF,CAAlB;AAAA,QAEIC,OAAO,GAAG,IAAIH,IAAJ,CAASlB,MAAM,CAACa,QAAP,CAAgBS,QAAhB,GACftB,MAAM,CAACa,QAAP,CAAgBU,QADV,CAFd;AAAA,QAIIC,SAAS,GAAGP,SAAS,CAACQ,kBAAV,CAA6B,OAA7B,EAAsCV,WAAtC,CAJhB;AAAA,QAKIW,OAAO,GAAGL,OAAO,CAACI,kBAAR,CAA2B,OAA3B,EAAoCV,WAApC,CALd;AAAA,QAMIY,QAAQ,GAAGV,SAAS,CAACW,kBAAV,CAA6B,OAA7B,EAAsCZ,WAAtC,CANf;AAAA,QAOIa,MAAM,GAAGR,OAAO,CAACO,kBAAR,CAA2B,OAA3B,EAAoCZ,WAApC,CAPb;AASA,QAAMc,UAAU,GAAG/B,KAAK,CAACgC,WAAN,CAAkB/B,MAAM,CAACgC,aAAzB,CAAnB;AAEA,QAAMC,IAAI,GAAGjC,MAAM,CAACK,MAAP,CAAcxB,GAAd,CAAmBqD,UAAD,IAAgB;AAC3C,UAAMC,OAAO,GAAGpC,KAAK,CAACqC,QAAN,CAAeF,UAAf,CAAhB;AACA,UAAMG,MAAM,GAAGtC,KAAK,CAACuC,OAAN,CAAcH,OAAO,CAACI,SAAtB,CAAf;AAF2C,kCAGHxC,KAAK,CAACyC,WAAN,CAAkBN,UAAlB,EAA8BlC,MAAM,CAACyC,SAArC,CAHG;AAAA,UAGpCC,KAHoC,yBAGpCA,KAHoC;AAAA,UAG7BC,sBAH6B,yBAG7BA,sBAH6B;AAI3C,UAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcH,sBAAd,EAAsCI,KAAtC,CAA6CC,MAAD,IAAYA,MAAM,KAAK,CAAnE,CAAtB;AACA,WAAO,CAEC,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEd,UAAd;AACI,MAAA,QAAQ,EAAE,MAAM,KADpB;AAEI,MAAA,KAAK,EAAE;AACH,0BAAkB,MADf;AAEH,iBAAS;AAFN,OAFX;AAMI,MAAA,EAAE,8BAAuBA,UAAvB,CANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOKC,OAAO,CAACc,IAPb,CAFD,EAaC,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEf,UAAd;AACI,MAAA,QAAQ,EAAE,MAAM,KADpB;AAEI,MAAA,KAAK,EAAE;AACH,0BAAkB,MADf;AAEH,iBAAS;AAFN,OAFX;AAMI,MAAA,EAAE,6BAAsBC,OAAO,CAACI,SAA9B,CANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOKF,MAAM,CAACY,IAPZ,CAbD,EAuBHtD,WAAW,CAAC0C,MAAM,CAACa,YAAR,CAvBR,EAyBC;AACI,MAAA,GAAG,EAAEhB,UADT;AAEI,MAAA,KAAK,EAAE;AACH,mBAAW,OADR;AAEH,wBAAgB,MAFb;AAGH,2BAAmBU,aAAa,GAAG,SAAH,GAAe,SAH5C;AAIH,qBAAa,QAJV;AAKH,iBAAS,KALN;AAMH,iBAAS;AANN,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUKA,aAAa,GAAG,MAAH,GAAY,QAV9B,CAzBD,EAuCC;AAAK,MAAA,GAAG,EAAEV,UAAV;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,mBAAYG,MAAM,CAACc,KAAnB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAvCD,EA6CH;AACIT,MAAAA,KADJ;AAEIP,MAAAA;AAFJ,KA7CG,CAAP;AAkDH,GAvDY,CAAb;AAyDA,SACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,mBAAD;AAAqB,IAAA,WAAW,EAAEnC,MAAM,CAACoD,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,KAAK,EAAE;AACH,iBAAW,mBADR;AAEH,yBAAmB;AAFhB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAC,kBAAY;AAAb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,gBADJ,CAJJ,CADJ,EAiBI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAkBI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,MADV;AAEI,IAAA,OAAO,EAAC,IAFZ;AAGI,IAAA,KAAK,EAAE;AAAC,oBAAc;AAAf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKpD,MAAM,CAACqD,KAJZ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAE;AAAC,kBAAY;AAAb,KADX;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,SAAS,EAAC,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,MADV;AAEI,IAAA,KAAK,EAAE;AACH,oBAAc,KADX;AAEH,mBAAa;AAFV,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMK1B,QANL,SAMkBE,MANlB,CALJ,CAPJ,EAqBI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAC,kBAAY;AAAb,KAAlB;AAAsC,IAAA,SAAS,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,MAAM,EACF,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEpC,MAAM,CAACqC,UAAU,CAACmB,IAAZ,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKnB,UAAU,CAACmB,IAAX,CAAgB/C,KAAhB,CAAsB,SAAtB,EAAiCoD,IAAjC,CAAsC,EAAtC,CADL,CAFR;AAMI,IAAA,KAAK,EAAExB,UAAU,CAACmB,IANtB;AAOI,IAAA,SAAS,EAAEtE,OAPf;AAQI,IAAA,EAAE,iCAA0BmD,UAAU,CAACyB,OAArC,CARN;AASI,IAAA,SAAS,EAAC,MATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAWI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/B,SADL,SACmBE,OADnB,CAXJ,EAcI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,IADL,CAdJ,EAiBI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,MAAM,CAACwD,KADZ,WAjBJ,CAPJ,CArBJ,CAlBJ,EAqEI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAC,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKxD,MAAM,CAACyD,WADZ,CArEJ,EAwEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKzD,MAAM,CAACK,MAAP,CAAclB,MADnB,SAC8Ba,MAAM,CAAC0D,QADrC,kBADJ,CADJ,EAMI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,KAAK,EAAG1D,MAAM,CAACK,MAAP,CAAclB,MAAd,GAAuBa,MAAM,CAAC0D,QAA/B,GAA2C,GAFtD;AAGI,IAAA,WAAW,EAAE,GAHjB;AAII,IAAA,OAAO,EAAC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAxEJ,EAoFI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQzB,IAAI,CAACpD,GAAL,CAAS,CAAC8E,GAAD,EAAMzE,CAAN,KACL,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQyE,GAAG,CAAC9D,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgBhB,GAAhB,CAAoB,CAAC+E,IAAD,EAAOC,CAAP,KAChB,oBAAC,SAAD;AACI,IAAA,GAAG,EAAEA,CADT;AAEI,IAAA,SAAS,EAAEA,CAAC,KAAK,CAAN,GAAU,MAAV,GAAmB,EAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKD,IAHL,CADJ,CAFR,CADJ,EAaQnD,QAAQ,CAACT,MAAM,CAACK,MAAP,CAAcnB,CAAd,CAAD,CAAR,IACA,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEpB,UAAtB;AAAkC,IAAA,KAAK,EAAE;AACrC,iBAAW;AAD0B,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAM,IAAA,KAAK,EAAE;AAAC,iBAAW;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,QAEQ6F,GAAG,CAAC,CAAD,CAAH,CAAOxB,OAAP,CAAe2B,MAFvB,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAHJ,EASI;AAAM,IAAA,KAAK,EAAE;AAAC,iBAAW;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,QAEQH,GAAG,CAAC,CAAD,CAAH,CAAOjB,KAAP,CAAa,8BAAb,CAFR,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CATJ,EAeI;AAAM,IAAA,KAAK,EAAE;AAAC,iBAAW;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,OAEQiB,GAAG,CAAC,CAAD,CAAH,CAAOjB,KAAP,CAAa,eAAb,CAFR,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAfJ,CADJ,CAdR,CADJ,CAFR,CAFJ,CApFJ,CANJ,CADJ;AA+IH,CAxOD;;AA0OA5C,kBAAkB,CAACiE,SAAnB,GAA+B;AAC3B,kBAAgB7G,SAAS,CAACqD,MADC;AAE3B,uBAAqBrD,SAAS,CAAC8G;AAFJ,CAA/B;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChC,aAAWA,KAAK,CAACC,MAAN,CAAa,eAAb,CADqB;AAEhC,sBAAoBD,KAAK,CAACC,MAAN,CAAa,kBAAb,CAFY;AAGhC,cAAYD,KAAK,CAACE,KAAN,CAAY,aAAZ,CAHoB;AAIhC,iBAAeF,KAAK,CAACE,KAAN,CAAY,gBAAZ,CAJiB;AAKhC,aAAWF,KAAK,CAACE,KAAN,CAAY,YAAZ,CALqB;AAMhC,kBAAgBF,KAAK,CAACC,MAAN,CAAa,cAAb,CANgB;AAOhC,iBAAeD,KAAK,CAACG;AAPW,CAAZ,CAAxB;;AAUA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtC,yBAAuBvH,kBAAkB,CAACC,mBAAD,EAAsBsH,QAAtB;AADH,CAAf,CAA3B;;AAIA,eAAexH,OAAO,CAClBkH,eADkB,EAElBK,kBAFkB,CAAP,CAGbxE,kBAHa,CAAf","sourcesContent":["import {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as registrationActions from \"../../../actions/registrationActions\";\nimport PropTypes from \"prop-types\";\nimport React, {useState, Fragment} from \"react\";\nimport BackButton from \"../../BackButton.js\";\nimport RegistrationActions from \"./RegistrationActions\";\nimport \"../../../theme/theme.scss\";\n\n// Material UI Imports\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClassIcon from \"@material-ui/icons/Class\";\nimport {Divider, LinearProgress, TableBody, Typography} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport DownArrow from \"@material-ui/icons/KeyboardArrowDown\";\nimport UpArrow from \"@material-ui/icons/KeyboardArrowUp\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayRounded\";\nimport Button from \"@material-ui/core/Button\";\nimport {NavLink} from \"react-router-dom\";\n\nconst TableToolbar = () => (\n    <TableHead>\n        <TableRow>\n            {[\"Student\", \"Parent\", \"Phone\", \"Status\", \"\"].map((heading) => (\n                <TableCell\n                    key={heading}\n                    align=\"left\"\n                    padding=\"default\">\n                    {heading}\n                </TableCell>\n            ))}\n        </TableRow>\n    </TableHead>\n);\n\nconst stringToColor = (string) => {\n    let hash = 0;\n    let i;\n\n    for (i = 0; i < string.length; i += 1) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = \"#\";\n\n    for (i = 0; i < 3; i += 1) {\n        const value = (hash >> (i * 8)) & 0xff;\n        color += `00${value.toString(16)}`.substr(-2);\n    }\n\n    return color;\n};\n\nconst styles = (username) => ({\n    \"backgroundColor\": stringToColor(username),\n    \"color\": \"white\",\n    \"width\": 38,\n    \"height\": 38,\n    \"fontSize\": 14,\n    \"border\": \"1px solid white\",\n});\n\nconst formatPhone = (phone) => phone &&\n    `${phone.slice(0, 3)}-${phone.slice(3, 6)}-${phone.slice(6, 15)}`;\n\nconst RegistrationCourse = (props) => {\n    const course = props.courses[props.match.params.courseID];\n    const [expanded, setExpanded] = useState(\n        course.roster.reduce((object, studentID) =>\n            ({...object, [studentID]: false})), {}\n    );\n\n    const dayConverter = {\n        \"1\": \"Monday\",\n        \"2\": \"Tuesday\",\n        \"3\": \"Wednesday\",\n        \"4\": \"Thursday\",\n        \"5\": \"Friday\",\n        \"6\": \"Saturday\",\n    };\n\n    const days = course.schedule.days.map((day) => dayConverter[day]);\n\n    const timeOptions = {\"hour\": \"2-digit\", \"minute\": \"2-digit\"};\n    const dateOptions = {\"year\": \"numeric\", \"month\": \"short\", \"day\": \"numeric\"};\n\n    const startDate = new Date(course.schedule.start_date +\n        course.schedule.start_time),\n        endDate = new Date(course.schedule.end_date +\n            course.schedule.end_time),\n        startTime = startDate.toLocaleTimeString(\"en-US\", timeOptions),\n        endTime = endDate.toLocaleTimeString(\"en-US\", timeOptions),\n        startDay = startDate.toLocaleDateString(\"en-US\", dateOptions),\n        endDay = endDate.toLocaleDateString(\"en-US\", dateOptions);\n\n    const instructor = props.instructors[course.instructor_id];\n\n    const rows = course.roster.map((student_id) => {\n        const student = props.students[student_id];\n        const parent = props.parents[student.parent_id];\n        const {notes, session_payment_status} = props.enrollments[student_id][course.course_id];\n        const paymentStatus = Object.values(session_payment_status).every((status) => status !== 0);\n        return [\n            (\n                <NavLink key={student_id}\n                    isActive={() => false}\n                    style={{\n                        \"textDecoration\": \"none\",\n                        \"color\": \"inherit\",\n                    }}\n                    to={`/accounts/student/${student_id}`}>\n                    {student.name}\n                </NavLink>\n            ),\n            (\n                <NavLink key={student_id}\n                    isActive={() => false}\n                    style={{\n                        \"textDecoration\": \"none\",\n                        \"color\": \"inherit\",\n                    }}\n                    to={`/accounts/parent/${student.parent_id}`}>\n                    {parent.name}\n                </NavLink>\n            ),\n            formatPhone(parent.phone_number),\n            (\n                <div\n                    key={student_id}\n                    style={{\n                        \"padding\": \"5px 0\",\n                        \"borderRadius\": \"10px\",\n                        \"backgroundColor\": paymentStatus ? \"#28D52A\" : \"#E9515B\",\n                        \"textAlign\": \"center\",\n                        \"width\": \"7vw\",\n                        \"color\": \"white\",\n                    }}>\n                    {paymentStatus ? \"Paid\" : \"Unpaid\"}\n                </div>\n            ),\n            (\n                <div key={student_id} className=\"actions\">\n                    <a href={`mailto:${parent.email}`}>\n                        <EmailIcon />\n                    </a>\n                </div>\n            ),\n            {\n                notes,\n                student,\n            },\n        ];\n    });\n\n    return (\n        <Grid item xs={12}>\n            <Paper className=\"paper\">\n                <Grid item lg={12}>\n                    <RegistrationActions courseTitle={course.course_title} />\n                </Grid>\n            </Paper>\n            <Paper className=\"paper content\">\n                <Grid container justify=\"space-between\">\n                    <Grid item sm={3}>\n                        <BackButton />\n                    </Grid>\n                    <Grid item sm={2}>\n                        <Button\n                            className=\"button\"\n                            style={{\n                                \"padding\": \"6px 10px 6px 10px\",\n                                \"backgroundColor\": \"white\",\n                            }}>\n                            <EditIcon style={{\"fontSize\": \"16px\"}} />\n                            Edit Course\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Divider className=\"top-divider\" />\n                <div className=\"course-heading\">\n                    <Typography\n                        align=\"left\"\n                        variant=\"h3\"\n                        style={{\"fontWeight\": \"500\"}}>\n                        {course.title}\n                    </Typography>\n                    <div className=\"date\">\n                        <CalendarIcon\n                            style={{\"fontSize\": \"16\"}}\n                            align=\"left\"\n                            className=\"icon\" />\n                        <Typography\n                            align=\"left\"\n                            style={{\n                                \"marginLeft\": \"5px\",\n                                \"marginTop\": \"10px\",\n                            }}>\n                            {startDay} - {endDay}\n                        </Typography>\n                    </div>\n                    <div className=\"info-section\">\n                        <div className=\"first-line\">\n                            <ClassIcon style={{\"fontSize\": \"16\"}} className=\"icon\" />\n                            <Typography align=\"left\" className=\"text\">\n                                Course Information\n                            </Typography>\n                        </div>\n                        <div className=\"second-line\">\n                            <Chip\n                                avatar={\n                                    <Avatar style={styles(instructor.name)}>\n                                        {instructor.name.match(/\\b(\\w)/g).join(\"\")}\n                                    </Avatar>\n                                }\n                                label={instructor.name}\n                                component={NavLink}\n                                to={`/accounts/instructor/${instructor.user_id}`}\n                                className=\"chip\" />\n                            <Typography align=\"left\" className=\"text\">\n                                {startTime} - {endTime}\n                            </Typography>\n                            <Typography align=\"left\" className=\"text\">\n                                {days}\n                            </Typography>\n                            <Typography align=\"left\" className=\"text\">\n                                {course.grade} Grade\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n                <Typography align=\"left\" className=\"description text\">\n                    {course.description}\n                </Typography>\n                <div className=\"course-status\">\n                    <div className=\"status\">\n                        <div className=\"text\">\n                            {course.roster.length} / {course.capacity} Spaces Taken\n                        </div>\n                    </div>\n                    <LinearProgress\n                        color=\"primary\"\n                        value={(course.roster.length / course.capacity) * 100}\n                        valueBuffer={100}\n                        variant=\"buffer\" />\n                </div>\n                <Table>\n                    <TableToolbar />\n                    <TableBody>\n                        {\n                            rows.map((row, i) => (\n                                <Fragment key={i}>\n                                    <TableRow>\n                                        {\n                                            row.slice(0, 5).map((data, j) => (\n                                                <TableCell\n                                                    key={j}\n                                                    className={j === 0 ? \"bold\" : \"\"}>\n                                                    {data}\n                                                </TableCell>\n                                            ))\n                                        }\n                                    </TableRow>\n                                    {\n                                        expanded[course.roster[i]] &&\n                                        <TableRow align=\"left\">\n                                            <TableCell component={Typography} style={{\n                                                \"padding\": \"10px 0 10px 20px\",\n                                            }}>\n                                                <span style={{\"padding\": \"5px\"}}>\n                                                    <b>School</b>: {\n                                                        row[5].student.school\n                                                    }\n                                                    <br />\n                                                </span>\n                                                <span style={{\"padding\": \"5px\"}}>\n                                                    <b>School Teacher</b>: {\n                                                        row[5].notes[\"Current Instructor in School\"]\n                                                    }\n                                                    <br />\n                                                </span>\n                                                <span style={{\"padding\": \"5px\"}}>\n                                                    <b>Textbook:</b> {\n                                                        row[5].notes[\"Textbook Used\"]\n                                                    }\n                                                    <br />\n                                                </span>\n                                            </TableCell>\n                                        </TableRow>\n                                    }\n                                </Fragment>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n            </Paper>\n        </Grid>\n    );\n};\n\nRegistrationCourse.propTypes = {\n    \"stuffActions\": PropTypes.object,\n    \"RegistrationForms\": PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n    \"courses\": state.Course[\"NewCourseList\"],\n    \"courseCategories\": state.Course[\"CourseCategories\"],\n    \"students\": state.Users[\"StudentList\"],\n    \"instructors\": state.Users[\"InstructorList\"],\n    \"parents\": state.Users[\"ParentList\"],\n    \"courseRoster\": state.Course[\"CourseRoster\"],\n    \"enrollments\": state.Enrollments,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    \"registrationActions\": bindActionCreators(registrationActions, dispatch),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegistrationCourse);\n"]},"metadata":{},"sourceType":"module"}